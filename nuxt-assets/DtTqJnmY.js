const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./wtksYsYs.js","./Bwe7s7JW.js","./404.BH_YH73u.css","./52Xs3SHz.js","./9IrlZHPP.js","./about.DjAiRAjB.css","./BkDon2iG.js","./index.CrT743Sw.css","./BKihVEx9.js","./loading.Bg-FINYX.css","./C0QXg0bY.js","./DRo2fHHm.js","./Dzd8mdxt.js","./ProjectCard.D3lx5y9c.css","./index.P8Q5GhVO.css","./DB1ks7Xh.js","./ProjectDetail.WQ-CJI5d.css","./DduxfLQ8.js","./default.poKyivK1.css","./Be_ab6UP.js","./qXAomcMk.js","./error-404.DlVPZ4GE.css","./WHaUAy5Z.js","./error-500.DjyirMQI.css"])))=>i.map(i=>d[i]);
(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
* @vue/shared v3.5.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Vo(n){const e=Object.create(null);for(const t of n.split(","))e[t]=1;return t=>t in e}const _2={},S0=[],ge=()=>{},ll=()=>!1,Pn=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&(n.charCodeAt(2)>122||n.charCodeAt(2)<97),Go=n=>n.startsWith("onUpdate:"),G2=Object.assign,Wo=(n,e)=>{const t=n.indexOf(e);t>-1&&n.splice(t,1)},M5=Object.prototype.hasOwnProperty,x2=(n,e)=>M5.call(n,e),J1=Array.isArray,E0=n=>Ln(n)==="[object Map]",cl=n=>Ln(n)==="[object Set]",S5=n=>Ln(n)==="[object RegExp]",e2=n=>typeof n=="function",D2=n=>typeof n=="string",We=n=>typeof n=="symbol",R2=n=>n!==null&&typeof n=="object",ul=n=>(R2(n)||e2(n))&&e2(n.then)&&e2(n.catch),fl=Object.prototype.toString,Ln=n=>fl.call(n),E5=n=>Ln(n).slice(8,-1),hl=n=>Ln(n)==="[object Object]",Xo=n=>D2(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,b0=Vo(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),rr=n=>{const e=Object.create(null);return(t=>e[t]||(e[t]=n(t)))},b5=/-\w/g,U3=rr(n=>n.replace(b5,e=>e.slice(1).toUpperCase())),T5=/\B([A-Z])/g,gt=rr(n=>n.replace(T5,"-$1").toLowerCase()),sr=rr(n=>n.charAt(0).toUpperCase()+n.slice(1)),Tr=rr(n=>n?`on${sr(n)}`:""),y3=(n,e)=>!Object.is(n,e),un=(n,...e)=>{for(let t=0;t<n.length;t++)n[t](...e)},dl=(n,e,t,i=!1)=>{Object.defineProperty(n,e,{configurable:!0,enumerable:!1,writable:i,value:t})},w5=n=>{const e=parseFloat(n);return isNaN(e)?n:e},pl=n=>{const e=D2(n)?Number(n):NaN;return isNaN(e)?n:e};let Na;const or=()=>Na||(Na=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function ar(n){if(J1(n)){const e={};for(let t=0;t<n.length;t++){const i=n[t],r=D2(i)?P5(i):ar(i);if(r)for(const s in r)e[s]=r[s]}return e}else if(D2(n)||R2(n))return n}const A5=/;(?![^(]*\))/g,C5=/:([^]+)/,R5=/\/\*[^]*?\*\//g;function P5(n){const e={};return n.replace(R5,"").split(A5).forEach(t=>{if(t){const i=t.split(C5);i.length>1&&(e[i[0].trim()]=i[1].trim())}}),e}function lr(n){let e="";if(D2(n))e=n;else if(J1(n))for(let t=0;t<n.length;t++){const i=lr(n[t]);i&&(e+=i+" ")}else if(R2(n))for(const t in n)n[t]&&(e+=t+" ");return e.trim()}function L5(n){if(!n)return null;let{class:e,style:t}=n;return e&&!D2(e)&&(n.class=lr(e)),t&&(n.style=ar(t)),n}const I5="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",D5=Vo(I5);function ml(n){return!!n||n===""}const _l=n=>!!(n&&n.__v_isRef===!0),U5=n=>D2(n)?n:n==null?"":J1(n)||R2(n)&&(n.toString===fl||!e2(n.toString))?_l(n)?U5(n.value):JSON.stringify(n,gl,2):String(n),gl=(n,e)=>_l(e)?gl(n,e.value):E0(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[i,r],s)=>(t[wr(i,s)+" =>"]=r,t),{})}:cl(e)?{[`Set(${e.size})`]:[...e.values()].map(t=>wr(t))}:We(e)?wr(e):R2(e)&&!J1(e)&&!hl(e)?String(e):e,wr=(n,e="")=>{var t;return We(n)?`Symbol(${(t=n.description)!=null?t:e})`:n};/**
* @vue/reactivity v3.5.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let g3;class vl{constructor(e=!1){this.detached=e,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=g3,!e&&g3&&(this.index=(g3.scopes||(g3.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].pause();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].resume();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].resume()}}run(e){if(this._active){const t=g3;try{return g3=this,e()}finally{g3=t}}}on(){++this._on===1&&(this.prevScope=g3,g3=this)}off(){this._on>0&&--this._on===0&&(g3=this.prevScope,this.prevScope=void 0)}stop(e){if(this._active){this._active=!1;let t,i;for(t=0,i=this.effects.length;t<i;t++)this.effects[t].stop();for(this.effects.length=0,t=0,i=this.cleanups.length;t<i;t++)this.cleanups[t]();if(this.cleanups.length=0,this.scopes){for(t=0,i=this.scopes.length;t<i;t++)this.scopes[t].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0}}}function O5(n){return new vl(n)}function yl(){return g3}let A2;const Ar=new WeakSet;class xl{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,g3&&g3.active&&g3.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Ar.has(this)&&(Ar.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||Sl(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Ba(this),El(this);const e=A2,t=Q3;A2=this,Q3=!0;try{return this.fn()}finally{bl(this),A2=e,Q3=t,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)jo(e);this.deps=this.depsTail=void 0,Ba(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Ar.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){As(this)&&this.run()}get dirty(){return As(this)}}let Ml=0,fn,hn;function Sl(n,e=!1){if(n.flags|=8,e){n.next=hn,hn=n;return}n.next=fn,fn=n}function $o(){Ml++}function qo(){if(--Ml>0)return;if(hn){let e=hn;for(hn=void 0;e;){const t=e.next;e.next=void 0,e.flags&=-9,e=t}}let n;for(;fn;){let e=fn;for(fn=void 0;e;){const t=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(i){n||(n=i)}e=t}}if(n)throw n}function El(n){for(let e=n.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function bl(n){let e,t=n.depsTail,i=t;for(;i;){const r=i.prevDep;i.version===-1?(i===t&&(t=r),jo(i),F5(i)):e=i,i.dep.activeLink=i.prevActiveLink,i.prevActiveLink=void 0,i=r}n.deps=e,n.depsTail=t}function As(n){for(let e=n.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(Tl(e.dep.computed)||e.dep.version!==e.version))return!0;return!!n._dirty}function Tl(n){if(n.flags&4&&!(n.flags&16)||(n.flags&=-17,n.globalVersion===vn)||(n.globalVersion=vn,!n.isSSR&&n.flags&128&&(!n.deps&&!n._dirty||!As(n))))return;n.flags|=2;const e=n.dep,t=A2,i=Q3;A2=n,Q3=!0;try{El(n);const r=n.fn(n._value);(e.version===0||y3(r,n._value))&&(n.flags|=128,n._value=r,e.version++)}catch(r){throw e.version++,r}finally{A2=t,Q3=i,bl(n),n.flags&=-3}}function jo(n,e=!1){const{dep:t,prevSub:i,nextSub:r}=n;if(i&&(i.nextSub=r,n.prevSub=void 0),r&&(r.prevSub=i,n.nextSub=void 0),t.subs===n&&(t.subs=i,!i&&t.computed)){t.computed.flags&=-5;for(let s=t.computed.deps;s;s=s.nextDep)jo(s,!0)}!e&&!--t.sc&&t.map&&t.map.delete(t.key)}function F5(n){const{prevDep:e,nextDep:t}=n;e&&(e.nextDep=t,n.prevDep=void 0),t&&(t.prevDep=e,n.nextDep=void 0)}let Q3=!0;const wl=[];function Ne(){wl.push(Q3),Q3=!1}function Be(){const n=wl.pop();Q3=n===void 0?!0:n}function Ba(n){const{cleanup:e}=n;if(n.cleanup=void 0,e){const t=A2;A2=void 0;try{e()}finally{A2=t}}}let vn=0;class N5{constructor(e,t){this.sub=e,this.dep=t,this.version=t.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class cr{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0,this.__v_skip=!0}track(e){if(!A2||!Q3||A2===this.computed)return;let t=this.activeLink;if(t===void 0||t.sub!==A2)t=this.activeLink=new N5(A2,this),A2.deps?(t.prevDep=A2.depsTail,A2.depsTail.nextDep=t,A2.depsTail=t):A2.deps=A2.depsTail=t,Al(t);else if(t.version===-1&&(t.version=this.version,t.nextDep)){const i=t.nextDep;i.prevDep=t.prevDep,t.prevDep&&(t.prevDep.nextDep=i),t.prevDep=A2.depsTail,t.nextDep=void 0,A2.depsTail.nextDep=t,A2.depsTail=t,A2.deps===t&&(A2.deps=i)}return t}trigger(e){this.version++,vn++,this.notify(e)}notify(e){$o();try{for(let t=this.subs;t;t=t.prevSub)t.sub.notify()&&t.sub.dep.notify()}finally{qo()}}}function Al(n){if(n.dep.sc++,n.sub.flags&4){const e=n.dep.computed;if(e&&!n.dep.subs){e.flags|=20;for(let i=e.deps;i;i=i.nextDep)Al(i)}const t=n.dep.subs;t!==n&&(n.prevSub=t,t&&(t.nextSub=n)),n.dep.subs=n}}const Oi=new WeakMap,Ht=Symbol(""),Cs=Symbol(""),yn=Symbol("");function s3(n,e,t){if(Q3&&A2){let i=Oi.get(n);i||Oi.set(n,i=new Map);let r=i.get(t);r||(i.set(t,r=new cr),r.map=i,r.key=t),r.track()}}function Le(n,e,t,i,r,s){const o=Oi.get(n);if(!o){vn++;return}const a=l=>{l&&l.trigger()};if($o(),e==="clear")o.forEach(a);else{const l=J1(n),u=l&&Xo(t);if(l&&t==="length"){const c=Number(i);o.forEach((f,h)=>{(h==="length"||h===yn||!We(h)&&h>=c)&&a(f)})}else switch((t!==void 0||o.has(void 0))&&a(o.get(t)),u&&a(o.get(yn)),e){case"add":l?u&&a(o.get("length")):(a(o.get(Ht)),E0(n)&&a(o.get(Cs)));break;case"delete":l||(a(o.get(Ht)),E0(n)&&a(o.get(Cs)));break;case"set":E0(n)&&a(o.get(Ht));break}}qo()}function B5(n,e){const t=Oi.get(n);return t&&t.get(e)}function n0(n){const e=f2(n);return e===n?e:(s3(e,"iterate",yn),G3(n)?e:e.map(e3))}function ur(n){return s3(n=f2(n),"iterate",yn),n}const k5={__proto__:null,[Symbol.iterator](){return Cr(this,Symbol.iterator,e3)},concat(...n){return n0(this).concat(...n.map(e=>J1(e)?n0(e):e))},entries(){return Cr(this,"entries",n=>(n[1]=e3(n[1]),n))},every(n,e){return xe(this,"every",n,e,void 0,arguments)},filter(n,e){return xe(this,"filter",n,e,t=>t.map(e3),arguments)},find(n,e){return xe(this,"find",n,e,e3,arguments)},findIndex(n,e){return xe(this,"findIndex",n,e,void 0,arguments)},findLast(n,e){return xe(this,"findLast",n,e,e3,arguments)},findLastIndex(n,e){return xe(this,"findLastIndex",n,e,void 0,arguments)},forEach(n,e){return xe(this,"forEach",n,e,void 0,arguments)},includes(...n){return Rr(this,"includes",n)},indexOf(...n){return Rr(this,"indexOf",n)},join(n){return n0(this).join(n)},lastIndexOf(...n){return Rr(this,"lastIndexOf",n)},map(n,e){return xe(this,"map",n,e,void 0,arguments)},pop(){return Z0(this,"pop")},push(...n){return Z0(this,"push",n)},reduce(n,...e){return ka(this,"reduce",n,e)},reduceRight(n,...e){return ka(this,"reduceRight",n,e)},shift(){return Z0(this,"shift")},some(n,e){return xe(this,"some",n,e,void 0,arguments)},splice(...n){return Z0(this,"splice",n)},toReversed(){return n0(this).toReversed()},toSorted(n){return n0(this).toSorted(n)},toSpliced(...n){return n0(this).toSpliced(...n)},unshift(...n){return Z0(this,"unshift",n)},values(){return Cr(this,"values",e3)}};function Cr(n,e,t){const i=ur(n),r=i[e]();return i!==n&&!G3(n)&&(r._next=r.next,r.next=()=>{const s=r._next();return s.value&&(s.value=t(s.value)),s}),r}const H5=Array.prototype;function xe(n,e,t,i,r,s){const o=ur(n),a=o!==n&&!G3(n),l=o[e];if(l!==H5[e]){const f=l.apply(n,s);return a?e3(f):f}let u=t;o!==n&&(a?u=function(f,h){return t.call(this,e3(f),h,n)}:t.length>2&&(u=function(f,h){return t.call(this,f,h,n)}));const c=l.call(o,u,i);return a&&r?r(c):c}function ka(n,e,t,i){const r=ur(n);let s=t;return r!==n&&(G3(n)?t.length>3&&(s=function(o,a,l){return t.call(this,o,a,l,n)}):s=function(o,a,l){return t.call(this,o,e3(a),l,n)}),r[e](s,...i)}function Rr(n,e,t){const i=f2(n);s3(i,"iterate",yn);const r=i[e](...t);return(r===-1||r===!1)&&Zo(t[0])?(t[0]=f2(t[0]),i[e](...t)):r}function Z0(n,e,t=[]){Ne(),$o();const i=f2(n)[e].apply(n,t);return qo(),Be(),i}const z5=Vo("__proto__,__v_isRef,__isVue"),Cl=new Set(Object.getOwnPropertyNames(Symbol).filter(n=>n!=="arguments"&&n!=="caller").map(n=>Symbol[n]).filter(We));function V5(n){We(n)||(n=String(n));const e=f2(this);return s3(e,"has",n),e.hasOwnProperty(n)}class Rl{constructor(e=!1,t=!1){this._isReadonly=e,this._isShallow=t}get(e,t,i){if(t==="__v_skip")return e.__v_skip;const r=this._isReadonly,s=this._isShallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return s;if(t==="__v_raw")return i===(r?s?J5:Dl:s?Il:Ll).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(i)?e:void 0;const o=J1(e);if(!r){let l;if(o&&(l=k5[t]))return l;if(t==="hasOwnProperty")return V5}const a=Reflect.get(e,t,z2(e)?e:i);return(We(t)?Cl.has(t):z5(t))||(r||s3(e,"get",t),s)?a:z2(a)?o&&Xo(t)?a:a.value:R2(a)?r?Ul(a):vt(a):a}}class Pl extends Rl{constructor(e=!1){super(!1,e)}set(e,t,i,r){let s=e[t];if(!this._isShallow){const l=ke(s);if(!G3(i)&&!ke(i)&&(s=f2(s),i=f2(i)),!J1(e)&&z2(s)&&!z2(i))return l||(s.value=i),!0}const o=J1(e)&&Xo(t)?Number(t)<e.length:x2(e,t),a=Reflect.set(e,t,i,z2(e)?e:r);return e===f2(r)&&(o?y3(i,s)&&Le(e,"set",t,i):Le(e,"add",t,i)),a}deleteProperty(e,t){const i=x2(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&i&&Le(e,"delete",t,void 0),r}has(e,t){const i=Reflect.has(e,t);return(!We(t)||!Cl.has(t))&&s3(e,"has",t),i}ownKeys(e){return s3(e,"iterate",J1(e)?"length":Ht),Reflect.ownKeys(e)}}class G5 extends Rl{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const W5=new Pl,X5=new G5,$5=new Pl(!0);const Rs=n=>n,qn=n=>Reflect.getPrototypeOf(n);function q5(n,e,t){return function(...i){const r=this.__v_raw,s=f2(r),o=E0(s),a=n==="entries"||n===Symbol.iterator&&o,l=n==="keys"&&o,u=r[n](...i),c=t?Rs:e?Fi:e3;return!e&&s3(s,"iterate",l?Cs:Ht),{next(){const{value:f,done:h}=u.next();return h?{value:f,done:h}:{value:a?[c(f[0]),c(f[1])]:c(f),done:h}},[Symbol.iterator](){return this}}}}function jn(n){return function(...e){return n==="delete"?!1:n==="clear"?void 0:this}}function j5(n,e){const t={get(r){const s=this.__v_raw,o=f2(s),a=f2(r);n||(y3(r,a)&&s3(o,"get",r),s3(o,"get",a));const{has:l}=qn(o),u=e?Rs:n?Fi:e3;if(l.call(o,r))return u(s.get(r));if(l.call(o,a))return u(s.get(a));s!==o&&s.get(r)},get size(){const r=this.__v_raw;return!n&&s3(f2(r),"iterate",Ht),r.size},has(r){const s=this.__v_raw,o=f2(s),a=f2(r);return n||(y3(r,a)&&s3(o,"has",r),s3(o,"has",a)),r===a?s.has(r):s.has(r)||s.has(a)},forEach(r,s){const o=this,a=o.__v_raw,l=f2(a),u=e?Rs:n?Fi:e3;return!n&&s3(l,"iterate",Ht),a.forEach((c,f)=>r.call(s,u(c),u(f),o))}};return G2(t,n?{add:jn("add"),set:jn("set"),delete:jn("delete"),clear:jn("clear")}:{add(r){!e&&!G3(r)&&!ke(r)&&(r=f2(r));const s=f2(this);return qn(s).has.call(s,r)||(s.add(r),Le(s,"add",r,r)),this},set(r,s){!e&&!G3(s)&&!ke(s)&&(s=f2(s));const o=f2(this),{has:a,get:l}=qn(o);let u=a.call(o,r);u||(r=f2(r),u=a.call(o,r));const c=l.call(o,r);return o.set(r,s),u?y3(s,c)&&Le(o,"set",r,s):Le(o,"add",r,s),this},delete(r){const s=f2(this),{has:o,get:a}=qn(s);let l=o.call(s,r);l||(r=f2(r),l=o.call(s,r)),a&&a.call(s,r);const u=s.delete(r);return l&&Le(s,"delete",r,void 0),u},clear(){const r=f2(this),s=r.size!==0,o=r.clear();return s&&Le(r,"clear",void 0,void 0),o}}),["keys","values","entries",Symbol.iterator].forEach(r=>{t[r]=q5(r,n,e)}),t}function Yo(n,e){const t=j5(n,e);return(i,r,s)=>r==="__v_isReactive"?!n:r==="__v_isReadonly"?n:r==="__v_raw"?i:Reflect.get(x2(t,r)&&r in i?t:i,r,s)}const Y5={get:Yo(!1,!1)},K5={get:Yo(!1,!0)},Z5={get:Yo(!0,!1)};const Ll=new WeakMap,Il=new WeakMap,Dl=new WeakMap,J5=new WeakMap;function Q5(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function eu(n){return n.__v_skip||!Object.isExtensible(n)?0:Q5(E5(n))}function vt(n){return ke(n)?n:Ko(n,!1,W5,Y5,Ll)}function de(n){return Ko(n,!1,$5,K5,Il)}function Ul(n){return Ko(n,!0,X5,Z5,Dl)}function Ko(n,e,t,i,r){if(!R2(n)||n.__v_raw&&!(e&&n.__v_isReactive))return n;const s=eu(n);if(s===0)return n;const o=r.get(n);if(o)return o;const a=new Proxy(n,s===2?i:t);return r.set(n,a),a}function zt(n){return ke(n)?zt(n.__v_raw):!!(n&&n.__v_isReactive)}function ke(n){return!!(n&&n.__v_isReadonly)}function G3(n){return!!(n&&n.__v_isShallow)}function Zo(n){return n?!!n.__v_raw:!1}function f2(n){const e=n&&n.__v_raw;return e?f2(e):n}function tu(n){return!x2(n,"__v_skip")&&Object.isExtensible(n)&&dl(n,"__v_skip",!0),n}const e3=n=>R2(n)?vt(n):n,Fi=n=>R2(n)?Ul(n):n;function z2(n){return n?n.__v_isRef===!0:!1}function ve(n){return Ol(n,!1)}function Xt(n){return Ol(n,!0)}function Ol(n,e){return z2(n)?n:new nu(n,e)}class nu{constructor(e,t){this.dep=new cr,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=t?e:f2(e),this._value=t?e:e3(e),this.__v_isShallow=t}get value(){return this.dep.track(),this._value}set value(e){const t=this._rawValue,i=this.__v_isShallow||G3(e)||ke(e);e=i?e:f2(e),y3(e,t)&&(this._rawValue=e,this._value=i?e:e3(e),this.dep.trigger())}}function C2(n){return z2(n)?n.value:n}function iu(n){return e2(n)?n():C2(n)}const ru={get:(n,e,t)=>e==="__v_raw"?n:C2(Reflect.get(n,e,t)),set:(n,e,t,i)=>{const r=n[e];return z2(r)&&!z2(t)?(r.value=t,!0):Reflect.set(n,e,t,i)}};function Fl(n){return zt(n)?n:new Proxy(n,ru)}class su{constructor(e){this.__v_isRef=!0,this._value=void 0;const t=this.dep=new cr,{get:i,set:r}=e(t.track.bind(t),t.trigger.bind(t));this._get=i,this._set=r}get value(){return this._value=this._get()}set value(e){this._set(e)}}function ou(n){return new su(n)}function au(n){const e=J1(n)?new Array(n.length):{};for(const t in n)e[t]=Nl(n,t);return e}class lu{constructor(e,t,i){this._object=e,this._key=t,this._defaultValue=i,this.__v_isRef=!0,this._value=void 0}get value(){const e=this._object[this._key];return this._value=e===void 0?this._defaultValue:e}set value(e){this._object[this._key]=e}get dep(){return B5(f2(this._object),this._key)}}class cu{constructor(e){this._getter=e,this.__v_isRef=!0,this.__v_isReadonly=!0,this._value=void 0}get value(){return this._value=this._getter()}}function uu(n,e,t){return z2(n)?n:e2(n)?new cu(n):R2(n)&&arguments.length>1?Nl(n,e,t):ve(n)}function Nl(n,e,t){const i=n[e];return z2(i)?i:new lu(n,e,t)}class fu{constructor(e,t,i){this.fn=e,this.setter=t,this._value=void 0,this.dep=new cr(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=vn-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!t,this.isSSR=i}notify(){if(this.flags|=16,!(this.flags&8)&&A2!==this)return Sl(this,!0),!0}get value(){const e=this.dep.track();return Tl(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function hu(n,e,t=!1){let i,r;return e2(n)?i=n:(i=n.get,r=n.set),new fu(i,r,t)}const Yn={},Ni=new WeakMap;let Pt;function du(n,e=!1,t=Pt){if(t){let i=Ni.get(t);i||Ni.set(t,i=[]),i.push(n)}}function pu(n,e,t=_2){const{immediate:i,deep:r,once:s,scheduler:o,augmentJob:a,call:l}=t,u=_=>r?_:G3(_)||r===!1||r===0?at(_,1):at(_);let c,f,h,d,g=!1,y=!1;if(z2(n)?(f=()=>n.value,g=G3(n)):zt(n)?(f=()=>u(n),g=!0):J1(n)?(y=!0,g=n.some(_=>zt(_)||G3(_)),f=()=>n.map(_=>{if(z2(_))return _.value;if(zt(_))return u(_);if(e2(_))return l?l(_,2):_()})):e2(n)?e?f=l?()=>l(n,2):n:f=()=>{if(h){Ne();try{h()}finally{Be()}}const _=Pt;Pt=c;try{return l?l(n,3,[d]):n(d)}finally{Pt=_}}:f=ge,e&&r){const _=f,A=r===!0?1/0:r;f=()=>at(_(),A)}const m=yl(),p=()=>{c.stop(),m&&m.active&&Wo(m.effects,c)};if(s&&e){const _=e;e=(...A)=>{_(...A),p()}}let w=y?new Array(n.length).fill(Yn):Yn;const M=_=>{if(!(!(c.flags&1)||!c.dirty&&!_))if(e){const A=c.run();if(r||g||(y?A.some((R,D)=>y3(R,w[D])):y3(A,w))){h&&h();const R=Pt;Pt=c;try{const D=[A,w===Yn?void 0:y&&w[0]===Yn?[]:w,d];w=A,l?l(e,3,D):e(...D)}finally{Pt=R}}}else c.run()};return a&&a(M),c=new xl(f),c.scheduler=o?()=>o(M,!1):M,d=_=>du(_,!1,c),h=c.onStop=()=>{const _=Ni.get(c);if(_){if(l)l(_,4);else for(const A of _)A();Ni.delete(c)}},e?i?M(!0):w=c.run():o?o(M.bind(null,!0),!0):c.run(),p.pause=c.pause.bind(c),p.resume=c.resume.bind(c),p.stop=p,p}function at(n,e=1/0,t){if(e<=0||!R2(n)||n.__v_skip||(t=t||new Map,(t.get(n)||0)>=e))return n;if(t.set(n,e),e--,z2(n))at(n.value,e,t);else if(J1(n))for(let i=0;i<n.length;i++)at(n[i],e,t);else if(cl(n)||E0(n))n.forEach(i=>{at(i,e,t)});else if(hl(n)){for(const i in n)at(n[i],e,t);for(const i of Object.getOwnPropertySymbols(n))Object.prototype.propertyIsEnumerable.call(n,i)&&at(n[i],e,t)}return n}/**
* @vue/runtime-core v3.5.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function In(n,e,t,i){try{return i?n(...i):n()}catch(r){W0(r,e,t)}}function te(n,e,t,i){if(e2(n)){const r=In(n,e,t,i);return r&&ul(r)&&r.catch(s=>{W0(s,e,t)}),r}if(J1(n)){const r=[];for(let s=0;s<n.length;s++)r.push(te(n[s],e,t,i));return r}}function W0(n,e,t,i=!0){const r=e?e.vnode:null,{errorHandler:s,throwUnhandledErrorInProduction:o}=e&&e.appContext.config||_2;if(e){let a=e.parent;const l=e.proxy,u=`https://vuejs.org/error-reference/#runtime-${t}`;for(;a;){const c=a.ec;if(c){for(let f=0;f<c.length;f++)if(c[f](n,l,u)===!1)return}a=a.parent}if(s){Ne(),In(s,null,10,[n,l,u]),Be();return}}mu(n,t,r,i,o)}function mu(n,e,t,i=!0,r=!1){if(r)throw n;console.error(n)}const f3=[];let ue=-1;const T0=[];let rt=null,v0=0;const Bl=Promise.resolve();let Bi=null;function D0(n){const e=Bi||Bl;return n?e.then(this?n.bind(this):n):e}function _u(n){let e=ue+1,t=f3.length;for(;e<t;){const i=e+t>>>1,r=f3[i],s=xn(r);s<n||s===n&&r.flags&2?e=i+1:t=i}return e}function Jo(n){if(!(n.flags&1)){const e=xn(n),t=f3[f3.length-1];!t||!(n.flags&2)&&e>=xn(t)?f3.push(n):f3.splice(_u(e),0,n),n.flags|=1,kl()}}function kl(){Bi||(Bi=Bl.then(Hl))}function Ps(n){J1(n)?T0.push(...n):rt&&n.id===-1?rt.splice(v0+1,0,n):n.flags&1||(T0.push(n),n.flags|=1),kl()}function Ha(n,e,t=ue+1){for(;t<f3.length;t++){const i=f3[t];if(i&&i.flags&2){if(n&&i.id!==n.uid)continue;f3.splice(t,1),t--,i.flags&4&&(i.flags&=-2),i(),i.flags&4||(i.flags&=-2)}}}function ki(n){if(T0.length){const e=[...new Set(T0)].sort((t,i)=>xn(t)-xn(i));if(T0.length=0,rt){rt.push(...e);return}for(rt=e,v0=0;v0<rt.length;v0++){const t=rt[v0];t.flags&4&&(t.flags&=-2),t.flags&8||t(),t.flags&=-2}rt=null,v0=0}}const xn=n=>n.id==null?n.flags&2?-1:1/0:n.id;function Hl(n){try{for(ue=0;ue<f3.length;ue++){const e=f3[ue];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),In(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;ue<f3.length;ue++){const e=f3[ue];e&&(e.flags&=-2)}ue=-1,f3.length=0,ki(),Bi=null,(f3.length||T0.length)&&Hl()}}let h3=null,zl=null;function Hi(n){const e=h3;return h3=n,zl=n&&n.type.__scopeId||null,e}function Qo(n,e=h3,t){if(!e||n._n)return n;const i=(...r)=>{i._d&&Xi(-1);const s=Hi(e);let o;try{o=n(...r)}finally{Hi(s),i._d&&Xi(1)}return o};return i._n=!0,i._c=!0,i._d=!0,i}function fe(n,e,t,i){const r=n.dirs,s=e&&e.dirs;for(let o=0;o<r.length;o++){const a=r[o];s&&(a.oldValue=s[o].value);let l=a.dir[i];l&&(Ne(),te(l,t,8,[n.el,a,n,e]),Be())}}const gu=Symbol("_vte"),Vl=n=>n.__isTeleport,Pe=Symbol("_leaveCb"),Kn=Symbol("_enterCb");function Gl(){const n={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Un(()=>{n.isMounted=!0}),X0(()=>{n.isUnmounting=!0}),n}const B3=[Function,Array],Wl={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:B3,onEnter:B3,onAfterEnter:B3,onEnterCancelled:B3,onBeforeLeave:B3,onLeave:B3,onAfterLeave:B3,onLeaveCancelled:B3,onBeforeAppear:B3,onAppear:B3,onAfterAppear:B3,onAppearCancelled:B3},Xl=n=>{const e=n.subTree;return e.component?Xl(e.component):e},vu={name:"BaseTransition",props:Wl,setup(n,{slots:e}){const t=$e(),i=Gl();return()=>{const r=e.default&&ea(e.default(),!0);if(!r||!r.length)return;const s=$l(r),o=f2(n),{mode:a}=o;if(i.isLeaving)return Pr(s);const l=za(s);if(!l)return Pr(s);let u=Mn(l,o,i,t,f=>u=f);l.type!==k2&&pt(l,u);let c=t.subTree&&za(t.subTree);if(c&&c.type!==k2&&!j3(c,l)&&Xl(t).type!==k2){let f=Mn(c,o,i,t);if(pt(c,f),a==="out-in"&&l.type!==k2)return i.isLeaving=!0,f.afterLeave=()=>{i.isLeaving=!1,t.job.flags&8||t.update(),delete f.afterLeave,c=void 0},Pr(s);a==="in-out"&&l.type!==k2?f.delayLeave=(h,d,g)=>{const y=ql(i,c);y[String(c.key)]=c,h[Pe]=()=>{d(),h[Pe]=void 0,delete u.delayedLeave,c=void 0},u.delayedLeave=()=>{g(),delete u.delayedLeave,c=void 0}}:c=void 0}else c&&(c=void 0);return s}}};function $l(n){let e=n[0];if(n.length>1){for(const t of n)if(t.type!==k2){e=t;break}}return e}const yu=vu;function ql(n,e){const{leavingVNodes:t}=n;let i=t.get(e.type);return i||(i=Object.create(null),t.set(e.type,i)),i}function Mn(n,e,t,i,r){const{appear:s,mode:o,persisted:a=!1,onBeforeEnter:l,onEnter:u,onAfterEnter:c,onEnterCancelled:f,onBeforeLeave:h,onLeave:d,onAfterLeave:g,onLeaveCancelled:y,onBeforeAppear:m,onAppear:p,onAfterAppear:w,onAppearCancelled:M}=e,_=String(n.key),A=ql(t,n),R=(T,b)=>{T&&te(T,i,9,b)},D=(T,b)=>{const U=b[1];R(T,b),J1(T)?T.every(B=>B.length<=1)&&U():T.length<=1&&U()},L={mode:o,persisted:a,beforeEnter(T){let b=l;if(!t.isMounted)if(s)b=m||l;else return;T[Pe]&&T[Pe](!0);const U=A[_];U&&j3(n,U)&&U.el[Pe]&&U.el[Pe](),R(b,[T])},enter(T){let b=u,U=c,B=f;if(!t.isMounted)if(s)b=p||u,U=w||c,B=M||f;else return;let X=!1;const K=T[Kn]=a1=>{X||(X=!0,a1?R(B,[T]):R(U,[T]),L.delayedLeave&&L.delayedLeave(),T[Kn]=void 0)};b?D(b,[T,K]):K()},leave(T,b){const U=String(n.key);if(T[Kn]&&T[Kn](!0),t.isUnmounting)return b();R(h,[T]);let B=!1;const X=T[Pe]=K=>{B||(B=!0,b(),K?R(y,[T]):R(g,[T]),T[Pe]=void 0,A[U]===n&&delete A[U])};A[U]=n,d?D(d,[T,X]):X()},clone(T){const b=Mn(T,e,t,i,r);return r&&r(b),b}};return L}function Pr(n){if(Dn(n))return n=He(n),n.children=null,n}function za(n){if(!Dn(n))return Vl(n.type)&&n.children?$l(n.children):n;if(n.component)return n.component.subTree;const{shapeFlag:e,children:t}=n;if(t){if(e&16)return t[0];if(e&32&&e2(t.default))return t.default()}}function pt(n,e){n.shapeFlag&6&&n.component?(n.transition=e,pt(n.component.subTree,e)):n.shapeFlag&128?(n.ssContent.transition=e.clone(n.ssContent),n.ssFallback.transition=e.clone(n.ssFallback)):n.transition=e}function ea(n,e=!1,t){let i=[],r=0;for(let s=0;s<n.length;s++){let o=n[s];const a=t==null?o.key:String(t)+String(o.key!=null?o.key:s);o.type===K2?(o.patchFlag&128&&r++,i=i.concat(ea(o.children,e,a))):(e||o.type!==k2)&&i.push(a!=null?He(o,{key:a}):o)}if(r>1)for(let s=0;s<i.length;s++)i[s].patchFlag=-2;return i}function ie(n,e){return e2(n)?G2({name:n.name},e,{setup:n}):n}function ta(n){n.ids=[n.ids[0]+n.ids[2]+++"-",0,0]}function jx(n){const e=$e(),t=Xt(null);if(e){const r=e.refs===_2?e.refs={}:e.refs;Object.defineProperty(r,n,{enumerable:!0,get:()=>t.value,set:s=>t.value=s})}return t}const zi=new WeakMap;function w0(n,e,t,i,r=!1){if(J1(n)){n.forEach((g,y)=>w0(g,e&&(J1(e)?e[y]:e),t,i,r));return}if(ut(i)&&!r){i.shapeFlag&512&&i.type.__asyncResolved&&i.component.subTree.component&&w0(n,e,t,i.component.subTree);return}const s=i.shapeFlag&4?ca(i.component):i.el,o=r?null:s,{i:a,r:l}=n,u=e&&e.r,c=a.refs===_2?a.refs={}:a.refs,f=a.setupState,h=f2(f),d=f===_2?ll:g=>x2(h,g);if(u!=null&&u!==l){if(Va(e),D2(u))c[u]=null,d(u)&&(f[u]=null);else if(z2(u)){u.value=null;const g=e;g.k&&(c[g.k]=null)}}if(e2(l))In(l,a,12,[o,c]);else{const g=D2(l),y=z2(l);if(g||y){const m=()=>{if(n.f){const p=g?d(l)?f[l]:c[l]:l.value;if(r)J1(p)&&Wo(p,s);else if(J1(p))p.includes(s)||p.push(s);else if(g)c[l]=[s],d(l)&&(f[l]=c[l]);else{const w=[s];l.value=w,n.k&&(c[n.k]=w)}}else g?(c[l]=o,d(l)&&(f[l]=o)):y&&(l.value=o,n.k&&(c[n.k]=o))};if(o){const p=()=>{m(),zi.delete(n)};p.id=-1,zi.set(n,p),Q2(p,t)}else Va(n),m()}}}function Va(n){const e=zi.get(n);e&&(e.flags|=8,zi.delete(n))}let Ga=!1;const i0=()=>{Ga||(console.error("Hydration completed but contains mismatches."),Ga=!0)},xu=n=>n.namespaceURI.includes("svg")&&n.tagName!=="foreignObject",Mu=n=>n.namespaceURI.includes("MathML"),Zn=n=>{if(n.nodeType===1){if(xu(n))return"svg";if(Mu(n))return"mathml"}},x0=n=>n.nodeType===8;function Su(n){const{mt:e,p:t,o:{patchProp:i,createText:r,nextSibling:s,parentNode:o,remove:a,insert:l,createComment:u}}=n,c=(M,_)=>{if(!_.hasChildNodes()){t(null,M,_),ki(),_._vnode=M;return}f(_.firstChild,M,null,null,null),ki(),_._vnode=M},f=(M,_,A,R,D,L=!1)=>{L=L||!!_.dynamicChildren;const T=x0(M)&&M.data==="[",b=()=>y(M,_,A,R,D,T),{type:U,ref:B,shapeFlag:X,patchFlag:K}=_;let a1=M.nodeType;_.el=M,K===-2&&(L=!1,_.dynamicChildren=null);let z=null;switch(U){case Gt:a1!==3?_.children===""?(l(_.el=r(""),o(M),M),z=M):z=b():(M.data!==_.children&&(i0(),M.data=_.children),z=s(M));break;case k2:w(M)?(z=s(M),p(_.el=M.content.firstChild,M,A)):a1!==8||T?z=b():z=s(M);break;case bi:if(T&&(M=s(M),a1=M.nodeType),a1===1||a1===3){z=M;const r1=!_.children.length;for(let H=0;H<_.staticCount;H++)r1&&(_.children+=z.nodeType===1?z.outerHTML:z.data),H===_.staticCount-1&&(_.anchor=z),z=s(z);return T?s(z):z}else b();break;case K2:T?z=g(M,_,A,R,D,L):z=b();break;default:if(X&1)(a1!==1||_.type.toLowerCase()!==M.tagName.toLowerCase())&&!w(M)?z=b():z=h(M,_,A,R,D,L);else if(X&6){_.slotScopeIds=D;const r1=o(M);if(T?z=m(M):x0(M)&&M.data==="teleport start"?z=m(M,M.data,"teleport end"):z=s(M),e(_,r1,null,A,R,Zn(r1),L),ut(_)&&!_.type.__asyncResolved){let H;T?(H=O2(K2),H.anchor=z?z.previousSibling:r1.lastChild):H=M.nodeType===3?Ac(""):O2("div"),H.el=M,_.component.subTree=H}}else X&64?a1!==8?z=b():z=_.type.hydrate(M,_,A,R,D,L,n,d):X&128&&(z=_.type.hydrate(M,_,A,R,Zn(o(M)),D,L,n,f))}return B!=null&&w0(B,null,R,_),z},h=(M,_,A,R,D,L)=>{L=L||!!_.dynamicChildren;const{type:T,props:b,patchFlag:U,shapeFlag:B,dirs:X,transition:K}=_,a1=T==="input"||T==="option";if(a1||U!==-1){X&&fe(_,null,A,"created");let z=!1;if(w(M)){z=mc(null,K)&&A&&A.vnode.props&&A.vnode.props.appear;const H=M.content.firstChild;if(z){const y1=H.getAttribute("class");y1&&(H.$cls=y1),K.beforeEnter(H)}p(H,M,A),_.el=M=H}if(B&16&&!(b&&(b.innerHTML||b.textContent))){let H=d(M.firstChild,_,M,A,R,D,L);for(;H;){Jn(M,1)||i0();const y1=H;H=H.nextSibling,a(y1)}}else if(B&8){let H=_.children;H[0]===`
`&&(M.tagName==="PRE"||M.tagName==="TEXTAREA")&&(H=H.slice(1)),M.textContent!==H&&(Jn(M,0)||i0(),M.textContent=_.children)}if(b){if(a1||!L||U&48){const H=M.tagName.includes("-");for(const y1 in b)(a1&&(y1.endsWith("value")||y1==="indeterminate")||Pn(y1)&&!b0(y1)||y1[0]==="."||H)&&i(M,y1,null,b[y1],void 0,A)}else if(b.onClick)i(M,"onClick",null,b.onClick,void 0,A);else if(U&4&&zt(b.style))for(const H in b.style)b.style[H]}let r1;(r1=b&&b.onVnodeBeforeMount)&&v3(r1,A,_),X&&fe(_,null,A,"beforeMount"),((r1=b&&b.onVnodeMounted)||X||z)&&Sc(()=>{r1&&v3(r1,A,_),z&&K.enter(M),X&&fe(_,null,A,"mounted")},R)}return M.nextSibling},d=(M,_,A,R,D,L,T)=>{T=T||!!_.dynamicChildren;const b=_.children,U=b.length;for(let B=0;B<U;B++){const X=T?b[B]:b[B]=L3(b[B]),K=X.type===Gt;M?(K&&!T&&B+1<U&&L3(b[B+1]).type===Gt&&(l(r(M.data.slice(X.children.length)),A,s(M)),M.data=X.children),M=f(M,X,R,D,L,T)):K&&!X.children?l(X.el=r(""),A):(Jn(A,1)||i0(),t(null,X,A,null,R,D,Zn(A),L))}return M},g=(M,_,A,R,D,L)=>{const{slotScopeIds:T}=_;T&&(D=D?D.concat(T):T);const b=o(M),U=d(s(M),_,b,A,R,D,L);return U&&x0(U)&&U.data==="]"?s(_.anchor=U):(i0(),l(_.anchor=u("]"),b,U),U)},y=(M,_,A,R,D,L)=>{if(Jn(M.parentElement,1)||i0(),_.el=null,L){const U=m(M);for(;;){const B=s(M);if(B&&B!==U)a(B);else break}}const T=s(M),b=o(M);return a(M),t(null,_,b,T,A,R,Zn(b),D),A&&(A.vnode.el=_.el,pr(A,_.el)),T},m=(M,_="[",A="]")=>{let R=0;for(;M;)if(M=s(M),M&&x0(M)&&(M.data===_&&R++,M.data===A)){if(R===0)return s(M);R--}return M},p=(M,_,A)=>{const R=_.parentNode;R&&R.replaceChild(M,_);let D=A;for(;D;)D.vnode.el===_&&(D.vnode.el=D.subTree.el=M),D=D.parent},w=M=>M.nodeType===1&&M.tagName==="TEMPLATE";return[c,f]}const Wa="data-allow-mismatch",Eu={0:"text",1:"children",2:"class",3:"style",4:"attribute"};function Jn(n,e){if(e===0||e===1)for(;n&&!n.hasAttribute(Wa);)n=n.parentElement;const t=n&&n.getAttribute(Wa);if(t==null)return!1;if(t==="")return!0;{const i=t.split(",");return e===0&&i.includes("children")?!0:i.includes(Eu[e])}}or().requestIdleCallback;or().cancelIdleCallback;function bu(n,e){if(x0(n)&&n.data==="["){let t=1,i=n.nextSibling;for(;i;){if(i.nodeType===1){if(e(i)===!1)break}else if(x0(i))if(i.data==="]"){if(--t===0)break}else i.data==="["&&t++;i=i.nextSibling}}else e(n)}const ut=n=>!!n.type.__asyncLoader;function Ls(n){e2(n)&&(n={loader:n});const{loader:e,loadingComponent:t,errorComponent:i,delay:r=200,hydrate:s,timeout:o,suspensible:a=!0,onError:l}=n;let u=null,c,f=0;const h=()=>(f++,u=null,d()),d=()=>{let g;return u||(g=u=e().catch(y=>{if(y=y instanceof Error?y:new Error(String(y)),l)return new Promise((m,p)=>{l(y,()=>m(h()),()=>p(y),f+1)});throw y}).then(y=>g!==u&&u?u:(y&&(y.__esModule||y[Symbol.toStringTag]==="Module")&&(y=y.default),c=y,y)))};return ie({name:"AsyncComponentWrapper",__asyncLoader:d,__asyncHydrate(g,y,m){let p=!1;(y.bu||(y.bu=[])).push(()=>p=!0);const w=()=>{p||m()},M=s?()=>{const _=s(w,A=>bu(g,A));_&&(y.bum||(y.bum=[])).push(_)}:w;c?M():d().then(()=>!y.isUnmounted&&M())},get __asyncResolved(){return c},setup(){const g=t3;if(ta(g),c)return()=>Lr(c,g);const y=M=>{u=null,W0(M,g,13,!i)};if(a&&g.suspense||O0)return d().then(M=>()=>Lr(M,g)).catch(M=>(y(M),()=>i?O2(i,{error:M}):null));const m=ve(!1),p=ve(),w=ve(!!r);return r&&setTimeout(()=>{w.value=!1},r),o!=null&&setTimeout(()=>{if(!m.value&&!p.value){const M=new Error(`Async component timed out after ${o}ms.`);y(M),p.value=M}},o),d().then(()=>{m.value=!0,g.parent&&Dn(g.parent.vnode)&&g.parent.update()}).catch(M=>{y(M),p.value=M}),()=>{if(m.value&&c)return Lr(c,g);if(p.value&&i)return O2(i,{error:p.value});if(t&&!w.value)return O2(t)}}})}function Lr(n,e){const{ref:t,props:i,children:r,ce:s}=e.vnode,o=O2(n,i,r);return o.ref=t,o.ce=s,delete e.vnode.ce,o}const Dn=n=>n.type.__isKeepAlive,Tu={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(n,{slots:e}){const t=$e(),i=t.ctx;if(!i.renderer)return()=>{const w=e.default&&e.default();return w&&w.length===1?w[0]:w};const r=new Map,s=new Set;let o=null;const a=t.suspense,{renderer:{p:l,m:u,um:c,o:{createElement:f}}}=i,h=f("div");i.activate=(w,M,_,A,R)=>{const D=w.component;u(w,M,_,0,a),l(D.vnode,w,M,_,D,a,A,w.slotScopeIds,R),Q2(()=>{D.isDeactivated=!1,D.a&&un(D.a);const L=w.props&&w.props.onVnodeMounted;L&&v3(L,D.parent,w)},a)},i.deactivate=w=>{const M=w.component;Gi(M.m),Gi(M.a),u(w,h,null,1,a),Q2(()=>{M.da&&un(M.da);const _=w.props&&w.props.onVnodeUnmounted;_&&v3(_,M.parent,w),M.isDeactivated=!0},a)};function d(w){Ir(w),c(w,t,a,!0)}function g(w){r.forEach((M,_)=>{const A=ks(M.type);A&&!w(A)&&y(_)})}function y(w){const M=r.get(w);M&&(!o||!j3(M,o))?d(M):o&&Ir(o),r.delete(w),s.delete(w)}U2(()=>[n.include,n.exclude],([w,M])=>{w&&g(_=>an(w,_)),M&&g(_=>!an(M,_))},{flush:"post",deep:!0});let m=null;const p=()=>{m!=null&&(Wi(t.subTree.type)?Q2(()=>{r.set(m,Qn(t.subTree))},t.subTree.suspense):r.set(m,Qn(t.subTree)))};return Un(p),na(p),X0(()=>{r.forEach(w=>{const{subTree:M,suspense:_}=t,A=Qn(M);if(w.type===A.type&&w.key===A.key){Ir(A);const R=A.component.da;R&&Q2(R,_);return}d(w)})}),()=>{if(m=null,!e.default)return o=null;const w=e.default(),M=w[0];if(w.length>1)return o=null,w;if(!$t(M)||!(M.shapeFlag&4)&&!(M.shapeFlag&128))return o=null,M;let _=Qn(M);if(_.type===k2)return o=null,_;const A=_.type,R=ks(ut(_)?_.type.__asyncResolved||{}:A),{include:D,exclude:L,max:T}=n;if(D&&(!R||!an(D,R))||L&&R&&an(L,R))return _.shapeFlag&=-257,o=_,M;const b=_.key==null?A:_.key,U=r.get(b);return _.el&&(_=He(_),M.shapeFlag&128&&(M.ssContent=_)),m=b,U?(_.el=U.el,_.component=U.component,_.transition&&pt(_,_.transition),_.shapeFlag|=512,s.delete(b),s.add(b)):(s.add(b),T&&s.size>parseInt(T,10)&&y(s.values().next().value)),_.shapeFlag|=256,o=_,Wi(M.type)?M:_}}},wu=Tu;function an(n,e){return J1(n)?n.some(t=>an(t,e)):D2(n)?n.split(",").includes(e):S5(n)?(n.lastIndex=0,n.test(e)):!1}function jl(n,e){Kl(n,"a",e)}function Yl(n,e){Kl(n,"da",e)}function Kl(n,e,t=t3){const i=n.__wdc||(n.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return n()});if(fr(e,i,t),t){let r=t.parent;for(;r&&r.parent;)Dn(r.parent.vnode)&&Au(i,e,t,r),r=r.parent}}function Au(n,e,t,i){const r=fr(e,n,i,!0);Zl(()=>{Wo(i[e],r)},t)}function Ir(n){n.shapeFlag&=-257,n.shapeFlag&=-513}function Qn(n){return n.shapeFlag&128?n.ssContent:n}function fr(n,e,t=t3,i=!1){if(t){const r=t[n]||(t[n]=[]),s=e.__weh||(e.__weh=(...o)=>{Ne();const a=On(t),l=te(e,t,n,o);return a(),Be(),l});return i?r.unshift(s):r.push(s),s}}const Xe=n=>(e,t=t3)=>{(!O0||n==="sp")&&fr(n,(...i)=>e(...i),t)},Cu=Xe("bm"),Un=Xe("m"),Ru=Xe("bu"),na=Xe("u"),X0=Xe("bum"),Zl=Xe("um"),Pu=Xe("sp"),Lu=Xe("rtg"),Iu=Xe("rtc");function Jl(n,e=t3){fr("ec",n,e)}const Ql="components";function Yx(n,e){return tc(Ql,n,!0,e)||n}const ec=Symbol.for("v-ndc");function Du(n){return D2(n)?tc(Ql,n,!1)||n:n||ec}function tc(n,e,t=!0,i=!1){const r=h3||t3;if(r){const s=r.type;{const a=ks(s,!1);if(a&&(a===e||a===U3(e)||a===sr(U3(e))))return s}const o=Xa(r[n]||s[n],e)||Xa(r.appContext[n],e);return!o&&i?s:o}}function Xa(n,e){return n&&(n[e]||n[U3(e)]||n[sr(U3(e))])}function Kx(n,e,t,i){let r;const s=t,o=J1(n);if(o||D2(n)){const a=o&&zt(n);let l=!1,u=!1;a&&(l=!G3(n),u=ke(n),n=ur(n)),r=new Array(n.length);for(let c=0,f=n.length;c<f;c++)r[c]=e(l?u?Fi(e3(n[c])):e3(n[c]):n[c],c,void 0,s)}else if(typeof n=="number"){r=new Array(n);for(let a=0;a<n;a++)r[a]=e(a+1,a,void 0,s)}else if(R2(n))if(n[Symbol.iterator])r=Array.from(n,(a,l)=>e(a,l,void 0,s));else{const a=Object.keys(n);r=new Array(a.length);for(let l=0,u=a.length;l<u;l++){const c=a[l];r[l]=e(n[c],c,l,s)}}else r=[];return r}function Zx(n,e,t={},i,r){if(h3.ce||h3.parent&&ut(h3.parent)&&h3.parent.ce)return P3(),Ie(K2,null,[O2("slot",t,i)],64);let s=n[e];s&&s._c&&(s._d=!1),P3();const o=s&&nc(s(t)),a=t.key||o&&o.key,l=Ie(K2,{key:(a&&!We(a)?a:`_${e}`)+(!o&&i?"_fb":"")},o||[],o&&n._===1?64:-2);return!r&&l.scopeId&&(l.slotScopeIds=[l.scopeId+"-s"]),s&&s._c&&(s._d=!0),l}function nc(n){return n.some(e=>$t(e)?!(e.type===k2||e.type===K2&&!nc(e.children)):!0)?n:null}const Is=n=>n?Rc(n)?ca(n):Is(n.parent):null,dn=G2(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>Is(n.parent),$root:n=>Is(n.root),$host:n=>n.ce,$emit:n=>n.emit,$options:n=>rc(n),$forceUpdate:n=>n.f||(n.f=()=>{Jo(n.update)}),$nextTick:n=>n.n||(n.n=D0.bind(n.proxy)),$watch:n=>tf.bind(n)}),Dr=(n,e)=>n!==_2&&!n.__isScriptSetup&&x2(n,e),Uu={get({_:n},e){if(e==="__v_skip")return!0;const{ctx:t,setupState:i,data:r,props:s,accessCache:o,type:a,appContext:l}=n;let u;if(e[0]!=="$"){const d=o[e];if(d!==void 0)switch(d){case 1:return i[e];case 2:return r[e];case 4:return t[e];case 3:return s[e]}else{if(Dr(i,e))return o[e]=1,i[e];if(r!==_2&&x2(r,e))return o[e]=2,r[e];if((u=n.propsOptions[0])&&x2(u,e))return o[e]=3,s[e];if(t!==_2&&x2(t,e))return o[e]=4,t[e];Ds&&(o[e]=0)}}const c=dn[e];let f,h;if(c)return e==="$attrs"&&s3(n.attrs,"get",""),c(n);if((f=a.__cssModules)&&(f=f[e]))return f;if(t!==_2&&x2(t,e))return o[e]=4,t[e];if(h=l.config.globalProperties,x2(h,e))return h[e]},set({_:n},e,t){const{data:i,setupState:r,ctx:s}=n;return Dr(r,e)?(r[e]=t,!0):i!==_2&&x2(i,e)?(i[e]=t,!0):x2(n.props,e)||e[0]==="$"&&e.slice(1)in n?!1:(s[e]=t,!0)},has({_:{data:n,setupState:e,accessCache:t,ctx:i,appContext:r,propsOptions:s,type:o}},a){let l,u;return!!(t[a]||n!==_2&&a[0]!=="$"&&x2(n,a)||Dr(e,a)||(l=s[0])&&x2(l,a)||x2(i,a)||x2(dn,a)||x2(r.config.globalProperties,a)||(u=o.__cssModules)&&u[a])},defineProperty(n,e,t){return t.get!=null?n._.accessCache[e]=0:x2(t,"value")&&this.set(n,e,t.value,null),Reflect.defineProperty(n,e,t)}};function $a(n){return J1(n)?n.reduce((e,t)=>(e[t]=null,e),{}):n}let Ds=!0;function Ou(n){const e=rc(n),t=n.proxy,i=n.ctx;Ds=!1,e.beforeCreate&&qa(e.beforeCreate,n,"bc");const{data:r,computed:s,methods:o,watch:a,provide:l,inject:u,created:c,beforeMount:f,mounted:h,beforeUpdate:d,updated:g,activated:y,deactivated:m,beforeDestroy:p,beforeUnmount:w,destroyed:M,unmounted:_,render:A,renderTracked:R,renderTriggered:D,errorCaptured:L,serverPrefetch:T,expose:b,inheritAttrs:U,components:B,directives:X,filters:K}=e;if(u&&Fu(u,i,null),o)for(const r1 in o){const H=o[r1];e2(H)&&(i[r1]=H.bind(t))}if(r){const r1=r.call(t,t);R2(r1)&&(n.data=vt(r1))}if(Ds=!0,s)for(const r1 in s){const H=s[r1],y1=e2(H)?H.bind(t,t):e2(H.get)?H.get.bind(t,t):ge,C1=!e2(H)&&e2(H.set)?H.set.bind(t):ge,F1=I3({get:y1,set:C1});Object.defineProperty(i,r1,{enumerable:!0,configurable:!0,get:()=>F1.value,set:X1=>F1.value=X1})}if(a)for(const r1 in a)ic(a[r1],i,t,r1);if(l){const r1=e2(l)?l.call(t):l;Reflect.ownKeys(r1).forEach(H=>{ft(H,r1[H])})}c&&qa(c,n,"c");function z(r1,H){J1(H)?H.forEach(y1=>r1(y1.bind(t))):H&&r1(H.bind(t))}if(z(Cu,f),z(Un,h),z(Ru,d),z(na,g),z(jl,y),z(Yl,m),z(Jl,L),z(Iu,R),z(Lu,D),z(X0,w),z(Zl,_),z(Pu,T),J1(b))if(b.length){const r1=n.exposed||(n.exposed={});b.forEach(H=>{Object.defineProperty(r1,H,{get:()=>t[H],set:y1=>t[H]=y1,enumerable:!0})})}else n.exposed||(n.exposed={});A&&n.render===ge&&(n.render=A),U!=null&&(n.inheritAttrs=U),B&&(n.components=B),X&&(n.directives=X),T&&ta(n)}function Fu(n,e,t=ge){J1(n)&&(n=Us(n));for(const i in n){const r=n[i];let s;R2(r)?"default"in r?s=o3(r.from||i,r.default,!0):s=o3(r.from||i):s=o3(r),z2(s)?Object.defineProperty(e,i,{enumerable:!0,configurable:!0,get:()=>s.value,set:o=>s.value=o}):e[i]=s}}function qa(n,e,t){te(J1(n)?n.map(i=>i.bind(e.proxy)):n.bind(e.proxy),e,t)}function ic(n,e,t,i){let r=i.includes(".")?vc(t,i):()=>t[i];if(D2(n)){const s=e[n];e2(s)&&U2(r,s)}else if(e2(n))U2(r,n.bind(t));else if(R2(n))if(J1(n))n.forEach(s=>ic(s,e,t,i));else{const s=e2(n.handler)?n.handler.bind(t):e[n.handler];e2(s)&&U2(r,s,n)}}function rc(n){const e=n.type,{mixins:t,extends:i}=e,{mixins:r,optionsCache:s,config:{optionMergeStrategies:o}}=n.appContext,a=s.get(e);let l;return a?l=a:!r.length&&!t&&!i?l=e:(l={},r.length&&r.forEach(u=>Vi(l,u,o,!0)),Vi(l,e,o)),R2(e)&&s.set(e,l),l}function Vi(n,e,t,i=!1){const{mixins:r,extends:s}=e;s&&Vi(n,s,t,!0),r&&r.forEach(o=>Vi(n,o,t,!0));for(const o in e)if(!(i&&o==="expose")){const a=Nu[o]||t&&t[o];n[o]=a?a(n[o],e[o]):e[o]}return n}const Nu={data:ja,props:Ya,emits:Ya,methods:ln,computed:ln,beforeCreate:c3,created:c3,beforeMount:c3,mounted:c3,beforeUpdate:c3,updated:c3,beforeDestroy:c3,beforeUnmount:c3,destroyed:c3,unmounted:c3,activated:c3,deactivated:c3,errorCaptured:c3,serverPrefetch:c3,components:ln,directives:ln,watch:ku,provide:ja,inject:Bu};function ja(n,e){return e?n?function(){return G2(e2(n)?n.call(this,this):n,e2(e)?e.call(this,this):e)}:e:n}function Bu(n,e){return ln(Us(n),Us(e))}function Us(n){if(J1(n)){const e={};for(let t=0;t<n.length;t++)e[n[t]]=n[t];return e}return n}function c3(n,e){return n?[...new Set([].concat(n,e))]:e}function ln(n,e){return n?G2(Object.create(null),n,e):e}function Ya(n,e){return n?J1(n)&&J1(e)?[...new Set([...n,...e])]:G2(Object.create(null),$a(n),$a(e??{})):e}function ku(n,e){if(!n)return e;if(!e)return n;const t=G2(Object.create(null),n);for(const i in e)t[i]=c3(n[i],e[i]);return t}function sc(){return{app:null,config:{isNativeTag:ll,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Hu=0;function zu(n,e){return function(i,r=null){e2(i)||(i=G2({},i)),r!=null&&!R2(r)&&(r=null);const s=sc(),o=new WeakSet,a=[];let l=!1;const u=s.app={_uid:Hu++,_component:i,_props:r,_container:null,_context:s,_instance:null,version:bf,get config(){return s.config},set config(c){},use(c,...f){return o.has(c)||(c&&e2(c.install)?(o.add(c),c.install(u,...f)):e2(c)&&(o.add(c),c(u,...f))),u},mixin(c){return s.mixins.includes(c)||s.mixins.push(c),u},component(c,f){return f?(s.components[c]=f,u):s.components[c]},directive(c,f){return f?(s.directives[c]=f,u):s.directives[c]},mount(c,f,h){if(!l){const d=u._ceVNode||O2(i,r);return d.appContext=s,h===!0?h="svg":h===!1&&(h=void 0),f&&e?e(d,c):n(d,c,h),l=!0,u._container=c,c.__vue_app__=u,ca(d.component)}},onUnmount(c){a.push(c)},unmount(){l&&(te(a,u._instance,16),n(null,u._container),delete u._container.__vue_app__)},provide(c,f){return s.provides[c]=f,u},runWithContext(c){const f=Vt;Vt=u;try{return c()}finally{Vt=f}}};return u}}let Vt=null;function ft(n,e){if(t3){let t=t3.provides;const i=t3.parent&&t3.parent.provides;i===t&&(t=t3.provides=Object.create(i)),t[n]=e}}function o3(n,e,t=!1){const i=$e();if(i||Vt){let r=Vt?Vt._context.provides:i?i.parent==null||i.ce?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:void 0;if(r&&n in r)return r[n];if(arguments.length>1)return t&&e2(e)?e.call(i&&i.proxy):e}}function ia(){return!!($e()||Vt)}const oc={},ac=()=>Object.create(oc),lc=n=>Object.getPrototypeOf(n)===oc;function Vu(n,e,t,i=!1){const r={},s=ac();n.propsDefaults=Object.create(null),cc(n,e,r,s);for(const o in n.propsOptions[0])o in r||(r[o]=void 0);t?n.props=i?r:de(r):n.type.props?n.props=r:n.props=s,n.attrs=s}function Gu(n,e,t,i){const{props:r,attrs:s,vnode:{patchFlag:o}}=n,a=f2(r),[l]=n.propsOptions;let u=!1;if((i||o>0)&&!(o&16)){if(o&8){const c=n.vnode.dynamicProps;for(let f=0;f<c.length;f++){let h=c[f];if(dr(n.emitsOptions,h))continue;const d=e[h];if(l)if(x2(s,h))d!==s[h]&&(s[h]=d,u=!0);else{const g=U3(h);r[g]=Os(l,a,g,d,n,!1)}else d!==s[h]&&(s[h]=d,u=!0)}}}else{cc(n,e,r,s)&&(u=!0);let c;for(const f in a)(!e||!x2(e,f)&&((c=gt(f))===f||!x2(e,c)))&&(l?t&&(t[f]!==void 0||t[c]!==void 0)&&(r[f]=Os(l,a,f,void 0,n,!0)):delete r[f]);if(s!==a)for(const f in s)(!e||!x2(e,f))&&(delete s[f],u=!0)}u&&Le(n.attrs,"set","")}function cc(n,e,t,i){const[r,s]=n.propsOptions;let o=!1,a;if(e)for(let l in e){if(b0(l))continue;const u=e[l];let c;r&&x2(r,c=U3(l))?!s||!s.includes(c)?t[c]=u:(a||(a={}))[c]=u:dr(n.emitsOptions,l)||(!(l in i)||u!==i[l])&&(i[l]=u,o=!0)}if(s){const l=f2(t),u=a||_2;for(let c=0;c<s.length;c++){const f=s[c];t[f]=Os(r,l,f,u[f],n,!x2(u,f))}}return o}function Os(n,e,t,i,r,s){const o=n[t];if(o!=null){const a=x2(o,"default");if(a&&i===void 0){const l=o.default;if(o.type!==Function&&!o.skipFactory&&e2(l)){const{propsDefaults:u}=r;if(t in u)i=u[t];else{const c=On(r);i=u[t]=l.call(null,e),c()}}else i=l;r.ce&&r.ce._setProp(t,i)}o[0]&&(s&&!a?i=!1:o[1]&&(i===""||i===gt(t))&&(i=!0))}return i}const Wu=new WeakMap;function uc(n,e,t=!1){const i=t?Wu:e.propsCache,r=i.get(n);if(r)return r;const s=n.props,o={},a=[];let l=!1;if(!e2(n)){const c=f=>{l=!0;const[h,d]=uc(f,e,!0);G2(o,h),d&&a.push(...d)};!t&&e.mixins.length&&e.mixins.forEach(c),n.extends&&c(n.extends),n.mixins&&n.mixins.forEach(c)}if(!s&&!l)return R2(n)&&i.set(n,S0),S0;if(J1(s))for(let c=0;c<s.length;c++){const f=U3(s[c]);Ka(f)&&(o[f]=_2)}else if(s)for(const c in s){const f=U3(c);if(Ka(f)){const h=s[c],d=o[f]=J1(h)||e2(h)?{type:h}:G2({},h),g=d.type;let y=!1,m=!0;if(J1(g))for(let p=0;p<g.length;++p){const w=g[p],M=e2(w)&&w.name;if(M==="Boolean"){y=!0;break}else M==="String"&&(m=!1)}else y=e2(g)&&g.name==="Boolean";d[0]=y,d[1]=m,(y||x2(d,"default"))&&a.push(f)}}const u=[o,a];return R2(n)&&i.set(n,u),u}function Ka(n){return n[0]!=="$"&&!b0(n)}const ra=n=>n==="_"||n==="_ctx"||n==="$stable",sa=n=>J1(n)?n.map(L3):[L3(n)],Xu=(n,e,t)=>{if(e._n)return e;const i=Qo((...r)=>sa(e(...r)),t);return i._c=!1,i},fc=(n,e,t)=>{const i=n._ctx;for(const r in n){if(ra(r))continue;const s=n[r];if(e2(s))e[r]=Xu(r,s,i);else if(s!=null){const o=sa(s);e[r]=()=>o}}},hc=(n,e)=>{const t=sa(e);n.slots.default=()=>t},dc=(n,e,t)=>{for(const i in e)(t||!ra(i))&&(n[i]=e[i])},$u=(n,e,t)=>{const i=n.slots=ac();if(n.vnode.shapeFlag&32){const r=e._;r?(dc(i,e,t),t&&dl(i,"_",r,!0)):fc(e,i)}else e&&hc(n,e)},qu=(n,e,t)=>{const{vnode:i,slots:r}=n;let s=!0,o=_2;if(i.shapeFlag&32){const a=e._;a?t&&a===1?s=!1:dc(r,e,t):(s=!e.$stable,fc(e,r)),o=e}else e&&(hc(n,e),o={default:1});if(s)for(const a in r)!ra(a)&&o[a]==null&&delete r[a]},Q2=Sc;function ju(n){return pc(n)}function Yu(n){return pc(n,Su)}function pc(n,e){const t=or();t.__VUE__=!0;const{insert:i,remove:r,patchProp:s,createElement:o,createText:a,createComment:l,setText:u,setElementText:c,parentNode:f,nextSibling:h,setScopeId:d=ge,insertStaticContent:g}=n,y=(S,F,k,s1=null,q=null,l1=null,e1=void 0,h1=null,d1=!!F.dynamicChildren)=>{if(S===F)return;S&&!j3(S,F)&&(s1=V(S),X1(S,q,l1,!0),S=null),F.patchFlag===-2&&(d1=!1,F.dynamicChildren=null);const{type:Q,ref:P,shapeFlag:E}=F;switch(Q){case Gt:m(S,F,k,s1);break;case k2:p(S,F,k,s1);break;case bi:S==null&&w(F,k,s1,e1);break;case K2:B(S,F,k,s1,q,l1,e1,h1,d1);break;default:E&1?A(S,F,k,s1,q,l1,e1,h1,d1):E&6?X(S,F,k,s1,q,l1,e1,h1,d1):(E&64||E&128)&&Q.process(S,F,k,s1,q,l1,e1,h1,d1,g1)}P!=null&&q?w0(P,S&&S.ref,l1,F||S,!F):P==null&&S&&S.ref!=null&&w0(S.ref,null,l1,S,!0)},m=(S,F,k,s1)=>{if(S==null)i(F.el=a(F.children),k,s1);else{const q=F.el=S.el;F.children!==S.children&&u(q,F.children)}},p=(S,F,k,s1)=>{S==null?i(F.el=l(F.children||""),k,s1):F.el=S.el},w=(S,F,k,s1)=>{[S.el,S.anchor]=g(S.children,F,k,s1,S.el,S.anchor)},M=({el:S,anchor:F},k,s1)=>{let q;for(;S&&S!==F;)q=h(S),i(S,k,s1),S=q;i(F,k,s1)},_=({el:S,anchor:F})=>{let k;for(;S&&S!==F;)k=h(S),r(S),S=k;r(F)},A=(S,F,k,s1,q,l1,e1,h1,d1)=>{F.type==="svg"?e1="svg":F.type==="math"&&(e1="mathml"),S==null?R(F,k,s1,q,l1,e1,h1,d1):T(S,F,q,l1,e1,h1,d1)},R=(S,F,k,s1,q,l1,e1,h1)=>{let d1,Q;const{props:P,shapeFlag:E,transition:N,dirs:Y}=S;if(d1=S.el=o(S.type,l1,P&&P.is,P),E&8?c(d1,S.children):E&16&&L(S.children,d1,null,s1,q,Ur(S,l1),e1,h1),Y&&fe(S,null,s1,"created"),D(d1,S,S.scopeId,e1,s1),P){for(const J in P)J!=="value"&&!b0(J)&&s(d1,J,null,P[J],l1,s1);"value"in P&&s(d1,"value",null,P.value,l1),(Q=P.onVnodeBeforeMount)&&v3(Q,s1,S)}Y&&fe(S,null,s1,"beforeMount");const o1=mc(q,N);o1&&N.beforeEnter(d1),i(d1,F,k),((Q=P&&P.onVnodeMounted)||o1||Y)&&Q2(()=>{Q&&v3(Q,s1,S),o1&&N.enter(d1),Y&&fe(S,null,s1,"mounted")},q)},D=(S,F,k,s1,q)=>{if(k&&d(S,k),s1)for(let l1=0;l1<s1.length;l1++)d(S,s1[l1]);if(q){let l1=q.subTree;if(F===l1||Wi(l1.type)&&(l1.ssContent===F||l1.ssFallback===F)){const e1=q.vnode;D(S,e1,e1.scopeId,e1.slotScopeIds,q.parent)}}},L=(S,F,k,s1,q,l1,e1,h1,d1=0)=>{for(let Q=d1;Q<S.length;Q++){const P=S[Q]=h1?st(S[Q]):L3(S[Q]);y(null,P,F,k,s1,q,l1,e1,h1)}},T=(S,F,k,s1,q,l1,e1)=>{const h1=F.el=S.el;let{patchFlag:d1,dynamicChildren:Q,dirs:P}=F;d1|=S.patchFlag&16;const E=S.props||_2,N=F.props||_2;let Y;if(k&&Mt(k,!1),(Y=N.onVnodeBeforeUpdate)&&v3(Y,k,F,S),P&&fe(F,S,k,"beforeUpdate"),k&&Mt(k,!0),(E.innerHTML&&N.innerHTML==null||E.textContent&&N.textContent==null)&&c(h1,""),Q?b(S.dynamicChildren,Q,h1,k,s1,Ur(F,q),l1):e1||H(S,F,h1,null,k,s1,Ur(F,q),l1,!1),d1>0){if(d1&16)U(h1,E,N,k,q);else if(d1&2&&E.class!==N.class&&s(h1,"class",null,N.class,q),d1&4&&s(h1,"style",E.style,N.style,q),d1&8){const o1=F.dynamicProps;for(let J=0;J<o1.length;J++){const T1=o1[J],x1=E[T1],P1=N[T1];(P1!==x1||T1==="value")&&s(h1,T1,x1,P1,q,k)}}d1&1&&S.children!==F.children&&c(h1,F.children)}else!e1&&Q==null&&U(h1,E,N,k,q);((Y=N.onVnodeUpdated)||P)&&Q2(()=>{Y&&v3(Y,k,F,S),P&&fe(F,S,k,"updated")},s1)},b=(S,F,k,s1,q,l1,e1)=>{for(let h1=0;h1<F.length;h1++){const d1=S[h1],Q=F[h1],P=d1.el&&(d1.type===K2||!j3(d1,Q)||d1.shapeFlag&198)?f(d1.el):k;y(d1,Q,P,null,s1,q,l1,e1,!0)}},U=(S,F,k,s1,q)=>{if(F!==k){if(F!==_2)for(const l1 in F)!b0(l1)&&!(l1 in k)&&s(S,l1,F[l1],null,q,s1);for(const l1 in k){if(b0(l1))continue;const e1=k[l1],h1=F[l1];e1!==h1&&l1!=="value"&&s(S,l1,h1,e1,q,s1)}"value"in k&&s(S,"value",F.value,k.value,q)}},B=(S,F,k,s1,q,l1,e1,h1,d1)=>{const Q=F.el=S?S.el:a(""),P=F.anchor=S?S.anchor:a("");let{patchFlag:E,dynamicChildren:N,slotScopeIds:Y}=F;Y&&(h1=h1?h1.concat(Y):Y),S==null?(i(Q,k,s1),i(P,k,s1),L(F.children||[],k,P,q,l1,e1,h1,d1)):E>0&&E&64&&N&&S.dynamicChildren?(b(S.dynamicChildren,N,k,q,l1,e1,h1),(F.key!=null||q&&F===q.subTree)&&_c(S,F,!0)):H(S,F,k,P,q,l1,e1,h1,d1)},X=(S,F,k,s1,q,l1,e1,h1,d1)=>{F.slotScopeIds=h1,S==null?F.shapeFlag&512?q.ctx.activate(F,k,s1,e1,d1):K(F,k,s1,q,l1,e1,d1):a1(S,F,d1)},K=(S,F,k,s1,q,l1,e1)=>{const h1=S.component=vf(S,s1,q);if(Dn(S)&&(h1.ctx.renderer=g1),yf(h1,!1,e1),h1.asyncDep){if(q&&q.registerDep(h1,z,e1),!S.el){const d1=h1.subTree=O2(k2);p(null,d1,F,k),S.placeholder=d1.el}}else z(h1,S,F,k,q,l1,e1)},a1=(S,F,k)=>{const s1=F.component=S.component;if(lf(S,F,k))if(s1.asyncDep&&!s1.asyncResolved){r1(s1,F,k);return}else s1.next=F,s1.update();else F.el=S.el,s1.vnode=F},z=(S,F,k,s1,q,l1,e1)=>{const h1=()=>{if(S.isMounted){let{next:E,bu:N,u:Y,parent:o1,vnode:J}=S;{const _1=gc(S);if(_1){E&&(E.el=J.el,r1(S,E,e1)),_1.asyncDep.then(()=>{S.isUnmounted||h1()});return}}let T1=E,x1;Mt(S,!1),E?(E.el=J.el,r1(S,E,e1)):E=J,N&&un(N),(x1=E.props&&E.props.onVnodeBeforeUpdate)&&v3(x1,o1,E,J),Mt(S,!0);const P1=Or(S),I1=S.subTree;S.subTree=P1,y(I1,P1,f(I1.el),V(I1),S,q,l1),E.el=P1.el,T1===null&&pr(S,P1.el),Y&&Q2(Y,q),(x1=E.props&&E.props.onVnodeUpdated)&&Q2(()=>v3(x1,o1,E,J),q)}else{let E;const{el:N,props:Y}=F,{bm:o1,m:J,parent:T1,root:x1,type:P1}=S,I1=ut(F);if(Mt(S,!1),o1&&un(o1),!I1&&(E=Y&&Y.onVnodeBeforeMount)&&v3(E,T1,F),Mt(S,!0),N&&B1){const _1=()=>{S.subTree=Or(S),B1(N,S.subTree,S,q,null)};I1&&P1.__asyncHydrate?P1.__asyncHydrate(N,S,_1):_1()}else{x1.ce&&x1.ce._def.shadowRoot!==!1&&x1.ce._injectChildStyle(P1);const _1=S.subTree=Or(S);y(null,_1,k,s1,S,q,l1),F.el=_1.el}if(J&&Q2(J,q),!I1&&(E=Y&&Y.onVnodeMounted)){const _1=F;Q2(()=>v3(E,T1,_1),q)}(F.shapeFlag&256||T1&&ut(T1.vnode)&&T1.vnode.shapeFlag&256)&&S.a&&Q2(S.a,q),S.isMounted=!0,F=k=s1=null}};S.scope.on();const d1=S.effect=new xl(h1);S.scope.off();const Q=S.update=d1.run.bind(d1),P=S.job=d1.runIfDirty.bind(d1);P.i=S,P.id=S.uid,d1.scheduler=()=>Jo(P),Mt(S,!0),Q()},r1=(S,F,k)=>{F.component=S;const s1=S.vnode.props;S.vnode=F,S.next=null,Gu(S,F.props,s1,k),qu(S,F.children,k),Ne(),Ha(S),Be()},H=(S,F,k,s1,q,l1,e1,h1,d1=!1)=>{const Q=S&&S.children,P=S?S.shapeFlag:0,E=F.children,{patchFlag:N,shapeFlag:Y}=F;if(N>0){if(N&128){C1(Q,E,k,s1,q,l1,e1,h1,d1);return}else if(N&256){y1(Q,E,k,s1,q,l1,e1,h1,d1);return}}Y&8?(P&16&&b1(Q,q,l1),E!==Q&&c(k,E)):P&16?Y&16?C1(Q,E,k,s1,q,l1,e1,h1,d1):b1(Q,q,l1,!0):(P&8&&c(k,""),Y&16&&L(E,k,s1,q,l1,e1,h1,d1))},y1=(S,F,k,s1,q,l1,e1,h1,d1)=>{S=S||S0,F=F||S0;const Q=S.length,P=F.length,E=Math.min(Q,P);let N;for(N=0;N<E;N++){const Y=F[N]=d1?st(F[N]):L3(F[N]);y(S[N],Y,k,null,q,l1,e1,h1,d1)}Q>P?b1(S,q,l1,!0,!1,E):L(F,k,s1,q,l1,e1,h1,d1,E)},C1=(S,F,k,s1,q,l1,e1,h1,d1)=>{let Q=0;const P=F.length;let E=S.length-1,N=P-1;for(;Q<=E&&Q<=N;){const Y=S[Q],o1=F[Q]=d1?st(F[Q]):L3(F[Q]);if(j3(Y,o1))y(Y,o1,k,null,q,l1,e1,h1,d1);else break;Q++}for(;Q<=E&&Q<=N;){const Y=S[E],o1=F[N]=d1?st(F[N]):L3(F[N]);if(j3(Y,o1))y(Y,o1,k,null,q,l1,e1,h1,d1);else break;E--,N--}if(Q>E){if(Q<=N){const Y=N+1,o1=Y<P?F[Y].el:s1;for(;Q<=N;)y(null,F[Q]=d1?st(F[Q]):L3(F[Q]),k,o1,q,l1,e1,h1,d1),Q++}}else if(Q>N)for(;Q<=E;)X1(S[Q],q,l1,!0),Q++;else{const Y=Q,o1=Q,J=new Map;for(Q=o1;Q<=N;Q++){const D1=F[Q]=d1?st(F[Q]):L3(F[Q]);D1.key!=null&&J.set(D1.key,Q)}let T1,x1=0;const P1=N-o1+1;let I1=!1,_1=0;const A1=new Array(P1);for(Q=0;Q<P1;Q++)A1[Q]=0;for(Q=Y;Q<=E;Q++){const D1=S[Q];if(x1>=P1){X1(D1,q,l1,!0);continue}let w1;if(D1.key!=null)w1=J.get(D1.key);else for(T1=o1;T1<=N;T1++)if(A1[T1-o1]===0&&j3(D1,F[T1])){w1=T1;break}w1===void 0?X1(D1,q,l1,!0):(A1[w1-o1]=Q+1,w1>=_1?_1=w1:I1=!0,y(D1,F[w1],k,null,q,l1,e1,h1,d1),x1++)}const G1=I1?Ku(A1):S0;for(T1=G1.length-1,Q=P1-1;Q>=0;Q--){const D1=o1+Q,w1=F[D1],t2=F[D1+1],G=D1+1<P?t2.el||t2.placeholder:s1;A1[Q]===0?y(null,w1,k,G,q,l1,e1,h1,d1):I1&&(T1<0||Q!==G1[T1]?F1(w1,k,G,2):T1--)}}},F1=(S,F,k,s1,q=null)=>{const{el:l1,type:e1,transition:h1,children:d1,shapeFlag:Q}=S;if(Q&6){F1(S.component.subTree,F,k,s1);return}if(Q&128){S.suspense.move(F,k,s1);return}if(Q&64){e1.move(S,F,k,g1);return}if(e1===K2){i(l1,F,k);for(let E=0;E<d1.length;E++)F1(d1[E],F,k,s1);i(S.anchor,F,k);return}if(e1===bi){M(S,F,k);return}if(s1!==2&&Q&1&&h1)if(s1===0)h1.beforeEnter(l1),i(l1,F,k),Q2(()=>h1.enter(l1),q);else{const{leave:E,delayLeave:N,afterLeave:Y}=h1,o1=()=>{S.ctx.isUnmounted?r(l1):i(l1,F,k)},J=()=>{l1._isLeaving&&l1[Pe](!0),E(l1,()=>{o1(),Y&&Y()})};N?N(l1,o1,J):J()}else i(l1,F,k)},X1=(S,F,k,s1=!1,q=!1)=>{const{type:l1,props:e1,ref:h1,children:d1,dynamicChildren:Q,shapeFlag:P,patchFlag:E,dirs:N,cacheIndex:Y}=S;if(E===-2&&(q=!1),h1!=null&&(Ne(),w0(h1,null,k,S,!0),Be()),Y!=null&&(F.renderCache[Y]=void 0),P&256){F.ctx.deactivate(S);return}const o1=P&1&&N,J=!ut(S);let T1;if(J&&(T1=e1&&e1.onVnodeBeforeUnmount)&&v3(T1,F,S),P&6)c1(S.component,k,s1);else{if(P&128){S.suspense.unmount(k,s1);return}o1&&fe(S,null,F,"beforeUnmount"),P&64?S.type.remove(S,F,k,g1,s1):Q&&!Q.hasOnce&&(l1!==K2||E>0&&E&64)?b1(Q,F,k,!1,!0):(l1===K2&&E&384||!q&&P&16)&&b1(d1,F,k),s1&&u2(S)}(J&&(T1=e1&&e1.onVnodeUnmounted)||o1)&&Q2(()=>{T1&&v3(T1,F,S),o1&&fe(S,null,F,"unmounted")},k)},u2=S=>{const{type:F,el:k,anchor:s1,transition:q}=S;if(F===K2){o2(k,s1);return}if(F===bi){_(S);return}const l1=()=>{r(k),q&&!q.persisted&&q.afterLeave&&q.afterLeave()};if(S.shapeFlag&1&&q&&!q.persisted){const{leave:e1,delayLeave:h1}=q,d1=()=>e1(k,l1);h1?h1(S.el,l1,d1):d1()}else l1()},o2=(S,F)=>{let k;for(;S!==F;)k=h(S),r(S),S=k;r(F)},c1=(S,F,k)=>{const{bum:s1,scope:q,job:l1,subTree:e1,um:h1,m:d1,a:Q}=S;Gi(d1),Gi(Q),s1&&un(s1),q.stop(),l1&&(l1.flags|=8,X1(e1,S,F,k)),h1&&Q2(h1,F),Q2(()=>{S.isUnmounted=!0},F)},b1=(S,F,k,s1=!1,q=!1,l1=0)=>{for(let e1=l1;e1<S.length;e1++)X1(S[e1],F,k,s1,q)},V=S=>{if(S.shapeFlag&6)return V(S.component.subTree);if(S.shapeFlag&128)return S.suspense.next();const F=h(S.anchor||S.el),k=F&&F[gu];return k?h(k):F};let f1=!1;const u1=(S,F,k)=>{S==null?F._vnode&&X1(F._vnode,null,null,!0):y(F._vnode||null,S,F,null,null,null,k),F._vnode=S,f1||(f1=!0,Ha(),ki(),f1=!1)},g1={p:y,um:X1,m:F1,r:u2,mt:K,mc:L,pc:H,pbc:b,n:V,o:n};let z1,B1;return e&&([z1,B1]=e(g1)),{render:u1,hydrate:z1,createApp:zu(u1,z1)}}function Ur({type:n,props:e},t){return t==="svg"&&n==="foreignObject"||t==="mathml"&&n==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function Mt({effect:n,job:e},t){t?(n.flags|=32,e.flags|=4):(n.flags&=-33,e.flags&=-5)}function mc(n,e){return(!n||n&&!n.pendingBranch)&&e&&!e.persisted}function _c(n,e,t=!1){const i=n.children,r=e.children;if(J1(i)&&J1(r))for(let s=0;s<i.length;s++){const o=i[s];let a=r[s];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=r[s]=st(r[s]),a.el=o.el),!t&&a.patchFlag!==-2&&_c(o,a)),a.type===Gt&&a.patchFlag!==-1&&(a.el=o.el),a.type===k2&&!a.el&&(a.el=o.el)}}function Ku(n){const e=n.slice(),t=[0];let i,r,s,o,a;const l=n.length;for(i=0;i<l;i++){const u=n[i];if(u!==0){if(r=t[t.length-1],n[r]<u){e[i]=r,t.push(i);continue}for(s=0,o=t.length-1;s<o;)a=s+o>>1,n[t[a]]<u?s=a+1:o=a;u<n[t[s]]&&(s>0&&(e[i]=t[s-1]),t[s]=i)}}for(s=t.length,o=t[s-1];s-- >0;)t[s]=o,o=e[o];return t}function gc(n){const e=n.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:gc(e)}function Gi(n){if(n)for(let e=0;e<n.length;e++)n[e].flags|=8}const Zu=Symbol.for("v-scx"),Ju=()=>o3(Zu);function Qu(n,e){return hr(n,null,e)}function ef(n,e){return hr(n,null,{flush:"sync"})}function U2(n,e,t){return hr(n,e,t)}function hr(n,e,t=_2){const{immediate:i,deep:r,flush:s,once:o}=t,a=G2({},t),l=e&&i||!e&&s!=="post";let u;if(O0){if(s==="sync"){const d=Ju();u=d.__watcherHandles||(d.__watcherHandles=[])}else if(!l){const d=()=>{};return d.stop=ge,d.resume=ge,d.pause=ge,d}}const c=t3;a.call=(d,g,y)=>te(d,c,g,y);let f=!1;s==="post"?a.scheduler=d=>{Q2(d,c&&c.suspense)}:s!=="sync"&&(f=!0,a.scheduler=(d,g)=>{g?d():Jo(d)}),a.augmentJob=d=>{e&&(d.flags|=4),f&&(d.flags|=2,c&&(d.id=c.uid,d.i=c))};const h=pu(n,e,a);return O0&&(u?u.push(h):l&&h()),h}function tf(n,e,t){const i=this.proxy,r=D2(n)?n.includes(".")?vc(i,n):()=>i[n]:n.bind(i,i);let s;e2(e)?s=e:(s=e.handler,t=e);const o=On(this),a=hr(r,s.bind(i),t);return o(),a}function vc(n,e){const t=e.split(".");return()=>{let i=n;for(let r=0;r<t.length&&i;r++)i=i[t[r]];return i}}function Jx(n,e,t=_2){const i=$e(),r=U3(e),s=gt(e),o=yc(n,r),a=ou((l,u)=>{let c,f=_2,h;return ef(()=>{const d=n[r];y3(c,d)&&(c=d,u())}),{get(){return l(),t.get?t.get(c):c},set(d){const g=t.set?t.set(d):d;if(!y3(g,c)&&!(f!==_2&&y3(d,f)))return;const y=i.vnode.props;y&&(e in y||r in y||s in y)&&(`onUpdate:${e}`in y||`onUpdate:${r}`in y||`onUpdate:${s}`in y)||(c=d,u()),i.emit(`update:${e}`,g),y3(d,g)&&y3(d,f)&&!y3(g,h)&&u(),f=d,h=g}}});return a[Symbol.iterator]=()=>{let l=0;return{next(){return l<2?{value:l++?o||_2:a,done:!1}:{done:!0}}}},a}const yc=(n,e)=>e==="modelValue"||e==="model-value"?n.modelModifiers:n[`${e}Modifiers`]||n[`${U3(e)}Modifiers`]||n[`${gt(e)}Modifiers`];function nf(n,e,...t){if(n.isUnmounted)return;const i=n.vnode.props||_2;let r=t;const s=e.startsWith("update:"),o=s&&yc(i,e.slice(7));o&&(o.trim&&(r=t.map(c=>D2(c)?c.trim():c)),o.number&&(r=t.map(w5)));let a,l=i[a=Tr(e)]||i[a=Tr(U3(e))];!l&&s&&(l=i[a=Tr(gt(e))]),l&&te(l,n,6,r);const u=i[a+"Once"];if(u){if(!n.emitted)n.emitted={};else if(n.emitted[a])return;n.emitted[a]=!0,te(u,n,6,r)}}const rf=new WeakMap;function xc(n,e,t=!1){const i=t?rf:e.emitsCache,r=i.get(n);if(r!==void 0)return r;const s=n.emits;let o={},a=!1;if(!e2(n)){const l=u=>{const c=xc(u,e,!0);c&&(a=!0,G2(o,c))};!t&&e.mixins.length&&e.mixins.forEach(l),n.extends&&l(n.extends),n.mixins&&n.mixins.forEach(l)}return!s&&!a?(R2(n)&&i.set(n,null),null):(J1(s)?s.forEach(l=>o[l]=null):G2(o,s),R2(n)&&i.set(n,o),o)}function dr(n,e){return!n||!Pn(e)?!1:(e=e.slice(2).replace(/Once$/,""),x2(n,e[0].toLowerCase()+e.slice(1))||x2(n,gt(e))||x2(n,e))}function Or(n){const{type:e,vnode:t,proxy:i,withProxy:r,propsOptions:[s],slots:o,attrs:a,emit:l,render:u,renderCache:c,props:f,data:h,setupState:d,ctx:g,inheritAttrs:y}=n,m=Hi(n);let p,w;try{if(t.shapeFlag&4){const _=r||i,A=_;p=L3(u.call(A,_,c,f,d,h,g)),w=a}else{const _=e;p=L3(_.length>1?_(f,{attrs:a,slots:o,emit:l}):_(f,null)),w=e.props?a:of(a)}}catch(_){pn.length=0,W0(_,n,1),p=O2(k2)}let M=p;if(w&&y!==!1){const _=Object.keys(w),{shapeFlag:A}=M;_.length&&A&7&&(s&&_.some(Go)&&(w=af(w,s)),M=He(M,w,!1,!0))}return t.dirs&&(M=He(M,null,!1,!0),M.dirs=M.dirs?M.dirs.concat(t.dirs):t.dirs),t.transition&&pt(M,t.transition),p=M,Hi(m),p}function sf(n,e=!0){let t;for(let i=0;i<n.length;i++){const r=n[i];if($t(r)){if(r.type!==k2||r.children==="v-if"){if(t)return;t=r}}else return}return t}const of=n=>{let e;for(const t in n)(t==="class"||t==="style"||Pn(t))&&((e||(e={}))[t]=n[t]);return e},af=(n,e)=>{const t={};for(const i in n)(!Go(i)||!(i.slice(9)in e))&&(t[i]=n[i]);return t};function lf(n,e,t){const{props:i,children:r,component:s}=n,{props:o,children:a,patchFlag:l}=e,u=s.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return i?Za(i,o,u):!!o;if(l&8){const c=e.dynamicProps;for(let f=0;f<c.length;f++){const h=c[f];if(o[h]!==i[h]&&!dr(u,h))return!0}}}else return(r||a)&&(!a||!a.$stable)?!0:i===o?!1:i?o?Za(i,o,u):!0:!!o;return!1}function Za(n,e,t){const i=Object.keys(e);if(i.length!==Object.keys(n).length)return!0;for(let r=0;r<i.length;r++){const s=i[r];if(e[s]!==n[s]&&!dr(t,s))return!0}return!1}function pr({vnode:n,parent:e},t){for(;e;){const i=e.subTree;if(i.suspense&&i.suspense.activeBranch===n&&(i.el=n.el),i===n)(n=e.vnode).el=t,e=e.parent;else break}}const Wi=n=>n.__isSuspense;let Fs=0;const cf={name:"Suspense",__isSuspense:!0,process(n,e,t,i,r,s,o,a,l,u){if(n==null)uf(e,t,i,r,s,o,a,l,u);else{if(s&&s.deps>0&&!n.suspense.isInFallback){e.suspense=n.suspense,e.suspense.vnode=e,e.el=n.el;return}ff(n,e,t,i,r,o,a,l,u)}},hydrate:hf,normalize:df},oa=cf;function Sn(n,e){const t=n.props&&n.props[e];e2(t)&&t()}function uf(n,e,t,i,r,s,o,a,l){const{p:u,o:{createElement:c}}=l,f=c("div"),h=n.suspense=Mc(n,r,i,e,f,t,s,o,a,l);u(null,h.pendingBranch=n.ssContent,f,null,i,h,s,o),h.deps>0?(Sn(n,"onPending"),Sn(n,"onFallback"),u(null,n.ssFallback,e,t,i,null,s,o),A0(h,n.ssFallback)):h.resolve(!1,!0)}function ff(n,e,t,i,r,s,o,a,{p:l,um:u,o:{createElement:c}}){const f=e.suspense=n.suspense;f.vnode=e,e.el=n.el;const h=e.ssContent,d=e.ssFallback,{activeBranch:g,pendingBranch:y,isInFallback:m,isHydrating:p}=f;if(y)f.pendingBranch=h,j3(y,h)?(l(y,h,f.hiddenContainer,null,r,f,s,o,a),f.deps<=0?f.resolve():m&&(p||(l(g,d,t,i,r,null,s,o,a),A0(f,d)))):(f.pendingId=Fs++,p?(f.isHydrating=!1,f.activeBranch=y):u(y,r,f),f.deps=0,f.effects.length=0,f.hiddenContainer=c("div"),m?(l(null,h,f.hiddenContainer,null,r,f,s,o,a),f.deps<=0?f.resolve():(l(g,d,t,i,r,null,s,o,a),A0(f,d))):g&&j3(g,h)?(l(g,h,t,i,r,f,s,o,a),f.resolve(!0)):(l(null,h,f.hiddenContainer,null,r,f,s,o,a),f.deps<=0&&f.resolve()));else if(g&&j3(g,h))l(g,h,t,i,r,f,s,o,a),A0(f,h);else if(Sn(e,"onPending"),f.pendingBranch=h,h.shapeFlag&512?f.pendingId=h.component.suspenseId:f.pendingId=Fs++,l(null,h,f.hiddenContainer,null,r,f,s,o,a),f.deps<=0)f.resolve();else{const{timeout:w,pendingId:M}=f;w>0?setTimeout(()=>{f.pendingId===M&&f.fallback(d)},w):w===0&&f.fallback(d)}}function Mc(n,e,t,i,r,s,o,a,l,u,c=!1){const{p:f,m:h,um:d,n:g,o:{parentNode:y,remove:m}}=u;let p;const w=pf(n);w&&e&&e.pendingBranch&&(p=e.pendingId,e.deps++);const M=n.props?pl(n.props.timeout):void 0,_=s,A={vnode:n,parent:e,parentComponent:t,namespace:o,container:i,hiddenContainer:r,deps:0,pendingId:Fs++,timeout:typeof M=="number"?M:-1,activeBranch:null,pendingBranch:null,isInFallback:!c,isHydrating:c,isUnmounted:!1,effects:[],resolve(R=!1,D=!1){const{vnode:L,activeBranch:T,pendingBranch:b,pendingId:U,effects:B,parentComponent:X,container:K}=A;let a1=!1;A.isHydrating?A.isHydrating=!1:R||(a1=T&&b.transition&&b.transition.mode==="out-in",a1&&(T.transition.afterLeave=()=>{U===A.pendingId&&(h(b,K,s===_?g(T):s,0),Ps(B))}),T&&(y(T.el)===K&&(s=g(T)),d(T,X,A,!0)),a1||h(b,K,s,0)),A0(A,b),A.pendingBranch=null,A.isInFallback=!1;let z=A.parent,r1=!1;for(;z;){if(z.pendingBranch){z.effects.push(...B),r1=!0;break}z=z.parent}!r1&&!a1&&Ps(B),A.effects=[],w&&e&&e.pendingBranch&&p===e.pendingId&&(e.deps--,e.deps===0&&!D&&e.resolve()),Sn(L,"onResolve")},fallback(R){if(!A.pendingBranch)return;const{vnode:D,activeBranch:L,parentComponent:T,container:b,namespace:U}=A;Sn(D,"onFallback");const B=g(L),X=()=>{A.isInFallback&&(f(null,R,b,B,T,null,U,a,l),A0(A,R))},K=R.transition&&R.transition.mode==="out-in";K&&(L.transition.afterLeave=X),A.isInFallback=!0,d(L,T,null,!0),K||X()},move(R,D,L){A.activeBranch&&h(A.activeBranch,R,D,L),A.container=R},next(){return A.activeBranch&&g(A.activeBranch)},registerDep(R,D,L){const T=!!A.pendingBranch;T&&A.deps++;const b=R.vnode.el;R.asyncDep.catch(U=>{W0(U,R,0)}).then(U=>{if(R.isUnmounted||A.isUnmounted||A.pendingId!==R.suspenseId)return;R.asyncResolved=!0;const{vnode:B}=R;Bs(R,U),b&&(B.el=b);const X=!b&&R.subTree.el;D(R,B,y(b||R.subTree.el),b?null:g(R.subTree),A,o,L),X&&m(X),pr(R,B.el),T&&--A.deps===0&&A.resolve()})},unmount(R,D){A.isUnmounted=!0,A.activeBranch&&d(A.activeBranch,t,R,D),A.pendingBranch&&d(A.pendingBranch,t,R,D)}};return A}function hf(n,e,t,i,r,s,o,a,l){const u=e.suspense=Mc(e,i,t,n.parentNode,document.createElement("div"),null,r,s,o,a,!0),c=l(n,u.pendingBranch=e.ssContent,t,u,s,o);return u.deps===0&&u.resolve(!1,!0),c}function df(n){const{shapeFlag:e,children:t}=n,i=e&32;n.ssContent=Ja(i?t.default:t),n.ssFallback=i?Ja(t.fallback):O2(k2)}function Ja(n){let e;if(e2(n)){const t=U0&&n._c;t&&(n._d=!1,P3()),n=n(),t&&(n._d=!0,e=x3,Ec())}return J1(n)&&(n=sf(n)),n=L3(n),e&&!n.dynamicChildren&&(n.dynamicChildren=e.filter(t=>t!==n)),n}function Sc(n,e){e&&e.pendingBranch?J1(n)?e.effects.push(...n):e.effects.push(n):Ps(n)}function A0(n,e){n.activeBranch=e;const{vnode:t,parentComponent:i}=n;let r=e.el;for(;!r&&e.component;)e=e.component.subTree,r=e.el;t.el=r,i&&i.subTree===t&&(i.vnode.el=r,pr(i,r))}function pf(n){const e=n.props&&n.props.suspensible;return e!=null&&e!==!1}const K2=Symbol.for("v-fgt"),Gt=Symbol.for("v-txt"),k2=Symbol.for("v-cmt"),bi=Symbol.for("v-stc"),pn=[];let x3=null;function P3(n=!1){pn.push(x3=n?null:[])}function Ec(){pn.pop(),x3=pn[pn.length-1]||null}let U0=1;function Xi(n,e=!1){U0+=n,n<0&&x3&&e&&(x3.hasOnce=!0)}function bc(n){return n.dynamicChildren=U0>0?x3||S0:null,Ec(),U0>0&&x3&&x3.push(n),n}function aa(n,e,t,i,r,s){return bc($i(n,e,t,i,r,s,!0))}function Ie(n,e,t,i,r){return bc(O2(n,e,t,i,r,!0))}function $t(n){return n?n.__v_isVNode===!0:!1}function j3(n,e){return n.type===e.type&&n.key===e.key}const Tc=({key:n})=>n??null,Ti=({ref:n,ref_key:e,ref_for:t})=>(typeof n=="number"&&(n=""+n),n!=null?D2(n)||z2(n)||e2(n)?{i:h3,r:n,k:e,f:!!t}:n:null);function $i(n,e=null,t=null,i=0,r=null,s=n===K2?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:n,props:e,key:e&&Tc(e),ref:e&&Ti(e),scopeId:zl,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:i,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:h3};return a?(la(l,t),s&128&&n.normalize(l)):t&&(l.shapeFlag|=D2(t)?8:16),U0>0&&!o&&x3&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&x3.push(l),l}const O2=mf;function mf(n,e=null,t=null,i=0,r=null,s=!1){if((!n||n===ec)&&(n=k2),$t(n)){const a=He(n,e,!0);return t&&la(a,t),U0>0&&!s&&x3&&(a.shapeFlag&6?x3[x3.indexOf(n)]=a:x3.push(a)),a.patchFlag=-2,a}if(Ef(n)&&(n=n.__vccOpts),e){e=wc(e);let{class:a,style:l}=e;a&&!D2(a)&&(e.class=lr(a)),R2(l)&&(Zo(l)&&!J1(l)&&(l=G2({},l)),e.style=ar(l))}const o=D2(n)?1:Wi(n)?128:Vl(n)?64:R2(n)?4:e2(n)?2:0;return $i(n,e,t,i,r,o,s,!0)}function wc(n){return n?Zo(n)||lc(n)?G2({},n):n:null}function He(n,e,t=!1,i=!1){const{props:r,ref:s,patchFlag:o,children:a,transition:l}=n,u=e?Cc(r||{},e):r,c={__v_isVNode:!0,__v_skip:!0,type:n.type,props:u,key:u&&Tc(u),ref:e&&e.ref?t&&s?J1(s)?s.concat(Ti(e)):[s,Ti(e)]:Ti(e):s,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:a,target:n.target,targetStart:n.targetStart,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:e&&n.type!==K2?o===-1?16:o|16:o,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:l,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&He(n.ssContent),ssFallback:n.ssFallback&&He(n.ssFallback),placeholder:n.placeholder,el:n.el,anchor:n.anchor,ctx:n.ctx,ce:n.ce};return l&&i&&pt(c,l.clone(c)),c}function Ac(n=" ",e=0){return O2(Gt,null,n,e)}function Qx(n="",e=!1){return e?(P3(),Ie(k2,null,n)):O2(k2,null,n)}function L3(n){return n==null||typeof n=="boolean"?O2(k2):J1(n)?O2(K2,null,n.slice()):$t(n)?st(n):O2(Gt,null,String(n))}function st(n){return n.el===null&&n.patchFlag!==-1||n.memo?n:He(n)}function la(n,e){let t=0;const{shapeFlag:i}=n;if(e==null)e=null;else if(J1(e))t=16;else if(typeof e=="object")if(i&65){const r=e.default;r&&(r._c&&(r._d=!1),la(n,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!lc(e)?e._ctx=h3:r===3&&h3&&(h3.slots._===1?e._=1:(e._=2,n.patchFlag|=1024))}else e2(e)?(e={default:e,_ctx:h3},t=32):(e=String(e),i&64?(t=16,e=[Ac(e)]):t=8);n.children=e,n.shapeFlag|=t}function Cc(...n){const e={};for(let t=0;t<n.length;t++){const i=n[t];for(const r in i)if(r==="class")e.class!==i.class&&(e.class=lr([e.class,i.class]));else if(r==="style")e.style=ar([e.style,i.style]);else if(Pn(r)){const s=e[r],o=i[r];o&&s!==o&&!(J1(s)&&s.includes(o))&&(e[r]=s?[].concat(s,o):o)}else r!==""&&(e[r]=i[r])}return e}function v3(n,e,t,i=null){te(n,e,7,[t,i])}const _f=sc();let gf=0;function vf(n,e,t){const i=n.type,r=(e?e.appContext:n.appContext)||_f,s={uid:gf++,vnode:n,type:i,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new vl(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:uc(i,r),emitsOptions:xc(i,r),emit:null,emitted:null,propsDefaults:_2,inheritAttrs:i.inheritAttrs,ctx:_2,data:_2,props:_2,attrs:_2,slots:_2,refs:_2,setupState:_2,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=e?e.root:s,s.emit=nf.bind(null,s),n.ce&&n.ce(s),s}let t3=null;const $e=()=>t3||h3;let qi,Ns;{const n=or(),e=(t,i)=>{let r;return(r=n[t])||(r=n[t]=[]),r.push(i),s=>{r.length>1?r.forEach(o=>o(s)):r[0](s)}};qi=e("__VUE_INSTANCE_SETTERS__",t=>t3=t),Ns=e("__VUE_SSR_SETTERS__",t=>O0=t)}const On=n=>{const e=t3;return qi(n),n.scope.on(),()=>{n.scope.off(),qi(e)}},Qa=()=>{t3&&t3.scope.off(),qi(null)};function Rc(n){return n.vnode.shapeFlag&4}let O0=!1;function yf(n,e=!1,t=!1){e&&Ns(e);const{props:i,children:r}=n.vnode,s=Rc(n);Vu(n,i,s,e),$u(n,r,t||e);const o=s?xf(n,e):void 0;return e&&Ns(!1),o}function xf(n,e){const t=n.type;n.accessCache=Object.create(null),n.proxy=new Proxy(n.ctx,Uu);const{setup:i}=t;if(i){Ne();const r=n.setupContext=i.length>1?Sf(n):null,s=On(n),o=In(i,n,0,[n.props,r]),a=ul(o);if(Be(),s(),(a||n.sp)&&!ut(n)&&ta(n),a){if(o.then(Qa,Qa),e)return o.then(l=>{Bs(n,l)}).catch(l=>{W0(l,n,0)});n.asyncDep=o}else Bs(n,o)}else Pc(n)}function Bs(n,e,t){e2(e)?n.type.__ssrInlineRender?n.ssrRender=e:n.render=e:R2(e)&&(n.setupState=Fl(e)),Pc(n)}function Pc(n,e,t){const i=n.type;n.render||(n.render=i.render||ge);{const r=On(n);Ne();try{Ou(n)}finally{Be(),r()}}}const Mf={get(n,e){return s3(n,"get",""),n[e]}};function Sf(n){const e=t=>{n.exposed=t||{}};return{attrs:new Proxy(n.attrs,Mf),slots:n.slots,emit:n.emit,expose:e}}function ca(n){return n.exposed?n.exposeProxy||(n.exposeProxy=new Proxy(Fl(tu(n.exposed)),{get(e,t){if(t in e)return e[t];if(t in dn)return dn[t](n)},has(e,t){return t in e||t in dn}})):n.proxy}function ks(n,e=!0){return e2(n)?n.displayName||n.name:n.name||e&&n.__name}function Ef(n){return e2(n)&&"__vccOpts"in n}const I3=(n,e)=>hu(n,e,O0);function Z2(n,e,t){const i=(s,o,a)=>{Xi(-1);try{return O2(s,o,a)}finally{Xi(1)}},r=arguments.length;return r===2?R2(e)&&!J1(e)?$t(e)?i(n,null,[e]):i(n,e):i(n,null,e):(r>3?t=Array.prototype.slice.call(arguments,2):r===3&&$t(t)&&(t=[t]),i(n,e,t))}const bf="3.5.21";/**
* @vue/runtime-dom v3.5.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Hs;const e4=typeof window<"u"&&window.trustedTypes;if(e4)try{Hs=e4.createPolicy("vue",{createHTML:n=>n})}catch{}const Lc=Hs?n=>Hs.createHTML(n):n=>n,Tf="http://www.w3.org/2000/svg",wf="http://www.w3.org/1998/Math/MathML",Re=typeof document<"u"?document:null,t4=Re&&Re.createElement("template"),Af={insert:(n,e,t)=>{e.insertBefore(n,t||null)},remove:n=>{const e=n.parentNode;e&&e.removeChild(n)},createElement:(n,e,t,i)=>{const r=e==="svg"?Re.createElementNS(Tf,n):e==="mathml"?Re.createElementNS(wf,n):t?Re.createElement(n,{is:t}):Re.createElement(n);return n==="select"&&i&&i.multiple!=null&&r.setAttribute("multiple",i.multiple),r},createText:n=>Re.createTextNode(n),createComment:n=>Re.createComment(n),setText:(n,e)=>{n.nodeValue=e},setElementText:(n,e)=>{n.textContent=e},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>Re.querySelector(n),setScopeId(n,e){n.setAttribute(e,"")},insertStaticContent(n,e,t,i,r,s){const o=t?t.previousSibling:e.lastChild;if(r&&(r===s||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===s||!(r=r.nextSibling)););else{t4.innerHTML=Lc(i==="svg"?`<svg>${n}</svg>`:i==="mathml"?`<math>${n}</math>`:n);const a=t4.content;if(i==="svg"||i==="mathml"){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,t)}return[o?o.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},Ye="transition",J0="animation",F0=Symbol("_vtc"),Ic={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Dc=G2({},Wl,Ic),Cf=n=>(n.displayName="Transition",n.props=Dc,n),Rf=Cf((n,{slots:e})=>Z2(yu,Uc(n),e)),St=(n,e=[])=>{J1(n)?n.forEach(t=>t(...e)):n&&n(...e)},n4=n=>n?J1(n)?n.some(e=>e.length>1):n.length>1:!1;function Uc(n){const e={};for(const B in n)B in Ic||(e[B]=n[B]);if(n.css===!1)return e;const{name:t="v",type:i,duration:r,enterFromClass:s=`${t}-enter-from`,enterActiveClass:o=`${t}-enter-active`,enterToClass:a=`${t}-enter-to`,appearFromClass:l=s,appearActiveClass:u=o,appearToClass:c=a,leaveFromClass:f=`${t}-leave-from`,leaveActiveClass:h=`${t}-leave-active`,leaveToClass:d=`${t}-leave-to`}=n,g=Pf(r),y=g&&g[0],m=g&&g[1],{onBeforeEnter:p,onEnter:w,onEnterCancelled:M,onLeave:_,onLeaveCancelled:A,onBeforeAppear:R=p,onAppear:D=w,onAppearCancelled:L=M}=e,T=(B,X,K,a1)=>{B._enterCancelled=a1,it(B,X?c:a),it(B,X?u:o),K&&K()},b=(B,X)=>{B._isLeaving=!1,it(B,f),it(B,d),it(B,h),X&&X()},U=B=>(X,K)=>{const a1=B?D:w,z=()=>T(X,B,K);St(a1,[X,z]),i4(()=>{it(X,B?l:s),ce(X,B?c:a),n4(a1)||r4(X,i,y,z)})};return G2(e,{onBeforeEnter(B){St(p,[B]),ce(B,s),ce(B,o)},onBeforeAppear(B){St(R,[B]),ce(B,l),ce(B,u)},onEnter:U(!1),onAppear:U(!0),onLeave(B,X){B._isLeaving=!0;const K=()=>b(B,X);ce(B,f),B._enterCancelled?(ce(B,h),zs()):(zs(),ce(B,h)),i4(()=>{B._isLeaving&&(it(B,f),ce(B,d),n4(_)||r4(B,i,m,K))}),St(_,[B,K])},onEnterCancelled(B){T(B,!1,void 0,!0),St(M,[B])},onAppearCancelled(B){T(B,!0,void 0,!0),St(L,[B])},onLeaveCancelled(B){b(B),St(A,[B])}})}function Pf(n){if(n==null)return null;if(R2(n))return[Fr(n.enter),Fr(n.leave)];{const e=Fr(n);return[e,e]}}function Fr(n){return pl(n)}function ce(n,e){e.split(/\s+/).forEach(t=>t&&n.classList.add(t)),(n[F0]||(n[F0]=new Set)).add(e)}function it(n,e){e.split(/\s+/).forEach(i=>i&&n.classList.remove(i));const t=n[F0];t&&(t.delete(e),t.size||(n[F0]=void 0))}function i4(n){requestAnimationFrame(()=>{requestAnimationFrame(n)})}let Lf=0;function r4(n,e,t,i){const r=n._endId=++Lf,s=()=>{r===n._endId&&i()};if(t!=null)return setTimeout(s,t);const{type:o,timeout:a,propCount:l}=Oc(n,e);if(!o)return i();const u=o+"end";let c=0;const f=()=>{n.removeEventListener(u,h),s()},h=d=>{d.target===n&&++c>=l&&f()};setTimeout(()=>{c<l&&f()},a+1),n.addEventListener(u,h)}function Oc(n,e){const t=window.getComputedStyle(n),i=g=>(t[g]||"").split(", "),r=i(`${Ye}Delay`),s=i(`${Ye}Duration`),o=s4(r,s),a=i(`${J0}Delay`),l=i(`${J0}Duration`),u=s4(a,l);let c=null,f=0,h=0;e===Ye?o>0&&(c=Ye,f=o,h=s.length):e===J0?u>0&&(c=J0,f=u,h=l.length):(f=Math.max(o,u),c=f>0?o>u?Ye:J0:null,h=c?c===Ye?s.length:l.length:0);const d=c===Ye&&/\b(?:transform|all)(?:,|$)/.test(i(`${Ye}Property`).toString());return{type:c,timeout:f,propCount:h,hasTransform:d}}function s4(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max(...e.map((t,i)=>o4(t)+o4(n[i])))}function o4(n){return n==="auto"?0:Number(n.slice(0,-1).replace(",","."))*1e3}function zs(){return document.body.offsetHeight}function If(n,e,t){const i=n[F0];i&&(e=(e?[e,...i]:[...i]).join(" ")),e==null?n.removeAttribute("class"):t?n.setAttribute("class",e):n.className=e}const a4=Symbol("_vod"),Df=Symbol("_vsh"),Uf=Symbol(""),Of=/(?:^|;)\s*display\s*:/;function Ff(n,e,t){const i=n.style,r=D2(t);let s=!1;if(t&&!r){if(e)if(D2(e))for(const o of e.split(";")){const a=o.slice(0,o.indexOf(":")).trim();t[a]==null&&wi(i,a,"")}else for(const o in e)t[o]==null&&wi(i,o,"");for(const o in t)o==="display"&&(s=!0),wi(i,o,t[o])}else if(r){if(e!==t){const o=i[Uf];o&&(t+=";"+o),i.cssText=t,s=Of.test(t)}}else e&&n.removeAttribute("style");a4 in n&&(n[a4]=s?i.display:"",n[Df]&&(i.display="none"))}const l4=/\s*!important$/;function wi(n,e,t){if(J1(t))t.forEach(i=>wi(n,e,i));else if(t==null&&(t=""),e.startsWith("--"))n.setProperty(e,t);else{const i=Nf(n,e);l4.test(t)?n.setProperty(gt(i),t.replace(l4,""),"important"):n[i]=t}}const c4=["Webkit","Moz","ms"],Nr={};function Nf(n,e){const t=Nr[e];if(t)return t;let i=U3(e);if(i!=="filter"&&i in n)return Nr[e]=i;i=sr(i);for(let r=0;r<c4.length;r++){const s=c4[r]+i;if(s in n)return Nr[e]=s}return e}const u4="http://www.w3.org/1999/xlink";function f4(n,e,t,i,r,s=D5(e)){i&&e.startsWith("xlink:")?t==null?n.removeAttributeNS(u4,e.slice(6,e.length)):n.setAttributeNS(u4,e,t):t==null||s&&!ml(t)?n.removeAttribute(e):n.setAttribute(e,s?"":We(t)?String(t):t)}function h4(n,e,t,i,r){if(e==="innerHTML"||e==="textContent"){t!=null&&(n[e]=e==="innerHTML"?Lc(t):t);return}const s=n.tagName;if(e==="value"&&s!=="PROGRESS"&&!s.includes("-")){const a=s==="OPTION"?n.getAttribute("value")||"":n.value,l=t==null?n.type==="checkbox"?"on":"":String(t);(a!==l||!("_value"in n))&&(n.value=l),t==null&&n.removeAttribute(e),n._value=t;return}let o=!1;if(t===""||t==null){const a=typeof n[e];a==="boolean"?t=ml(t):t==null&&a==="string"?(t="",o=!0):a==="number"&&(t=0,o=!0)}try{n[e]=t}catch{}o&&n.removeAttribute(r||e)}function Bf(n,e,t,i){n.addEventListener(e,t,i)}function kf(n,e,t,i){n.removeEventListener(e,t,i)}const d4=Symbol("_vei");function Hf(n,e,t,i,r=null){const s=n[d4]||(n[d4]={}),o=s[e];if(i&&o)o.value=i;else{const[a,l]=zf(e);if(i){const u=s[e]=Wf(i,r);Bf(n,a,u,l)}else o&&(kf(n,a,o,l),s[e]=void 0)}}const p4=/(?:Once|Passive|Capture)$/;function zf(n){let e;if(p4.test(n)){e={};let i;for(;i=n.match(p4);)n=n.slice(0,n.length-i[0].length),e[i[0].toLowerCase()]=!0}return[n[2]===":"?n.slice(3):gt(n.slice(2)),e]}let Br=0;const Vf=Promise.resolve(),Gf=()=>Br||(Vf.then(()=>Br=0),Br=Date.now());function Wf(n,e){const t=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=t.attached)return;te(Xf(i,t.value),e,5,[i])};return t.value=n,t.attached=Gf(),t}function Xf(n,e){if(J1(e)){const t=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{t.call(n),n._stopped=!0},e.map(i=>r=>!r._stopped&&i&&i(r))}else return e}const m4=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&n.charCodeAt(2)>96&&n.charCodeAt(2)<123,$f=(n,e,t,i,r,s)=>{const o=r==="svg";e==="class"?If(n,i,o):e==="style"?Ff(n,t,i):Pn(e)?Go(e)||Hf(n,e,t,i,s):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):qf(n,e,i,o))?(h4(n,e,i),!n.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&f4(n,e,i,o,s,e!=="value")):n._isVueCE&&(/[A-Z]/.test(e)||!D2(i))?h4(n,U3(e),i,s,e):(e==="true-value"?n._trueValue=i:e==="false-value"&&(n._falseValue=i),f4(n,e,i,o))};function qf(n,e,t,i){if(i)return!!(e==="innerHTML"||e==="textContent"||e in n&&m4(e)&&e2(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="autocorrect"||e==="form"||e==="list"&&n.tagName==="INPUT"||e==="type"&&n.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const r=n.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return m4(e)&&D2(t)?!1:e in n}const Fc=new WeakMap,Nc=new WeakMap,ji=Symbol("_moveCb"),_4=Symbol("_enterCb"),jf=n=>(delete n.props.mode,n),Yf=jf({name:"TransitionGroup",props:G2({},Dc,{tag:String,moveClass:String}),setup(n,{slots:e}){const t=$e(),i=Gl();let r,s;return na(()=>{if(!r.length)return;const o=n.moveClass||`${n.name||"v"}-move`;if(!Qf(r[0].el,t.vnode.el,o)){r=[];return}r.forEach(Kf),r.forEach(Zf);const a=r.filter(Jf);zs(),a.forEach(l=>{const u=l.el,c=u.style;ce(u,o),c.transform=c.webkitTransform=c.transitionDuration="";const f=u[ji]=h=>{h&&h.target!==u||(!h||h.propertyName.endsWith("transform"))&&(u.removeEventListener("transitionend",f),u[ji]=null,it(u,o))};u.addEventListener("transitionend",f)}),r=[]}),()=>{const o=f2(n),a=Uc(o);let l=o.tag||K2;if(r=[],s)for(let u=0;u<s.length;u++){const c=s[u];c.el&&c.el instanceof Element&&(r.push(c),pt(c,Mn(c,a,i,t)),Fc.set(c,c.el.getBoundingClientRect()))}s=e.default?ea(e.default()):[];for(let u=0;u<s.length;u++){const c=s[u];c.key!=null&&pt(c,Mn(c,a,i,t))}return O2(l,null,s)}}}),eM=Yf;function Kf(n){const e=n.el;e[ji]&&e[ji](),e[_4]&&e[_4]()}function Zf(n){Nc.set(n,n.el.getBoundingClientRect())}function Jf(n){const e=Fc.get(n),t=Nc.get(n),i=e.left-t.left,r=e.top-t.top;if(i||r){const s=n.el.style;return s.transform=s.webkitTransform=`translate(${i}px,${r}px)`,s.transitionDuration="0s",n}}function Qf(n,e,t){const i=n.cloneNode(),r=n[F0];r&&r.forEach(a=>{a.split(/\s+/).forEach(l=>l&&i.classList.remove(l))}),t.split(/\s+/).forEach(a=>a&&i.classList.add(a)),i.style.display="none";const s=e.nodeType===1?e:e.parentNode;s.appendChild(i);const{hasTransform:o}=Oc(i);return s.removeChild(i),o}const Bc=G2({patchProp:$f},Af);let mn,g4=!1;function eh(){return mn||(mn=ju(Bc))}function th(){return mn=g4?mn:Yu(Bc),g4=!0,mn}const nh=((...n)=>{const e=eh().createApp(...n),{mount:t}=e;return e.mount=i=>{const r=Hc(i);if(!r)return;const s=e._component;!e2(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.nodeType===1&&(r.textContent="");const o=t(r,!1,kc(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),o},e}),ih=((...n)=>{const e=th().createApp(...n),{mount:t}=e;return e.mount=i=>{const r=Hc(i);if(r)return t(r,!0,kc(r))},e});function kc(n){if(n instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&n instanceof MathMLElement)return"mathml"}function Hc(n){return D2(n)?document.querySelector(n):n}const rh=/"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/,sh=/"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/,oh=/^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;function ah(n,e){if(n==="__proto__"||n==="constructor"&&e&&typeof e=="object"&&"prototype"in e){lh(n);return}return e}function lh(n){console.warn(`[destr] Dropping "${n}" key to prevent prototype pollution.`)}function Yi(n,e={}){if(typeof n!="string")return n;if(n[0]==='"'&&n[n.length-1]==='"'&&n.indexOf("\\")===-1)return n.slice(1,-1);const t=n.trim();if(t.length<=9)switch(t.toLowerCase()){case"true":return!0;case"false":return!1;case"undefined":return;case"null":return null;case"nan":return Number.NaN;case"infinity":return Number.POSITIVE_INFINITY;case"-infinity":return Number.NEGATIVE_INFINITY}if(!oh.test(n)){if(e.strict)throw new SyntaxError("[destr] Invalid JSON");return n}try{if(rh.test(n)||sh.test(n)){if(e.strict)throw new Error("[destr] Possible prototype pollution");return JSON.parse(n,ah)}return JSON.parse(n)}catch(i){if(e.strict)throw i;return n}}const ch=/#/g,uh=/&/g,fh=/\//g,hh=/=/g,ua=/\+/g,dh=/%5e/gi,ph=/%60/gi,mh=/%7c/gi,_h=/%20/gi;function gh(n){return encodeURI(""+n).replace(mh,"|")}function Vs(n){return gh(typeof n=="string"?n:JSON.stringify(n)).replace(ua,"%2B").replace(_h,"+").replace(ch,"%23").replace(uh,"%26").replace(ph,"`").replace(dh,"^").replace(fh,"%2F")}function kr(n){return Vs(n).replace(hh,"%3D")}function Ki(n=""){try{return decodeURIComponent(""+n)}catch{return""+n}}function vh(n){return Ki(n.replace(ua," "))}function yh(n){return Ki(n.replace(ua," "))}function zc(n=""){const e=Object.create(null);n[0]==="?"&&(n=n.slice(1));for(const t of n.split("&")){const i=t.match(/([^=]+)=?(.*)/)||[];if(i.length<2)continue;const r=vh(i[1]);if(r==="__proto__"||r==="constructor")continue;const s=yh(i[2]||"");e[r]===void 0?e[r]=s:Array.isArray(e[r])?e[r].push(s):e[r]=[e[r],s]}return e}function xh(n,e){return(typeof e=="number"||typeof e=="boolean")&&(e=String(e)),e?Array.isArray(e)?e.map(t=>`${kr(n)}=${Vs(t)}`).join("&"):`${kr(n)}=${Vs(e)}`:kr(n)}function Mh(n){return Object.keys(n).filter(e=>n[e]!==void 0).map(e=>xh(e,n[e])).filter(Boolean).join("&")}const Sh=/^[\s\w\0+.-]{2,}:([/\\]{1,2})/,Eh=/^[\s\w\0+.-]{2,}:([/\\]{2})?/,bh=/^([/\\]\s*){2,}[^/\\]/,Th=/^[\s\0]*(blob|data|javascript|vbscript):$/i,wh=/\/$|\/\?|\/#/,Ah=/^\.?\//;function Kt(n,e={}){return typeof e=="boolean"&&(e={acceptRelative:e}),e.strict?Sh.test(n):Eh.test(n)||(e.acceptRelative?bh.test(n):!1)}function Ch(n){return!!n&&Th.test(n)}function Gs(n="",e){return e?wh.test(n):n.endsWith("/")}function En(n="",e){if(!e)return(Gs(n)?n.slice(0,-1):n)||"/";if(!Gs(n,!0))return n||"/";let t=n,i="";const r=n.indexOf("#");r!==-1&&(t=n.slice(0,r),i=n.slice(r));const[s,...o]=t.split("?");return((s.endsWith("/")?s.slice(0,-1):s)||"/")+(o.length>0?`?${o.join("?")}`:"")+i}function Rh(n="",e){if(!e)return n.endsWith("/")?n:n+"/";if(Gs(n,!0))return n||"/";let t=n,i="";const r=n.indexOf("#");if(r!==-1&&(t=n.slice(0,r),i=n.slice(r),!t))return i;const[s,...o]=t.split("?");return s+"/"+(o.length>0?`?${o.join("?")}`:"")+i}function Ph(n,e){if(Gc(e)||Kt(n))return n;const t=En(e);return n.startsWith(t)?n:fa(t,n)}function v4(n,e){if(Gc(e))return n;const t=En(e);if(!n.startsWith(t))return n;const i=n.slice(t.length);return i[0]==="/"?i:"/"+i}function Vc(n,e){const t=$c(n),i={...zc(t.search),...e};return t.search=Mh(i),Dh(t)}function Gc(n){return!n||n==="/"}function Lh(n){return n&&n!=="/"}function fa(n,...e){let t=n||"";for(const i of e.filter(r=>Lh(r)))if(t){const r=i.replace(Ah,"");t=Rh(t)+r}else t=i;return t}function Wc(...n){const e=/\/(?!\/)/,t=n.filter(Boolean),i=[];let r=0;for(const o of t)if(!(!o||o==="/")){for(const[a,l]of o.split(e).entries())if(!(!l||l===".")){if(l===".."){if(i.length===1&&Kt(i[0]))continue;i.pop(),r--;continue}if(a===1&&i[i.length-1]?.endsWith(":/")){i[i.length-1]+="/"+l;continue}i.push(l),r++}}let s=i.join("/");return r>=0?t[0]?.startsWith("/")&&!s.startsWith("/")?s="/"+s:t[0]?.startsWith("./")&&!s.startsWith("./")&&(s="./"+s):s="../".repeat(-1*r)+s,t[t.length-1]?.endsWith("/")&&!s.endsWith("/")&&(s+="/"),s}function Ih(n,e){return Ki(En(n))===Ki(En(e))}const Xc=Symbol.for("ufo:protocolRelative");function $c(n="",e){const t=n.match(/^[\s\0]*(blob:|data:|javascript:|vbscript:)(.*)/i);if(t){const[,f,h=""]=t;return{protocol:f.toLowerCase(),pathname:h,href:f+h,auth:"",host:"",search:"",hash:""}}if(!Kt(n,{acceptRelative:!0}))return y4(n);const[,i="",r,s=""]=n.replace(/\\/g,"/").match(/^[\s\0]*([\w+.-]{2,}:)?\/\/([^/@]+@)?(.*)/)||[];let[,o="",a=""]=s.match(/([^#/?]*)(.*)?/)||[];i==="file:"&&(a=a.replace(/\/(?=[A-Za-z]:)/,""));const{pathname:l,search:u,hash:c}=y4(a);return{protocol:i.toLowerCase(),auth:r?r.slice(0,Math.max(0,r.length-1)):"",host:o,pathname:l,search:u,hash:c,[Xc]:!i}}function y4(n=""){const[e="",t="",i=""]=(n.match(/([^#?]*)(\?[^#]*)?(#.*)?/)||[]).splice(1);return{pathname:e,search:t,hash:i}}function Dh(n){const e=n.pathname||"",t=n.search?(n.search.startsWith("?")?"":"?")+n.search:"",i=n.hash||"",r=n.auth?n.auth+"@":"",s=n.host||"";return(n.protocol||n[Xc]?(n.protocol||"")+"//":"")+r+s+e+t+i}class Uh extends Error{constructor(e,t){super(e,t),this.name="FetchError",t?.cause&&!this.cause&&(this.cause=t.cause)}}function Oh(n){const e=n.error?.message||n.error?.toString()||"",t=n.request?.method||n.options?.method||"GET",i=n.request?.url||String(n.request)||"/",r=`[${t}] ${JSON.stringify(i)}`,s=n.response?`${n.response.status} ${n.response.statusText}`:"<no response>",o=`${r}: ${s}${e?` ${e}`:""}`,a=new Uh(o,n.error?{cause:n.error}:void 0);for(const l of["request","options","response"])Object.defineProperty(a,l,{get(){return n[l]}});for(const[l,u]of[["data","_data"],["status","status"],["statusCode","status"],["statusText","statusText"],["statusMessage","statusText"]])Object.defineProperty(a,l,{get(){return n.response&&n.response[u]}});return a}const Fh=new Set(Object.freeze(["PATCH","POST","PUT","DELETE"]));function x4(n="GET"){return Fh.has(n.toUpperCase())}function Nh(n){if(n===void 0)return!1;const e=typeof n;return e==="string"||e==="number"||e==="boolean"||e===null?!0:e!=="object"?!1:Array.isArray(n)?!0:n.buffer?!1:n.constructor&&n.constructor.name==="Object"||typeof n.toJSON=="function"}const Bh=new Set(["image/svg","application/xml","application/xhtml","application/html"]),kh=/^application\/(?:[\w!#$%&*.^`~-]*\+)?json(;.+)?$/i;function Hh(n=""){if(!n)return"json";const e=n.split(";").shift()||"";return kh.test(e)?"json":Bh.has(e)||e.startsWith("text/")?"text":"blob"}function zh(n,e,t,i){const r=Vh(e?.headers??n?.headers,t?.headers,i);let s;return(t?.query||t?.params||e?.params||e?.query)&&(s={...t?.params,...t?.query,...e?.params,...e?.query}),{...t,...e,query:s,params:s,headers:r}}function Vh(n,e,t){if(!e)return new t(n);const i=new t(e);if(n)for(const[r,s]of Symbol.iterator in n||Array.isArray(n)?n:new t(n))i.set(r,s);return i}async function ei(n,e){if(e)if(Array.isArray(e))for(const t of e)await t(n);else await e(n)}const Gh=new Set([408,409,425,429,500,502,503,504]),Wh=new Set([101,204,205,304]);function qc(n={}){const{fetch:e=globalThis.fetch,Headers:t=globalThis.Headers,AbortController:i=globalThis.AbortController}=n;async function r(a){const l=a.error&&a.error.name==="AbortError"&&!a.options.timeout||!1;if(a.options.retry!==!1&&!l){let c;typeof a.options.retry=="number"?c=a.options.retry:c=x4(a.options.method)?0:1;const f=a.response&&a.response.status||500;if(c>0&&(Array.isArray(a.options.retryStatusCodes)?a.options.retryStatusCodes.includes(f):Gh.has(f))){const h=typeof a.options.retryDelay=="function"?a.options.retryDelay(a):a.options.retryDelay||0;return h>0&&await new Promise(d=>setTimeout(d,h)),s(a.request,{...a.options,retry:c-1})}}const u=Oh(a);throw Error.captureStackTrace&&Error.captureStackTrace(u,s),u}const s=async function(l,u={}){const c={request:l,options:zh(l,u,n.defaults,t),response:void 0,error:void 0};c.options.method&&(c.options.method=c.options.method.toUpperCase()),c.options.onRequest&&await ei(c,c.options.onRequest),typeof c.request=="string"&&(c.options.baseURL&&(c.request=Ph(c.request,c.options.baseURL)),c.options.query&&(c.request=Vc(c.request,c.options.query),delete c.options.query),"query"in c.options&&delete c.options.query,"params"in c.options&&delete c.options.params),c.options.body&&x4(c.options.method)&&(Nh(c.options.body)?(c.options.body=typeof c.options.body=="string"?c.options.body:JSON.stringify(c.options.body),c.options.headers=new t(c.options.headers||{}),c.options.headers.has("content-type")||c.options.headers.set("content-type","application/json"),c.options.headers.has("accept")||c.options.headers.set("accept","application/json")):("pipeTo"in c.options.body&&typeof c.options.body.pipeTo=="function"||typeof c.options.body.pipe=="function")&&("duplex"in c.options||(c.options.duplex="half")));let f;if(!c.options.signal&&c.options.timeout){const d=new i;f=setTimeout(()=>{const g=new Error("[TimeoutError]: The operation was aborted due to timeout");g.name="TimeoutError",g.code=23,d.abort(g)},c.options.timeout),c.options.signal=d.signal}try{c.response=await e(c.request,c.options)}catch(d){return c.error=d,c.options.onRequestError&&await ei(c,c.options.onRequestError),await r(c)}finally{f&&clearTimeout(f)}if((c.response.body||c.response._bodyInit)&&!Wh.has(c.response.status)&&c.options.method!=="HEAD"){const d=(c.options.parseResponse?"json":c.options.responseType)||Hh(c.response.headers.get("content-type")||"");switch(d){case"json":{const g=await c.response.text(),y=c.options.parseResponse||Yi;c.response._data=y(g);break}case"stream":{c.response._data=c.response.body||c.response._bodyInit;break}default:c.response._data=await c.response[d]()}}return c.options.onResponse&&await ei(c,c.options.onResponse),!c.options.ignoreResponseError&&c.response.status>=400&&c.response.status<600?(c.options.onResponseError&&await ei(c,c.options.onResponseError),await r(c)):c.response},o=async function(l,u){return(await s(l,u))._data};return o.raw=s,o.native=(...a)=>e(...a),o.create=(a={},l={})=>qc({...n,...l,defaults:{...n.defaults,...l.defaults,...a}}),o}const Zi=(function(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")})(),Xh=Zi.fetch?(...n)=>Zi.fetch(...n):()=>Promise.reject(new Error("[ofetch] global.fetch is not supported!")),$h=Zi.Headers,qh=Zi.AbortController,jh=qc({fetch:Xh,Headers:$h,AbortController:qh}),Yh=jh,Kh=()=>window?.__NUXT__?.config||window?.useNuxtApp?.().payload?.config,ha=()=>Kh().app,Zh=()=>ha().baseURL,Jh=()=>ha().buildAssetsDir,da=(...n)=>Wc(jc(),Jh(),...n),jc=(...n)=>{const e=ha(),t=e.cdnURL||e.baseURL;return n.length?Wc(t,...n):t};globalThis.__buildAssetsURL=da,globalThis.__publicAssetsURL=jc;globalThis.$fetch||(globalThis.$fetch=Yh.create({baseURL:Zh()}));"global"in globalThis||(globalThis.global=globalThis);function Ws(n,e={},t){for(const i in n){const r=n[i],s=t?`${t}:${i}`:i;typeof r=="object"&&r!==null?Ws(r,e,s):typeof r=="function"&&(e[s]=r)}return e}const Qh={run:n=>n()},ed=()=>Qh,Yc=typeof console.createTask<"u"?console.createTask:ed;function td(n,e){const t=e.shift(),i=Yc(t);return n.reduce((r,s)=>r.then(()=>i.run(()=>s(...e))),Promise.resolve())}function nd(n,e){const t=e.shift(),i=Yc(t);return Promise.all(n.map(r=>i.run(()=>r(...e))))}function Hr(n,e){for(const t of[...n])t(e)}class id{constructor(){this._hooks={},this._before=void 0,this._after=void 0,this._deprecatedMessages=void 0,this._deprecatedHooks={},this.hook=this.hook.bind(this),this.callHook=this.callHook.bind(this),this.callHookWith=this.callHookWith.bind(this)}hook(e,t,i={}){if(!e||typeof t!="function")return()=>{};const r=e;let s;for(;this._deprecatedHooks[e];)s=this._deprecatedHooks[e],e=s.to;if(s&&!i.allowDeprecated){let o=s.message;o||(o=`${r} hook has been deprecated`+(s.to?`, please use ${s.to}`:"")),this._deprecatedMessages||(this._deprecatedMessages=new Set),this._deprecatedMessages.has(o)||(console.warn(o),this._deprecatedMessages.add(o))}if(!t.name)try{Object.defineProperty(t,"name",{get:()=>"_"+e.replace(/\W+/g,"_")+"_hook_cb",configurable:!0})}catch{}return this._hooks[e]=this._hooks[e]||[],this._hooks[e].push(t),()=>{t&&(this.removeHook(e,t),t=void 0)}}hookOnce(e,t){let i,r=(...s)=>(typeof i=="function"&&i(),i=void 0,r=void 0,t(...s));return i=this.hook(e,r),i}removeHook(e,t){if(this._hooks[e]){const i=this._hooks[e].indexOf(t);i!==-1&&this._hooks[e].splice(i,1),this._hooks[e].length===0&&delete this._hooks[e]}}deprecateHook(e,t){this._deprecatedHooks[e]=typeof t=="string"?{to:t}:t;const i=this._hooks[e]||[];delete this._hooks[e];for(const r of i)this.hook(e,r)}deprecateHooks(e){Object.assign(this._deprecatedHooks,e);for(const t in e)this.deprecateHook(t,e[t])}addHooks(e){const t=Ws(e),i=Object.keys(t).map(r=>this.hook(r,t[r]));return()=>{for(const r of i.splice(0,i.length))r()}}removeHooks(e){const t=Ws(e);for(const i in t)this.removeHook(i,t[i])}removeAllHooks(){for(const e in this._hooks)delete this._hooks[e]}callHook(e,...t){return t.unshift(e),this.callHookWith(td,e,...t)}callHookParallel(e,...t){return t.unshift(e),this.callHookWith(nd,e,...t)}callHookWith(e,t,...i){const r=this._before||this._after?{name:t,args:i,context:{}}:void 0;this._before&&Hr(this._before,r);const s=e(t in this._hooks?[...this._hooks[t]]:[],i);return s instanceof Promise?s.finally(()=>{this._after&&r&&Hr(this._after,r)}):(this._after&&r&&Hr(this._after,r),s)}beforeEach(e){return this._before=this._before||[],this._before.push(e),()=>{if(this._before!==void 0){const t=this._before.indexOf(e);t!==-1&&this._before.splice(t,1)}}}afterEach(e){return this._after=this._after||[],this._after.push(e),()=>{if(this._after!==void 0){const t=this._after.indexOf(e);t!==-1&&this._after.splice(t,1)}}}}function Kc(){return new id}function rd(n={}){let e,t=!1;const i=o=>{if(e&&e!==o)throw new Error("Context conflict")};let r;if(n.asyncContext){const o=n.AsyncLocalStorage||globalThis.AsyncLocalStorage;o?r=new o:console.warn("[unctx] `AsyncLocalStorage` is not provided.")}const s=()=>{if(r){const o=r.getStore();if(o!==void 0)return o}return e};return{use:()=>{const o=s();if(o===void 0)throw new Error("Context is not available");return o},tryUse:()=>s(),set:(o,a)=>{a||i(o),e=o,t=!0},unset:()=>{e=void 0,t=!1},call:(o,a)=>{i(o),e=o;try{return r?r.run(o,a):a()}finally{t||(e=void 0)}},async callAsync(o,a){e=o;const l=()=>{e=o},u=()=>e===o?l:void 0;Xs.add(u);try{const c=r?r.run(o,a):a();return t||(e=void 0),await c}finally{Xs.delete(u)}}}}function sd(n={}){const e={};return{get(t,i={}){return e[t]||(e[t]=rd({...n,...i})),e[t]}}}const Ji=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof global<"u"?global:typeof window<"u"?window:{},M4="__unctx__",od=Ji[M4]||(Ji[M4]=sd()),ad=(n,e={})=>od.get(n,e),S4="__unctx_async_handlers__",Xs=Ji[S4]||(Ji[S4]=new Set);function C0(n){const e=[];for(const r of Xs){const s=r();s&&e.push(s)}const t=()=>{for(const r of e)r()};let i=n();return i&&typeof i=="object"&&"catch"in i&&(i=i.catch(r=>{throw t(),r})),[i,t]}const E4={name:"page-transition",mode:"out-in"},ld={name:"layout-transition",mode:"out-in"},cd=!1,b4={id:"__nuxt-loader"},tM={componentName:"NuxtLink",prefetch:!0,prefetchOn:{visibility:!0}},ud="#__nuxt",Zc="nuxt-app",T4=36e5,fd="vite:preloadError";function Jc(n=Zc){return ad(n,{asyncContext:!1})}const hd="__nuxt_plugin";function dd(n){let e=0;const t={_id:n.id||Zc||"nuxt-app",_scope:O5(),provide:void 0,versions:{get nuxt(){return"4.1.1"},get vue(){return t.vueApp.version}},payload:de({...n.ssrContext?.payload||{},data:de({}),state:vt({}),once:new Set,_errors:de({})}),static:{data:{}},runWithContext(r){return t._scope.active&&!yl()?t._scope.run(()=>w4(t,r)):w4(t,r)},isHydrating:!0,deferHydration(){if(!t.isHydrating)return()=>{};e++;let r=!1;return()=>{if(!r&&(r=!0,e--,e===0))return t.isHydrating=!1,t.callHook("app:suspense:resolve")}},_asyncDataPromises:{},_asyncData:de({}),_payloadRevivers:{},...n};{const r=window.__NUXT__;if(r)for(const s in r)switch(s){case"data":case"state":case"_errors":Object.assign(t.payload[s],r[s]);break;default:t.payload[s]=r[s]}}t.hooks=Kc(),t.hook=t.hooks.hook,t.callHook=t.hooks.callHook,t.provide=(r,s)=>{const o="$"+r;ti(t,o,s),ti(t.vueApp.config.globalProperties,o,s)},ti(t.vueApp,"$nuxt",t),ti(t.vueApp.config.globalProperties,"$nuxt",t);{window.addEventListener(fd,s=>{t.callHook("app:chunkError",{error:s.payload}),s.payload.message.includes("Unable to preload CSS")&&s.preventDefault()}),window.useNuxtApp||=W2;const r=t.hook("app:error",(...s)=>{console.error("[nuxt] error caught during app initialization",...s)});t.hook("app:mounted",r)}const i=t.payload.config;return t.provide("config",i),t}function pd(n,e){e.hooks&&n.hooks.addHooks(e.hooks)}async function md(n,e){if(typeof e=="function"){const{provide:t}=await n.runWithContext(()=>e(n))||{};if(t&&typeof t=="object")for(const i in t)n.provide(i,t[i])}}async function _d(n,e){const t=new Set,i=[],r=[];let s,o=0;async function a(l){const u=l.dependsOn?.filter(c=>e.some(f=>f._name===c)&&!t.has(c))??[];if(u.length>0)i.push([new Set(u),l]);else{const c=md(n,l).then(async()=>{l._name&&(t.add(l._name),await Promise.all(i.map(async([f,h])=>{f.has(l._name)&&(f.delete(l._name),f.size===0&&(o++,await a(h)))})))}).catch(f=>{if(!l.parallel&&!n.payload.error)throw f;s||=f});l.parallel?r.push(c):await c}}for(const l of e)pd(n,l);for(const l of e)await a(l);if(await Promise.all(r),o)for(let l=0;l<o;l++)await Promise.all(r);if(s)throw n.payload.error||s}function qe(n){if(typeof n=="function")return n;const e=n._name||n.name;return delete n.name,Object.assign(n.setup||(()=>{}),n,{[hd]:!0,_name:e})}function w4(n,e,t){const i=()=>e();return Jc(n._id).set(n),n.vueApp.runWithContext(i)}function gd(n){let e;return ia()&&(e=$e()?.appContext.app.$nuxt),e||=Jc(n).tryUse(),e||null}function W2(n){const e=gd(n);if(!e)throw new Error("[nuxt] instance unavailable");return e}function mr(n){return W2().$config}function ti(n,e,t){Object.defineProperty(n,e,{get:()=>t})}function vd(n,e){return{ctx:{table:n},matchAll:t=>e6(t,n)}}function Qc(n){const e={};for(const t in n)e[t]=t==="dynamic"?new Map(Object.entries(n[t]).map(([i,r])=>[i,Qc(r)])):new Map(Object.entries(n[t]));return e}function yd(n){return vd(Qc(n))}function e6(n,e,t){n.endsWith("/")&&(n=n.slice(0,-1)||"/");const i=[];for(const[s,o]of A4(e.wildcard))(n===s||n.startsWith(s+"/"))&&i.push(o);for(const[s,o]of A4(e.dynamic))if(n.startsWith(s+"/")){const a="/"+n.slice(s.length).split("/").splice(2).join("/");i.push(...e6(a,o))}const r=e.static.get(n);return r&&i.push(r),i.filter(Boolean)}function A4(n){return[...n.entries()].sort((e,t)=>e[0].length-t[0].length)}function zr(n){if(n===null||typeof n!="object")return!1;const e=Object.getPrototypeOf(n);return e!==null&&e!==Object.prototype&&Object.getPrototypeOf(e)!==null||Symbol.iterator in n?!1:Symbol.toStringTag in n?Object.prototype.toString.call(n)==="[object Module]":!0}function $s(n,e,t=".",i){if(!zr(e))return $s(n,{},t,i);const r=Object.assign({},e);for(const s in n){if(s==="__proto__"||s==="constructor")continue;const o=n[s];o!=null&&(i&&i(r,s,o,t)||(Array.isArray(o)&&Array.isArray(r[s])?r[s]=[...o,...r[s]]:zr(o)&&zr(r[s])?r[s]=$s(o,r[s],(t?`${t}.`:"")+s.toString(),i):r[s]=o))}return r}function xd(n){return(...e)=>e.reduce((t,i)=>$s(t,i,"",n),{})}const t6=xd();function Md(n,e){try{return e in n}catch{return!1}}class C4 extends Error{static __h3_error__=!0;statusCode=500;fatal=!1;unhandled=!1;statusMessage;data;cause;constructor(e,t={}){super(e,t),t.cause&&!this.cause&&(this.cause=t.cause)}toJSON(){const e={message:this.message,statusCode:qs(this.statusCode,500)};return this.statusMessage&&(e.statusMessage=n6(this.statusMessage)),this.data!==void 0&&(e.data=this.data),e}}function Sd(n){if(typeof n=="string")return new C4(n);if(Ed(n))return n;const e=new C4(n.message??n.statusMessage??"",{cause:n.cause||n});if(Md(n,"stack"))try{Object.defineProperty(e,"stack",{get(){return n.stack}})}catch{try{e.stack=n.stack}catch{}}if(n.data&&(e.data=n.data),n.statusCode?e.statusCode=qs(n.statusCode,e.statusCode):n.status&&(e.statusCode=qs(n.status,e.statusCode)),n.statusMessage?e.statusMessage=n.statusMessage:n.statusText&&(e.statusMessage=n.statusText),e.statusMessage){const t=e.statusMessage;n6(e.statusMessage)!==t&&console.warn("[h3] Please prefer using `message` for longer error messages instead of `statusMessage`. In the future, `statusMessage` will be sanitized by default.")}return n.fatal!==void 0&&(e.fatal=n.fatal),n.unhandled!==void 0&&(e.unhandled=n.unhandled),e}function Ed(n){return n?.constructor?.__h3_error__===!0}const bd=/[^\u0009\u0020-\u007E]/g;function n6(n=""){return n.replace(bd,"")}function qs(n,e=200){return!n||(typeof n=="string"&&(n=Number.parseInt(n,10)),n<100||n>999)?e:n}const i6=Symbol("layout-meta"),qt=Symbol("route");import.meta.url.replace(/\/app\/.*$/,"/");const O3=()=>W2()?.$router,_r=()=>ia()?o3(qt,W2()._route):W2()._route;const Td=()=>{try{if(W2()._processingMiddleware)return!0}catch{return!1}return!1},nM=(n,e)=>{n||="/";const t=typeof n=="string"?n:"path"in n?wd(n):O3().resolve(n).href;if(e?.open){const{target:l="_blank",windowFeatures:u={}}=e.open,c=Object.entries(u).filter(([f,h])=>h!==void 0).map(([f,h])=>`${f.toLowerCase()}=${h}`).join(", ");return open(t,l,c),Promise.resolve()}const i=Kt(t,{acceptRelative:!0}),r=e?.external||i;if(r){if(!e?.external)throw new Error("Navigating to an external URL is not allowed by default. Use `navigateTo(url, { external: true })`.");const{protocol:l}=new URL(t,window.location.href);if(l&&Ch(l))throw new Error(`Cannot navigate to a URL with '${l}' protocol.`)}const s=Td();if(!r&&s){if(e?.replace){if(typeof n=="string"){const{pathname:l,search:u,hash:c}=$c(n);return{path:l,...u&&{query:zc(u)},...c&&{hash:c},replace:!0}}return{...n,replace:!0}}return n}const o=O3(),a=W2();return r?(a._scope.stop(),e?.replace?location.replace(t):location.href=t,s?a.isHydrating?new Promise(()=>{}):!1:Promise.resolve()):e?.replace?o.replace(n):o.push(n)};function wd(n){return Vc(n.path||"",n.query||{})+(n.hash||"")}const r6="__nuxt_error",gr=()=>uu(W2().payload,"error"),Lt=n=>{const e=Wt(n);try{const t=W2(),i=gr();t.hooks.callHook("app:error",e),i.value||=e}catch{throw e}return e},Ad=async(n={})=>{const e=W2(),t=gr();e.callHook("app:error:cleared",n),n.redirect&&await O3().replace(n.redirect),t.value=void 0},s6=n=>!!n&&typeof n=="object"&&r6 in n,Wt=n=>{const e=Sd(n);return Object.defineProperty(e,r6,{value:!0,configurable:!1,writable:!1}),e};function Cd(n){const e=Pd(n),t=new ArrayBuffer(e.length),i=new DataView(t);for(let r=0;r<t.byteLength;r++)i.setUint8(r,e.charCodeAt(r));return t}const Rd="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";function Pd(n){n.length%4===0&&(n=n.replace(/==?$/,""));let e="",t=0,i=0;for(let r=0;r<n.length;r++)t<<=6,t|=Rd.indexOf(n[r]),i+=6,i===24&&(e+=String.fromCharCode((t&16711680)>>16),e+=String.fromCharCode((t&65280)>>8),e+=String.fromCharCode(t&255),t=i=0);return i===12?(t>>=4,e+=String.fromCharCode(t)):i===18&&(t>>=2,e+=String.fromCharCode((t&65280)>>8),e+=String.fromCharCode(t&255)),e}const Ld=-1,Id=-2,Dd=-3,Ud=-4,Od=-5,Fd=-6;function Nd(n,e){return Bd(JSON.parse(n),e)}function Bd(n,e){if(typeof n=="number")return r(n,!0);if(!Array.isArray(n)||n.length===0)throw new Error("Invalid input");const t=n,i=Array(t.length);function r(s,o=!1){if(s===Ld)return;if(s===Dd)return NaN;if(s===Ud)return 1/0;if(s===Od)return-1/0;if(s===Fd)return-0;if(o||typeof s!="number")throw new Error("Invalid input");if(s in i)return i[s];const a=t[s];if(!a||typeof a!="object")i[s]=a;else if(Array.isArray(a))if(typeof a[0]=="string"){const l=a[0],u=e?.[l];if(u)return i[s]=u(r(a[1]));switch(l){case"Date":i[s]=new Date(a[1]);break;case"Set":const c=new Set;i[s]=c;for(let d=1;d<a.length;d+=1)c.add(r(a[d]));break;case"Map":const f=new Map;i[s]=f;for(let d=1;d<a.length;d+=2)f.set(r(a[d]),r(a[d+1]));break;case"RegExp":i[s]=new RegExp(a[1],a[2]);break;case"Object":i[s]=Object(a[1]);break;case"BigInt":i[s]=BigInt(a[1]);break;case"null":const h=Object.create(null);i[s]=h;for(let d=1;d<a.length;d+=2)h[a[d]]=r(a[d+1]);break;case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"BigInt64Array":case"BigUint64Array":{const d=globalThis[l],g=new d(r(a[1]));i[s]=a[2]!==void 0?g.subarray(a[2],a[3]):g;break}case"ArrayBuffer":{const d=a[1],g=Cd(d);i[s]=g;break}case"Temporal.Duration":case"Temporal.Instant":case"Temporal.PlainDate":case"Temporal.PlainTime":case"Temporal.PlainDateTime":case"Temporal.PlainMonthDay":case"Temporal.PlainYearMonth":case"Temporal.ZonedDateTime":{const d=l.slice(9);i[s]=Temporal[d].from(a[1]);break}case"URL":{const d=new URL(a[1]);i[s]=d;break}case"URLSearchParams":{const d=new URLSearchParams(a[1]);i[s]=d;break}default:throw new Error(`Unknown type ${l}`)}}else{const l=new Array(a.length);i[s]=l;for(let u=0;u<a.length;u+=1){const c=a[u];c!==Id&&(l[u]=r(c))}}else{const l={};i[s]=l;for(const u in a){if(u==="__proto__")throw new Error("Cannot parse an object with a `__proto__` property");const c=a[u];l[u]=r(c)}}return i[s]}return r(0)}const kd=new Set(["link","style","script","noscript"]),Hd=new Set(["title","titleTemplate","script","style","noscript"]),R4=new Set(["base","meta","link","style","script","noscript"]),zd=new Set(["title","base","htmlAttrs","bodyAttrs","meta","link","style","script","noscript"]),Vd=new Set(["base","title","titleTemplate","bodyAttrs","htmlAttrs","templateParams"]),Gd=new Set(["key","tagPosition","tagPriority","tagDuplicateStrategy","innerHTML","textContent","processTemplateParams"]),Wd=new Set(["templateParams","htmlAttrs","bodyAttrs"]),Xd=new Set(["theme-color","google-site-verification","og","article","book","profile","twitter","author"]),$d=["name","property","http-equiv"],qd=new Set(["viewport","description","keywords","robots"]);function o6(n){const e=n.split(":");return e.length?Xd.has(e[1]):!1}function js(n){const{props:e,tag:t}=n;if(Vd.has(t))return t;if(t==="link"&&e.rel==="canonical")return"canonical";if(e.charset)return"charset";if(n.tag==="meta"){for(const i of $d)if(e[i]!==void 0){const r=e[i],s=r.includes(":"),o=qd.has(r),l=!(s||o)&&n.key?`:key:${n.key}`:"";return`${t}:${r}${l}`}}if(n.key)return`${t}:key:${n.key}`;if(e.id)return`${t}:id:${e.id}`;if(Hd.has(t)){const i=n.textContent||n.innerHTML;if(i)return`${t}:content:${i}`}}function P4(n){const e=n._h||n._d;if(e)return e;const t=n.textContent||n.innerHTML;return t||`${n.tag}:${Object.entries(n.props).map(([i,r])=>`${i}:${String(r)}`).join(",")}`}function Qi(n,e,t){typeof n==="function"&&(!t||t!=="titleTemplate"&&!(t[0]==="o"&&t[1]==="n"))&&(n=n());let r;if(e&&(r=e(t,n)),Array.isArray(r))return r.map(s=>Qi(s,e));if(r?.constructor===Object){const s={};for(const o of Object.keys(r))s[o]=Qi(r[o],e,o);return s}return r}function jd(n,e){const t=n==="style"?new Map:new Set;function i(r){const s=r.trim();if(s)if(n==="style"){const[o,...a]=s.split(":").map(l=>l.trim());o&&a.length&&t.set(o,a.join(":"))}else s.split(" ").filter(Boolean).forEach(o=>t.add(o))}return typeof e=="string"?n==="style"?e.split(";").forEach(i):i(e):Array.isArray(e)?e.forEach(r=>i(r)):e&&typeof e=="object"&&Object.entries(e).forEach(([r,s])=>{s&&s!=="false"&&(n==="style"?t.set(r.trim(),s):i(r))}),t}function a6(n,e){return n.props=n.props||{},e?n.tag==="templateParams"?(n.props=e,n):(Object.entries(e).forEach(([t,i])=>{if(i===null){n.props[t]=null;return}if(t==="class"||t==="style"){n.props[t]=jd(t,i);return}if(Gd.has(t)){if(["textContent","innerHTML"].includes(t)&&typeof i=="object"){let o=e.type;if(e.type||(o="application/json"),!o?.endsWith("json")&&o!=="speculationrules")return;e.type=o,n.props.type=o,n[t]=JSON.stringify(i)}else n[t]=i;return}const r=String(i),s=t.startsWith("data-");r==="true"||r===""?n.props[t]=s?r:!0:!i&&s&&r==="false"?n.props[t]="false":i!==void 0&&(n.props[t]=i)}),n):n}function Yd(n,e){const t=typeof e=="object"&&typeof e!="function"?e:{[n==="script"||n==="noscript"||n==="style"?"innerHTML":"textContent"]:e},i=a6({tag:n,props:{}},t);return i.key&&kd.has(i.tag)&&(i.props["data-hid"]=i._h=i.key),i.tag==="script"&&typeof i.innerHTML=="object"&&(i.innerHTML=JSON.stringify(i.innerHTML),i.props.type=i.props.type||"application/json"),Array.isArray(i.props.content)?i.props.content.map(r=>({...i,props:{...i.props,content:r}})):i}function Kd(n,e){if(!n)return[];typeof n=="function"&&(n=n());const t=(r,s)=>{for(let o=0;o<e.length;o++)s=e[o](r,s);return s};n=t(void 0,n);const i=[];return n=Qi(n,t),Object.entries(n||{}).forEach(([r,s])=>{if(s!==void 0)for(const o of Array.isArray(s)?s:[s])i.push(Yd(r,o))}),i.flat()}const L4=(n,e)=>n._w===e._w?n._p-e._p:n._w-e._w,I4={base:-10,title:10},Zd={critical:-8,high:-1,low:2},D4={meta:{"content-security-policy":-30,charset:-20,viewport:-15},link:{preconnect:20,stylesheet:60,preload:70,modulepreload:70,prefetch:90,"dns-prefetch":90,prerender:90},script:{async:30,defer:80,sync:50},style:{imported:40,sync:60}},Jd=/@import/,Q0=n=>n===""||n===!0;function Qd(n,e){if(typeof e.tagPriority=="number")return e.tagPriority;let t=100;const i=Zd[e.tagPriority]||0,r=n.resolvedOptions.disableCapoSorting?{link:{},script:{},style:{}}:D4;if(e.tag in I4)t=I4[e.tag];else if(e.tag==="meta"){const s=e.props["http-equiv"]==="content-security-policy"?"content-security-policy":e.props.charset?"charset":e.props.name==="viewport"?"viewport":null;s&&(t=D4.meta[s])}else e.tag==="link"&&e.props.rel?t=r.link[e.props.rel]:e.tag==="script"?Q0(e.props.async)?t=r.script.async:e.props.src&&!Q0(e.props.defer)&&!Q0(e.props.async)&&e.props.type!=="module"&&!e.props.type?.endsWith("json")?t=r.script.sync:Q0(e.props.defer)&&e.props.src&&!Q0(e.props.async)&&(t=r.script.defer):e.tag==="style"&&(t=e.innerHTML&&Jd.test(e.innerHTML)?r.style.imported:r.style.sync);return(t||100)+i}function U4(n,e){const t=typeof e=="function"?e(n):e,i=t.key||String(n.plugins.size+1);n.plugins.get(i)||(n.plugins.set(i,t),n.hooks.addHooks(t.hooks||{}))}function e7(n={}){const e=Kc();e.addHooks(n.hooks||{});const t=!n.document,i=new Map,r=new Map,s=new Set,o={_entryCount:1,plugins:r,dirty:!1,resolvedOptions:n,hooks:e,ssr:t,entries:i,headEntries(){return[...i.values()]},use:a=>U4(o,a),push(a,l){const u={...l||{}};delete u.head;const c=u._index??o._entryCount++,f={_i:c,input:a,options:u},h={_poll(d=!1){o.dirty=!0,!d&&s.add(c),e.callHook("entries:updated",o)},dispose(){i.delete(c)&&o.invalidate()},patch(d){(!u.mode||u.mode==="server"&&t||u.mode==="client"&&!t)&&(f.input=d,i.set(c,f),h._poll())}};return h.patch(a),h},async resolveTags(){const a={tagMap:new Map,tags:[],entries:[...o.entries.values()]};for(await e.callHook("entries:resolve",a);s.size;){const h=s.values().next().value;s.delete(h);const d=i.get(h);if(d){const g={tags:Kd(d.input,n.propResolvers||[]).map(y=>Object.assign(y,d.options)),entry:d};await e.callHook("entries:normalize",g),d._tags=g.tags.map((y,m)=>(y._w=Qd(o,y),y._p=(d._i<<10)+m,y._d=js(y),y))}}let l=!1;a.entries.flatMap(h=>(h._tags||[]).map(d=>({...d,props:{...d.props}}))).sort(L4).reduce((h,d)=>{const g=String(d._d||d._p);if(!h.has(g))return h.set(g,d);const y=h.get(g);if((d?.tagDuplicateStrategy||(Wd.has(d.tag)?"merge":null)||(d.key&&d.key===y.key?"merge":null))==="merge"){const p={...y.props};Object.entries(d.props).forEach(([w,M])=>p[w]=w==="style"?new Map([...y.props.style||new Map,...M]):w==="class"?new Set([...y.props.class||new Set,...M]):M),h.set(g,{...d,props:p})}else d._p>>10===y._p>>10&&d.tag==="meta"&&o6(g)?(h.set(g,Object.assign([...Array.isArray(y)?y:[y],d],d)),l=!0):(d._w===y._w?d._p>y._p:d?._w<y?._w)&&h.set(g,d);return h},a.tagMap);const u=a.tagMap.get("title"),c=a.tagMap.get("titleTemplate");if(o._title=u?.textContent,c){const h=c?.textContent;if(o._titleTemplate=h,h){let d=typeof h=="function"?h(u?.textContent):h;typeof d=="string"&&!o.plugins.has("template-params")&&(d=d.replace("%s",u?.textContent||"")),u?d===null?a.tagMap.delete("title"):a.tagMap.set("title",{...u,textContent:d}):(c.tag="title",c.textContent=d)}}a.tags=Array.from(a.tagMap.values()),l&&(a.tags=a.tags.flat().sort(L4)),await e.callHook("tags:beforeResolve",a),await e.callHook("tags:resolve",a),await e.callHook("tags:afterResolve",a);const f=[];for(const h of a.tags){const{innerHTML:d,tag:g,props:y}=h;if(zd.has(g)&&!(Object.keys(y).length===0&&!h.innerHTML&&!h.textContent)&&!(g==="meta"&&!y.content&&!y["http-equiv"]&&!y.charset)){if(g==="script"&&d){if(y.type?.endsWith("json")){const m=typeof d=="string"?d:JSON.stringify(d);h.innerHTML=m.replace(/</g,"\\u003C")}else typeof d=="string"&&(h.innerHTML=d.replace(new RegExp(`</${g}`,"g"),`<\\/${g}`));h._d=js(h)}f.push(h)}}return f},invalidate(){for(const a of i.values())s.add(a._i);o.dirty=!0,e.callHook("entries:updated",o)}};return(n?.plugins||[]).forEach(a=>U4(o,a)),o.hooks.callHook("init",o),n.init?.forEach(a=>a&&o.push(a)),o}const t7=(n,e)=>z2(e)?iu(e):e,l6="usehead";function n7(n){return{install(t){t.config.globalProperties.$unhead=n,t.config.globalProperties.$head=n,t.provide(l6,n)}}.install}function i7(){if(ia()){const n=o3(l6);if(!n)throw new Error("useHead() was called without provide context, ensure you call it through the setup() function.");return n}throw new Error("useHead() was called without provide context, ensure you call it through the setup() function.")}function iM(n,e={}){const t=e.head||i7();return t.ssr?t.push(n||{},e):r7(t,n,e)}function r7(n,e,t={}){const i=ve(!1);let r;return Qu(()=>{const o=i.value?{}:Qi(e,t7);r?r.patch(o):r=n.push(o,t)}),$e()&&(X0(()=>{r.dispose()}),Yl(()=>{i.value=!0}),jl(()=>{i.value=!1})),r}const s7="modulepreload",o7=function(n,e){return new URL(n,e).href},O4={},C3=function(e,t,i){let r=Promise.resolve();if(t&&t.length>0){let u=function(c){return Promise.all(c.map(f=>Promise.resolve(f).then(h=>({status:"fulfilled",value:h}),h=>({status:"rejected",reason:h}))))};const o=document.getElementsByTagName("link"),a=document.querySelector("meta[property=csp-nonce]"),l=a?.nonce||a?.getAttribute("nonce");r=u(t.map(c=>{if(c=o7(c,i),c in O4)return;O4[c]=!0;const f=c.endsWith(".css"),h=f?'[rel="stylesheet"]':"";if(!!i)for(let y=o.length-1;y>=0;y--){const m=o[y];if(m.href===c&&(!f||m.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${c}"]${h}`))return;const g=document.createElement("link");if(g.rel=f?"stylesheet":s7,f||(g.as="script"),g.crossOrigin="",g.href=c,l&&g.setAttribute("nonce",l),document.head.appendChild(g),f)return new Promise((y,m)=>{g.addEventListener("load",y),g.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${c}`)))})}))}function s(o){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=o,window.dispatchEvent(a),!a.defaultPrevented)throw o}return r.then(o=>{for(const a of o||[])a.status==="rejected"&&s(a.reason);return e().catch(s)})};let Ai,Ci;function a7(){return Ai=$fetch(da(`builds/meta/${mr().app.buildId}.json`),{responseType:"json"}),Ai.then(n=>{Ci=yd(n.matcher)}).catch(n=>{console.error("[nuxt] Error fetching app manifest.",n)}),Ai}function vr(){return Ai||a7()}async function pa(n){const e=typeof n=="string"?n:n.path;if(await vr(),!Ci)return console.error("[nuxt] Error creating app manifest matcher.",Ci),{};try{return t6({},...Ci.matchAll(e).reverse())}catch(t){return console.error("[nuxt] Error matching route rules.",t),{}}}async function F4(n,e={}){if(!await u6(n))return null;const i=await c7(n,e);return await c6(i)||null}const l7="_payload.json";async function c7(n,e={}){const t=new URL(n,"http://localhost");if(t.host!=="localhost"||Kt(t.pathname,{acceptRelative:!0}))throw new Error("Payload URL must not include hostname: "+n);const i=mr(),r=e.hash||(e.fresh?Date.now():i.app.buildId),s=i.app.cdnURL,o=s&&await u6(n)?s:i.app.baseURL;return fa(o,t.pathname,l7+(r?`?${r}`:""))}async function c6(n){const e=fetch(n,{cache:"force-cache"}).then(t=>t.text().then(f6));try{return await e}catch(t){console.warn("[nuxt] Cannot load payload ",n,t)}return null}async function u6(n=_r().path){const e=W2();return n=En(n),(await vr()).prerendered.includes(n)?!0:e.runWithContext(async()=>{const i=await pa({path:n});return!!i.prerender&&!i.redirect})}let Et=null;async function u7(){if(Et)return Et;const n=document.getElementById("__NUXT_DATA__");if(!n)return{};const e=await f6(n.textContent||""),t=n.dataset.src?await c6(n.dataset.src):void 0;return Et={...e,...t,...window.__NUXT__},Et.config?.public&&(Et.config.public=vt(Et.config.public)),Et}async function f6(n){return await Nd(n,W2()._payloadRevivers)}function f7(n,e){W2()._payloadRevivers[n]=e}const h7=[["NuxtError",n=>Wt(n)],["EmptyShallowRef",n=>Xt(n==="_"?void 0:n==="0n"?BigInt(0):Yi(n))],["EmptyRef",n=>ve(n==="_"?void 0:n==="0n"?BigInt(0):Yi(n))],["ShallowRef",n=>Xt(n)],["ShallowReactive",n=>de(n)],["Ref",n=>ve(n)],["Reactive",n=>vt(n)]],d7=qe({name:"nuxt:revive-payload:client",order:-30,async setup(n){let e,t;for(const[i,r]of h7)f7(i,r);Object.assign(n.payload,([e,t]=C0(()=>n.runWithContext(u7)),e=await e,t(),e)),delete window.__NUXT__}});async function ma(n,e={}){const t=e.document||n.resolvedOptions.document;if(!t||!n.dirty)return;const i={shouldRender:!0,tags:[]};if(await n.hooks.callHook("dom:beforeRender",i),!!i.shouldRender)return n._domUpdatePromise||(n._domUpdatePromise=new Promise(async r=>{const s=new Map,o=new Promise(d=>{n.resolveTags().then(g=>{d(g.map(y=>{const m=s.get(y._d)||0,p={tag:y,id:(m?`${y._d}:${m}`:y._d)||P4(y),shouldRender:!0};return y._d&&o6(y._d)&&s.set(y._d,m+1),p}))})});let a=n._dom;if(!a){a={title:t.title,elMap:new Map().set("htmlAttrs",t.documentElement).set("bodyAttrs",t.body)};for(const d of["body","head"]){const g=t[d]?.children;for(const y of g){const m=y.tagName.toLowerCase();if(!R4.has(m))continue;const p=a6({tag:m,props:{}},{innerHTML:y.innerHTML,...y.getAttributeNames().reduce((w,M)=>(w[M]=y.getAttribute(M),w),{})||{}});if(p.key=y.getAttribute("data-hid")||void 0,p._d=js(p)||P4(p),a.elMap.has(p._d)){let w=1,M=p._d;for(;a.elMap.has(M);)M=`${p._d}:${w++}`;a.elMap.set(M,y)}else a.elMap.set(p._d,y)}}}a.pendingSideEffects={...a.sideEffects},a.sideEffects={};function l(d,g,y){const m=`${d}:${g}`;a.sideEffects[m]=y,delete a.pendingSideEffects[m]}function u({id:d,$el:g,tag:y}){const m=y.tag.endsWith("Attrs");a.elMap.set(d,g),m||(y.textContent&&y.textContent!==g.textContent&&(g.textContent=y.textContent),y.innerHTML&&y.innerHTML!==g.innerHTML&&(g.innerHTML=y.innerHTML),l(d,"el",()=>{g?.remove(),a.elMap.delete(d)}));for(const p in y.props){if(!Object.prototype.hasOwnProperty.call(y.props,p))continue;const w=y.props[p];if(p.startsWith("on")&&typeof w=="function"){const _=g?.dataset;if(_&&_[`${p}fired`]){const A=p.slice(0,-5);w.call(g,new Event(A.substring(2)))}g.getAttribute(`data-${p}`)!==""&&((y.tag==="bodyAttrs"?t.defaultView:g).addEventListener(p.substring(2),w.bind(g)),g.setAttribute(`data-${p}`,""));continue}const M=`attr:${p}`;if(p==="class"){if(!w)continue;for(const _ of w)m&&l(d,`${M}:${_}`,()=>g.classList.remove(_)),!g.classList.contains(_)&&g.classList.add(_)}else if(p==="style"){if(!w)continue;for(const[_,A]of w)l(d,`${M}:${_}`,()=>{g.style.removeProperty(_)}),g.style.setProperty(_,A)}else w!==!1&&w!==null&&(g.getAttribute(p)!==w&&g.setAttribute(p,w===!0?"":String(w)),m&&l(d,M,()=>g.removeAttribute(p)))}}const c=[],f={bodyClose:void 0,bodyOpen:void 0,head:void 0},h=await o;for(const d of h){const{tag:g,shouldRender:y,id:m}=d;if(y){if(g.tag==="title"){t.title=g.textContent,l("title","",()=>t.title=a.title);continue}d.$el=d.$el||a.elMap.get(m),d.$el?u(d):R4.has(g.tag)&&c.push(d)}}for(const d of c){const g=d.tag.tagPosition||"head";d.$el=t.createElement(d.tag.tag),u(d),f[g]=f[g]||t.createDocumentFragment(),f[g].appendChild(d.$el)}for(const d of h)await n.hooks.callHook("dom:renderTag",d,t,l);f.head&&t.head.appendChild(f.head),f.bodyOpen&&t.body.insertBefore(f.bodyOpen,t.body.firstChild),f.bodyClose&&t.body.appendChild(f.bodyClose);for(const d in a.pendingSideEffects)a.pendingSideEffects[d]();n._dom=a,await n.hooks.callHook("dom:rendered",{renders:h}),r()}).finally(()=>{n._domUpdatePromise=void 0,n.dirty=!1})),n._domUpdatePromise}function p7(n={}){const e=n.domOptions?.render||ma;n.document=n.document||(typeof window<"u"?document:void 0);const t=n.document?.head.querySelector('script[id="unhead:payload"]')?.innerHTML||!1;return e7({...n,plugins:[...n.plugins||[],{key:"client",hooks:{"entries:updated":e}}],init:[t?JSON.parse(t):!1,...n.init||[]]})}function m7(n,e){let t=0;return()=>{const i=++t;e(()=>{t===i&&n()})}}function _7(n={}){const e=p7({domOptions:{render:m7(()=>ma(e),t=>setTimeout(t,0))},...n});return e.install=n7(e),e}const g7={disableDefaults:!0},v7=qe({name:"nuxt:head",enforce:"pre",setup(n){const e=_7(g7);n.vueApp.use(e);{let t=!0;const i=async()=>{t=!1,await ma(e)};e.hooks.hook("dom:beforeRender",r=>{r.shouldRender=!t}),n.hooks.hook("page:start",()=>{t=!0}),n.hooks.hook("page:finish",()=>{n.isHydrating||i()}),n.hooks.hook("app:error",i),n.hooks.hook("app:suspense:resolve",i)}}});/*!
  * vue-router v4.5.1
  * (c) 2025 Eduardo San Martin Morote
  * @license MIT
  */const y0=typeof document<"u";function h6(n){return typeof n=="object"||"displayName"in n||"props"in n||"__vccOpts"in n}function y7(n){return n.__esModule||n[Symbol.toStringTag]==="Module"||n.default&&h6(n.default)}const y2=Object.assign;function Vr(n,e){const t={};for(const i in e){const r=e[i];t[i]=ne(r)?r.map(n):n(r)}return t}const _n=()=>{},ne=Array.isArray,d6=/#/g,x7=/&/g,M7=/\//g,S7=/=/g,E7=/\?/g,p6=/\+/g,b7=/%5B/g,T7=/%5D/g,m6=/%5E/g,w7=/%60/g,_6=/%7B/g,A7=/%7C/g,g6=/%7D/g,C7=/%20/g;function _a(n){return encodeURI(""+n).replace(A7,"|").replace(b7,"[").replace(T7,"]")}function R7(n){return _a(n).replace(_6,"{").replace(g6,"}").replace(m6,"^")}function Ys(n){return _a(n).replace(p6,"%2B").replace(C7,"+").replace(d6,"%23").replace(x7,"%26").replace(w7,"`").replace(_6,"{").replace(g6,"}").replace(m6,"^")}function P7(n){return Ys(n).replace(S7,"%3D")}function L7(n){return _a(n).replace(d6,"%23").replace(E7,"%3F")}function I7(n){return n==null?"":L7(n).replace(M7,"%2F")}function bn(n){try{return decodeURIComponent(""+n)}catch{}return""+n}const D7=/\/$/,U7=n=>n.replace(D7,"");function Gr(n,e,t="/"){let i,r={},s="",o="";const a=e.indexOf("#");let l=e.indexOf("?");return a<l&&a>=0&&(l=-1),l>-1&&(i=e.slice(0,l),s=e.slice(l+1,a>-1?a:e.length),r=n(s)),a>-1&&(i=i||e.slice(0,a),o=e.slice(a,e.length)),i=B7(i??e,t),{fullPath:i+(s&&"?")+s+o,path:i,query:r,hash:bn(o)}}function O7(n,e){const t=e.query?n(e.query):"";return e.path+(t&&"?")+t+(e.hash||"")}function N4(n,e){return!e||!n.toLowerCase().startsWith(e.toLowerCase())?n:n.slice(e.length)||"/"}function F7(n,e,t){const i=e.matched.length-1,r=t.matched.length-1;return i>-1&&i===r&&N0(e.matched[i],t.matched[r])&&v6(e.params,t.params)&&n(e.query)===n(t.query)&&e.hash===t.hash}function N0(n,e){return(n.aliasOf||n)===(e.aliasOf||e)}function v6(n,e){if(Object.keys(n).length!==Object.keys(e).length)return!1;for(const t in n)if(!N7(n[t],e[t]))return!1;return!0}function N7(n,e){return ne(n)?B4(n,e):ne(e)?B4(e,n):n===e}function B4(n,e){return ne(e)?n.length===e.length&&n.every((t,i)=>t===e[i]):n.length===1&&n[0]===e}function B7(n,e){if(n.startsWith("/"))return n;if(!n)return e;const t=e.split("/"),i=n.split("/"),r=i[i.length-1];(r===".."||r===".")&&i.push("");let s=t.length-1,o,a;for(o=0;o<i.length;o++)if(a=i[o],a!==".")if(a==="..")s>1&&s--;else break;return t.slice(0,s).join("/")+"/"+i.slice(o).join("/")}const H3={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var Tn;(function(n){n.pop="pop",n.push="push"})(Tn||(Tn={}));var gn;(function(n){n.back="back",n.forward="forward",n.unknown=""})(gn||(gn={}));function k7(n){if(!n)if(y0){const e=document.querySelector("base");n=e&&e.getAttribute("href")||"/",n=n.replace(/^\w+:\/\/[^\/]+/,"")}else n="/";return n[0]!=="/"&&n[0]!=="#"&&(n="/"+n),U7(n)}const H7=/^[^#]+#/;function z7(n,e){return n.replace(H7,"#")+e}function V7(n,e){const t=document.documentElement.getBoundingClientRect(),i=n.getBoundingClientRect();return{behavior:e.behavior,left:i.left-t.left-(e.left||0),top:i.top-t.top-(e.top||0)}}const yr=()=>({left:window.scrollX,top:window.scrollY});function G7(n){let e;if("el"in n){const t=n.el,i=typeof t=="string"&&t.startsWith("#"),r=typeof t=="string"?i?document.getElementById(t.slice(1)):document.querySelector(t):t;if(!r)return;e=V7(r,n)}else e=n;"scrollBehavior"in document.documentElement.style?window.scrollTo(e):window.scrollTo(e.left!=null?e.left:window.scrollX,e.top!=null?e.top:window.scrollY)}function k4(n,e){return(history.state?history.state.position-e:-1)+n}const Ks=new Map;function W7(n,e){Ks.set(n,e)}function X7(n){const e=Ks.get(n);return Ks.delete(n),e}let $7=()=>location.protocol+"//"+location.host;function y6(n,e){const{pathname:t,search:i,hash:r}=e,s=n.indexOf("#");if(s>-1){let a=r.includes(n.slice(s))?n.slice(s).length:1,l=r.slice(a);return l[0]!=="/"&&(l="/"+l),N4(l,"")}return N4(t,n)+i+r}function q7(n,e,t,i){let r=[],s=[],o=null;const a=({state:h})=>{const d=y6(n,location),g=t.value,y=e.value;let m=0;if(h){if(t.value=d,e.value=h,o&&o===g){o=null;return}m=y?h.position-y.position:0}else i(d);r.forEach(p=>{p(t.value,g,{delta:m,type:Tn.pop,direction:m?m>0?gn.forward:gn.back:gn.unknown})})};function l(){o=t.value}function u(h){r.push(h);const d=()=>{const g=r.indexOf(h);g>-1&&r.splice(g,1)};return s.push(d),d}function c(){const{history:h}=window;h.state&&h.replaceState(y2({},h.state,{scroll:yr()}),"")}function f(){for(const h of s)h();s=[],window.removeEventListener("popstate",a),window.removeEventListener("beforeunload",c)}return window.addEventListener("popstate",a),window.addEventListener("beforeunload",c,{passive:!0}),{pauseListeners:l,listen:u,destroy:f}}function H4(n,e,t,i=!1,r=!1){return{back:n,current:e,forward:t,replaced:i,position:window.history.length,scroll:r?yr():null}}function j7(n){const{history:e,location:t}=window,i={value:y6(n,t)},r={value:e.state};r.value||s(i.value,{back:null,current:i.value,forward:null,position:e.length-1,replaced:!0,scroll:null},!0);function s(l,u,c){const f=n.indexOf("#"),h=f>-1?(t.host&&document.querySelector("base")?n:n.slice(f))+l:$7()+n+l;try{e[c?"replaceState":"pushState"](u,"",h),r.value=u}catch(d){console.error(d),t[c?"replace":"assign"](h)}}function o(l,u){const c=y2({},e.state,H4(r.value.back,l,r.value.forward,!0),u,{position:r.value.position});s(l,c,!0),i.value=l}function a(l,u){const c=y2({},r.value,e.state,{forward:l,scroll:yr()});s(c.current,c,!0);const f=y2({},H4(i.value,l,null),{position:c.position+1},u);s(l,f,!1),i.value=l}return{location:i,state:r,push:a,replace:o}}function Y7(n){n=k7(n);const e=j7(n),t=q7(n,e.state,e.location,e.replace);function i(s,o=!0){o||t.pauseListeners(),history.go(s)}const r=y2({location:"",base:n,go:i,createHref:z7.bind(null,n)},e,t);return Object.defineProperty(r,"location",{enumerable:!0,get:()=>e.location.value}),Object.defineProperty(r,"state",{enumerable:!0,get:()=>e.state.value}),r}function K7(n){return typeof n=="string"||n&&typeof n=="object"}function x6(n){return typeof n=="string"||typeof n=="symbol"}const M6=Symbol("");var z4;(function(n){n[n.aborted=4]="aborted",n[n.cancelled=8]="cancelled",n[n.duplicated=16]="duplicated"})(z4||(z4={}));function B0(n,e){return y2(new Error,{type:n,[M6]:!0},e)}function Me(n,e){return n instanceof Error&&M6 in n&&(e==null||!!(n.type&e))}const V4="[^/]+?",Z7={sensitive:!1,strict:!1,start:!0,end:!0},J7=/[.+*?^${}()[\]/\\]/g;function Q7(n,e){const t=y2({},Z7,e),i=[];let r=t.start?"^":"";const s=[];for(const u of n){const c=u.length?[]:[90];t.strict&&!u.length&&(r+="/");for(let f=0;f<u.length;f++){const h=u[f];let d=40+(t.sensitive?.25:0);if(h.type===0)f||(r+="/"),r+=h.value.replace(J7,"\\$&"),d+=40;else if(h.type===1){const{value:g,repeatable:y,optional:m,regexp:p}=h;s.push({name:g,repeatable:y,optional:m});const w=p||V4;if(w!==V4){d+=10;try{new RegExp(`(${w})`)}catch(_){throw new Error(`Invalid custom RegExp for param "${g}" (${w}): `+_.message)}}let M=y?`((?:${w})(?:/(?:${w}))*)`:`(${w})`;f||(M=m&&u.length<2?`(?:/${M})`:"/"+M),m&&(M+="?"),r+=M,d+=20,m&&(d+=-8),y&&(d+=-20),w===".*"&&(d+=-50)}c.push(d)}i.push(c)}if(t.strict&&t.end){const u=i.length-1;i[u][i[u].length-1]+=.7000000000000001}t.strict||(r+="/?"),t.end?r+="$":t.strict&&!r.endsWith("/")&&(r+="(?:/|$)");const o=new RegExp(r,t.sensitive?"":"i");function a(u){const c=u.match(o),f={};if(!c)return null;for(let h=1;h<c.length;h++){const d=c[h]||"",g=s[h-1];f[g.name]=d&&g.repeatable?d.split("/"):d}return f}function l(u){let c="",f=!1;for(const h of n){(!f||!c.endsWith("/"))&&(c+="/"),f=!1;for(const d of h)if(d.type===0)c+=d.value;else if(d.type===1){const{value:g,repeatable:y,optional:m}=d,p=g in u?u[g]:"";if(ne(p)&&!y)throw new Error(`Provided param "${g}" is an array but it is not repeatable (* or + modifiers)`);const w=ne(p)?p.join("/"):p;if(!w)if(m)h.length<2&&(c.endsWith("/")?c=c.slice(0,-1):f=!0);else throw new Error(`Missing required param "${g}"`);c+=w}}return c||"/"}return{re:o,score:i,keys:s,parse:a,stringify:l}}function ep(n,e){let t=0;for(;t<n.length&&t<e.length;){const i=e[t]-n[t];if(i)return i;t++}return n.length<e.length?n.length===1&&n[0]===80?-1:1:n.length>e.length?e.length===1&&e[0]===80?1:-1:0}function S6(n,e){let t=0;const i=n.score,r=e.score;for(;t<i.length&&t<r.length;){const s=ep(i[t],r[t]);if(s)return s;t++}if(Math.abs(r.length-i.length)===1){if(G4(i))return 1;if(G4(r))return-1}return r.length-i.length}function G4(n){const e=n[n.length-1];return n.length>0&&e[e.length-1]<0}const tp={type:0,value:""},np=/[a-zA-Z0-9_]/;function ip(n){if(!n)return[[]];if(n==="/")return[[tp]];if(!n.startsWith("/"))throw new Error(`Invalid path "${n}"`);function e(d){throw new Error(`ERR (${t})/"${u}": ${d}`)}let t=0,i=t;const r=[];let s;function o(){s&&r.push(s),s=[]}let a=0,l,u="",c="";function f(){u&&(t===0?s.push({type:0,value:u}):t===1||t===2||t===3?(s.length>1&&(l==="*"||l==="+")&&e(`A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`),s.push({type:1,value:u,regexp:c,repeatable:l==="*"||l==="+",optional:l==="*"||l==="?"})):e("Invalid state to consume buffer"),u="")}function h(){u+=l}for(;a<n.length;){if(l=n[a++],l==="\\"&&t!==2){i=t,t=4;continue}switch(t){case 0:l==="/"?(u&&f(),o()):l===":"?(f(),t=1):h();break;case 4:h(),t=i;break;case 1:l==="("?t=2:np.test(l)?h():(f(),t=0,l!=="*"&&l!=="?"&&l!=="+"&&a--);break;case 2:l===")"?c[c.length-1]=="\\"?c=c.slice(0,-1)+l:t=3:c+=l;break;case 3:f(),t=0,l!=="*"&&l!=="?"&&l!=="+"&&a--,c="";break;default:e("Unknown state");break}}return t===2&&e(`Unfinished custom RegExp for param "${u}"`),f(),o(),r}function rp(n,e,t){const i=Q7(ip(n.path),t),r=y2(i,{record:n,parent:e,children:[],alias:[]});return e&&!r.record.aliasOf==!e.record.aliasOf&&e.children.push(r),r}function sp(n,e){const t=[],i=new Map;e=q4({strict:!1,end:!0,sensitive:!1},e);function r(f){return i.get(f)}function s(f,h,d){const g=!d,y=X4(f);y.aliasOf=d&&d.record;const m=q4(e,f),p=[y];if("alias"in f){const _=typeof f.alias=="string"?[f.alias]:f.alias;for(const A of _)p.push(X4(y2({},y,{components:d?d.record.components:y.components,path:A,aliasOf:d?d.record:y})))}let w,M;for(const _ of p){const{path:A}=_;if(h&&A[0]!=="/"){const R=h.record.path,D=R[R.length-1]==="/"?"":"/";_.path=h.record.path+(A&&D+A)}if(w=rp(_,h,m),d?d.alias.push(w):(M=M||w,M!==w&&M.alias.push(w),g&&f.name&&!$4(w)&&o(f.name)),E6(w)&&l(w),y.children){const R=y.children;for(let D=0;D<R.length;D++)s(R[D],w,d&&d.children[D])}d=d||w}return M?()=>{o(M)}:_n}function o(f){if(x6(f)){const h=i.get(f);h&&(i.delete(f),t.splice(t.indexOf(h),1),h.children.forEach(o),h.alias.forEach(o))}else{const h=t.indexOf(f);h>-1&&(t.splice(h,1),f.record.name&&i.delete(f.record.name),f.children.forEach(o),f.alias.forEach(o))}}function a(){return t}function l(f){const h=lp(f,t);t.splice(h,0,f),f.record.name&&!$4(f)&&i.set(f.record.name,f)}function u(f,h){let d,g={},y,m;if("name"in f&&f.name){if(d=i.get(f.name),!d)throw B0(1,{location:f});m=d.record.name,g=y2(W4(h.params,d.keys.filter(M=>!M.optional).concat(d.parent?d.parent.keys.filter(M=>M.optional):[]).map(M=>M.name)),f.params&&W4(f.params,d.keys.map(M=>M.name))),y=d.stringify(g)}else if(f.path!=null)y=f.path,d=t.find(M=>M.re.test(y)),d&&(g=d.parse(y),m=d.record.name);else{if(d=h.name?i.get(h.name):t.find(M=>M.re.test(h.path)),!d)throw B0(1,{location:f,currentLocation:h});m=d.record.name,g=y2({},h.params,f.params),y=d.stringify(g)}const p=[];let w=d;for(;w;)p.unshift(w.record),w=w.parent;return{name:m,path:y,params:g,matched:p,meta:ap(p)}}n.forEach(f=>s(f));function c(){t.length=0,i.clear()}return{addRoute:s,resolve:u,removeRoute:o,clearRoutes:c,getRoutes:a,getRecordMatcher:r}}function W4(n,e){const t={};for(const i of e)i in n&&(t[i]=n[i]);return t}function X4(n){const e={path:n.path,redirect:n.redirect,name:n.name,meta:n.meta||{},aliasOf:n.aliasOf,beforeEnter:n.beforeEnter,props:op(n),children:n.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in n?n.components||null:n.component&&{default:n.component}};return Object.defineProperty(e,"mods",{value:{}}),e}function op(n){const e={},t=n.props||!1;if("component"in n)e.default=t;else for(const i in n.components)e[i]=typeof t=="object"?t[i]:t;return e}function $4(n){for(;n;){if(n.record.aliasOf)return!0;n=n.parent}return!1}function ap(n){return n.reduce((e,t)=>y2(e,t.meta),{})}function q4(n,e){const t={};for(const i in n)t[i]=i in e?e[i]:n[i];return t}function lp(n,e){let t=0,i=e.length;for(;t!==i;){const s=t+i>>1;S6(n,e[s])<0?i=s:t=s+1}const r=cp(n);return r&&(i=e.lastIndexOf(r,i-1)),i}function cp(n){let e=n;for(;e=e.parent;)if(E6(e)&&S6(n,e)===0)return e}function E6({record:n}){return!!(n.name||n.components&&Object.keys(n.components).length||n.redirect)}function up(n){const e={};if(n===""||n==="?")return e;const i=(n[0]==="?"?n.slice(1):n).split("&");for(let r=0;r<i.length;++r){const s=i[r].replace(p6," "),o=s.indexOf("="),a=bn(o<0?s:s.slice(0,o)),l=o<0?null:bn(s.slice(o+1));if(a in e){let u=e[a];ne(u)||(u=e[a]=[u]),u.push(l)}else e[a]=l}return e}function j4(n){let e="";for(let t in n){const i=n[t];if(t=P7(t),i==null){i!==void 0&&(e+=(e.length?"&":"")+t);continue}(ne(i)?i.map(s=>s&&Ys(s)):[i&&Ys(i)]).forEach(s=>{s!==void 0&&(e+=(e.length?"&":"")+t,s!=null&&(e+="="+s))})}return e}function fp(n){const e={};for(const t in n){const i=n[t];i!==void 0&&(e[t]=ne(i)?i.map(r=>r==null?null:""+r):i==null?i:""+i)}return e}const hp=Symbol(""),Y4=Symbol(""),ga=Symbol(""),va=Symbol(""),Zs=Symbol("");function en(){let n=[];function e(i){return n.push(i),()=>{const r=n.indexOf(i);r>-1&&n.splice(r,1)}}function t(){n=[]}return{add:e,list:()=>n.slice(),reset:t}}function ot(n,e,t,i,r,s=o=>o()){const o=i&&(i.enterCallbacks[r]=i.enterCallbacks[r]||[]);return()=>new Promise((a,l)=>{const u=h=>{h===!1?l(B0(4,{from:t,to:e})):h instanceof Error?l(h):K7(h)?l(B0(2,{from:e,to:h})):(o&&i.enterCallbacks[r]===o&&typeof h=="function"&&o.push(h),a())},c=s(()=>n.call(i&&i.instances[r],e,t,u));let f=Promise.resolve(c);n.length<3&&(f=f.then(u)),f.catch(h=>l(h))})}function Wr(n,e,t,i,r=s=>s()){const s=[];for(const o of n)for(const a in o.components){let l=o.components[a];if(!(e!=="beforeRouteEnter"&&!o.instances[a]))if(h6(l)){const c=(l.__vccOpts||l)[e];c&&s.push(ot(c,t,i,o,a,r))}else{let u=l();s.push(()=>u.then(c=>{if(!c)throw new Error(`Couldn't resolve component "${a}" at "${o.path}"`);const f=y7(c)?c.default:c;o.mods[a]=c,o.components[a]=f;const d=(f.__vccOpts||f)[e];return d&&ot(d,t,i,o,a,r)()}))}}return s}function K4(n){const e=o3(ga),t=o3(va),i=I3(()=>{const l=C2(n.to);return e.resolve(l)}),r=I3(()=>{const{matched:l}=i.value,{length:u}=l,c=l[u-1],f=t.matched;if(!c||!f.length)return-1;const h=f.findIndex(N0.bind(null,c));if(h>-1)return h;const d=Z4(l[u-2]);return u>1&&Z4(c)===d&&f[f.length-1].path!==d?f.findIndex(N0.bind(null,l[u-2])):h}),s=I3(()=>r.value>-1&&gp(t.params,i.value.params)),o=I3(()=>r.value>-1&&r.value===t.matched.length-1&&v6(t.params,i.value.params));function a(l={}){if(_p(l)){const u=e[C2(n.replace)?"replace":"push"](C2(n.to)).catch(_n);return n.viewTransition&&typeof document<"u"&&"startViewTransition"in document&&document.startViewTransition(()=>u),u}return Promise.resolve()}return{route:i,href:I3(()=>i.value.href),isActive:s,isExactActive:o,navigate:a}}function dp(n){return n.length===1?n[0]:n}const pp=ie({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"},viewTransition:Boolean},useLink:K4,setup(n,{slots:e}){const t=vt(K4(n)),{options:i}=o3(ga),r=I3(()=>({[J4(n.activeClass,i.linkActiveClass,"router-link-active")]:t.isActive,[J4(n.exactActiveClass,i.linkExactActiveClass,"router-link-exact-active")]:t.isExactActive}));return()=>{const s=e.default&&dp(e.default(t));return n.custom?s:Z2("a",{"aria-current":t.isExactActive?n.ariaCurrentValue:null,href:t.href,onClick:t.navigate,class:r.value},s)}}}),mp=pp;function _p(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey)&&!n.defaultPrevented&&!(n.button!==void 0&&n.button!==0)){if(n.currentTarget&&n.currentTarget.getAttribute){const e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}function gp(n,e){for(const t in e){const i=e[t],r=n[t];if(typeof i=="string"){if(i!==r)return!1}else if(!ne(r)||r.length!==i.length||i.some((s,o)=>s!==r[o]))return!1}return!0}function Z4(n){return n?n.aliasOf?n.aliasOf.path:n.path:""}const J4=(n,e,t)=>n??e??t,vp=ie({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(n,{attrs:e,slots:t}){const i=o3(Zs),r=I3(()=>n.route||i.value),s=o3(Y4,0),o=I3(()=>{let u=C2(s);const{matched:c}=r.value;let f;for(;(f=c[u])&&!f.components;)u++;return u}),a=I3(()=>r.value.matched[o.value]);ft(Y4,I3(()=>o.value+1)),ft(hp,a),ft(Zs,r);const l=ve();return U2(()=>[l.value,a.value,n.name],([u,c,f],[h,d,g])=>{c&&(c.instances[f]=u,d&&d!==c&&u&&u===h&&(c.leaveGuards.size||(c.leaveGuards=d.leaveGuards),c.updateGuards.size||(c.updateGuards=d.updateGuards))),u&&c&&(!d||!N0(c,d)||!h)&&(c.enterCallbacks[f]||[]).forEach(y=>y(u))},{flush:"post"}),()=>{const u=r.value,c=n.name,f=a.value,h=f&&f.components[c];if(!h)return Q4(t.default,{Component:h,route:u});const d=f.props[c],g=d?d===!0?u.params:typeof d=="function"?d(u):d:null,m=Z2(h,y2({},g,e,{onVnodeUnmounted:p=>{p.component.isUnmounted&&(f.instances[c]=null)},ref:l}));return Q4(t.default,{Component:m,route:u})||m}}});function Q4(n,e){if(!n)return null;const t=n(e);return t.length===1?t[0]:t}const b6=vp;function yp(n){const e=sp(n.routes,n),t=n.parseQuery||up,i=n.stringifyQuery||j4,r=n.history,s=en(),o=en(),a=en(),l=Xt(H3);let u=H3;y0&&n.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const c=Vr.bind(null,V=>""+V),f=Vr.bind(null,I7),h=Vr.bind(null,bn);function d(V,f1){let u1,g1;return x6(V)?(u1=e.getRecordMatcher(V),g1=f1):g1=V,e.addRoute(g1,u1)}function g(V){const f1=e.getRecordMatcher(V);f1&&e.removeRoute(f1)}function y(){return e.getRoutes().map(V=>V.record)}function m(V){return!!e.getRecordMatcher(V)}function p(V,f1){if(f1=y2({},f1||l.value),typeof V=="string"){const F=Gr(t,V,f1.path),k=e.resolve({path:F.path},f1),s1=r.createHref(F.fullPath);return y2(F,k,{params:h(k.params),hash:bn(F.hash),redirectedFrom:void 0,href:s1})}let u1;if(V.path!=null)u1=y2({},V,{path:Gr(t,V.path,f1.path).path});else{const F=y2({},V.params);for(const k in F)F[k]==null&&delete F[k];u1=y2({},V,{params:f(F)}),f1.params=f(f1.params)}const g1=e.resolve(u1,f1),z1=V.hash||"";g1.params=c(h(g1.params));const B1=O7(i,y2({},V,{hash:R7(z1),path:g1.path})),S=r.createHref(B1);return y2({fullPath:B1,hash:z1,query:i===j4?fp(V.query):V.query||{}},g1,{redirectedFrom:void 0,href:S})}function w(V){return typeof V=="string"?Gr(t,V,l.value.path):y2({},V)}function M(V,f1){if(u!==V)return B0(8,{from:f1,to:V})}function _(V){return D(V)}function A(V){return _(y2(w(V),{replace:!0}))}function R(V){const f1=V.matched[V.matched.length-1];if(f1&&f1.redirect){const{redirect:u1}=f1;let g1=typeof u1=="function"?u1(V):u1;return typeof g1=="string"&&(g1=g1.includes("?")||g1.includes("#")?g1=w(g1):{path:g1},g1.params={}),y2({query:V.query,hash:V.hash,params:g1.path!=null?{}:V.params},g1)}}function D(V,f1){const u1=u=p(V),g1=l.value,z1=V.state,B1=V.force,S=V.replace===!0,F=R(u1);if(F)return D(y2(w(F),{state:typeof F=="object"?y2({},z1,F.state):z1,force:B1,replace:S}),f1||u1);const k=u1;k.redirectedFrom=f1;let s1;return!B1&&F7(i,g1,u1)&&(s1=B0(16,{to:k,from:g1}),F1(g1,g1,!0,!1)),(s1?Promise.resolve(s1):b(k,g1)).catch(q=>Me(q)?Me(q,2)?q:C1(q):H(q,k,g1)).then(q=>{if(q){if(Me(q,2))return D(y2({replace:S},w(q.to),{state:typeof q.to=="object"?y2({},z1,q.to.state):z1,force:B1}),f1||k)}else q=B(k,g1,!0,S,z1);return U(k,g1,q),q})}function L(V,f1){const u1=M(V,f1);return u1?Promise.reject(u1):Promise.resolve()}function T(V){const f1=o2.values().next().value;return f1&&typeof f1.runWithContext=="function"?f1.runWithContext(V):V()}function b(V,f1){let u1;const[g1,z1,B1]=xp(V,f1);u1=Wr(g1.reverse(),"beforeRouteLeave",V,f1);for(const F of g1)F.leaveGuards.forEach(k=>{u1.push(ot(k,V,f1))});const S=L.bind(null,V,f1);return u1.push(S),b1(u1).then(()=>{u1=[];for(const F of s.list())u1.push(ot(F,V,f1));return u1.push(S),b1(u1)}).then(()=>{u1=Wr(z1,"beforeRouteUpdate",V,f1);for(const F of z1)F.updateGuards.forEach(k=>{u1.push(ot(k,V,f1))});return u1.push(S),b1(u1)}).then(()=>{u1=[];for(const F of B1)if(F.beforeEnter)if(ne(F.beforeEnter))for(const k of F.beforeEnter)u1.push(ot(k,V,f1));else u1.push(ot(F.beforeEnter,V,f1));return u1.push(S),b1(u1)}).then(()=>(V.matched.forEach(F=>F.enterCallbacks={}),u1=Wr(B1,"beforeRouteEnter",V,f1,T),u1.push(S),b1(u1))).then(()=>{u1=[];for(const F of o.list())u1.push(ot(F,V,f1));return u1.push(S),b1(u1)}).catch(F=>Me(F,8)?F:Promise.reject(F))}function U(V,f1,u1){a.list().forEach(g1=>T(()=>g1(V,f1,u1)))}function B(V,f1,u1,g1,z1){const B1=M(V,f1);if(B1)return B1;const S=f1===H3,F=y0?history.state:{};u1&&(g1||S?r.replace(V.fullPath,y2({scroll:S&&F&&F.scroll},z1)):r.push(V.fullPath,z1)),l.value=V,F1(V,f1,u1,S),C1()}let X;function K(){X||(X=r.listen((V,f1,u1)=>{if(!c1.listening)return;const g1=p(V),z1=R(g1);if(z1){D(y2(z1,{replace:!0,force:!0}),g1).catch(_n);return}u=g1;const B1=l.value;y0&&W7(k4(B1.fullPath,u1.delta),yr()),b(g1,B1).catch(S=>Me(S,12)?S:Me(S,2)?(D(y2(w(S.to),{force:!0}),g1).then(F=>{Me(F,20)&&!u1.delta&&u1.type===Tn.pop&&r.go(-1,!1)}).catch(_n),Promise.reject()):(u1.delta&&r.go(-u1.delta,!1),H(S,g1,B1))).then(S=>{S=S||B(g1,B1,!1),S&&(u1.delta&&!Me(S,8)?r.go(-u1.delta,!1):u1.type===Tn.pop&&Me(S,20)&&r.go(-1,!1)),U(g1,B1,S)}).catch(_n)}))}let a1=en(),z=en(),r1;function H(V,f1,u1){C1(V);const g1=z.list();return g1.length?g1.forEach(z1=>z1(V,f1,u1)):console.error(V),Promise.reject(V)}function y1(){return r1&&l.value!==H3?Promise.resolve():new Promise((V,f1)=>{a1.add([V,f1])})}function C1(V){return r1||(r1=!V,K(),a1.list().forEach(([f1,u1])=>V?u1(V):f1()),a1.reset()),V}function F1(V,f1,u1,g1){const{scrollBehavior:z1}=n;if(!y0||!z1)return Promise.resolve();const B1=!u1&&X7(k4(V.fullPath,0))||(g1||!u1)&&history.state&&history.state.scroll||null;return D0().then(()=>z1(V,f1,B1)).then(S=>S&&G7(S)).catch(S=>H(S,V,f1))}const X1=V=>r.go(V);let u2;const o2=new Set,c1={currentRoute:l,listening:!0,addRoute:d,removeRoute:g,clearRoutes:e.clearRoutes,hasRoute:m,getRoutes:y,resolve:p,options:n,push:_,replace:A,go:X1,back:()=>X1(-1),forward:()=>X1(1),beforeEach:s.add,beforeResolve:o.add,afterEach:a.add,onError:z.add,isReady:y1,install(V){const f1=this;V.component("RouterLink",mp),V.component("RouterView",b6),V.config.globalProperties.$router=f1,Object.defineProperty(V.config.globalProperties,"$route",{enumerable:!0,get:()=>C2(l)}),y0&&!u2&&l.value===H3&&(u2=!0,_(r.location).catch(z1=>{}));const u1={};for(const z1 in H3)Object.defineProperty(u1,z1,{get:()=>l.value[z1],enumerable:!0});V.provide(ga,f1),V.provide(va,de(u1)),V.provide(Zs,l);const g1=V.unmount;o2.add(V),V.unmount=function(){o2.delete(V),o2.size<1&&(u=H3,X&&X(),X=null,l.value=H3,u2=!1,r1=!1),g1()}}};function b1(V){return V.reduce((f1,u1)=>f1.then(()=>T(u1)),Promise.resolve())}return c1}function xp(n,e){const t=[],i=[],r=[],s=Math.max(e.matched.length,n.matched.length);for(let o=0;o<s;o++){const a=e.matched[o];a&&(n.matched.find(u=>N0(u,a))?i.push(a):t.push(a));const l=n.matched[o];l&&(e.matched.find(u=>N0(u,l))||r.push(l))}return[t,i,r]}function T6(n){return o3(va)}const Mp=/(:\w+)\([^)]+\)/g,Sp=/(:\w+)[?+*]/g,Ep=/:\w+/g,bp=(n,e)=>e.path.replace(Mp,"$1").replace(Sp,"$1").replace(Ep,t=>n.params[t.slice(1)]?.toString()||""),Js=(n,e)=>{const t=n.route.matched.find(r=>r.components?.default===n.Component.type),i=e??t?.meta.key??(t&&bp(n.route,t));return typeof i=="function"?i(n.route):i},Tp=(n,e)=>({default:()=>n?Z2(wu,n===!0?{}:n,e):e});function ya(n){return Array.isArray(n)?n:[n]}const Xr=[{name:"3",path:"/3",component:()=>C3(()=>import("./D-h8PhuD.js"),[],import.meta.url)},{name:"404",path:"/404",component:()=>C3(()=>import("./wtksYsYs.js"),__vite__mapDeps([0,1,2]),import.meta.url)},{name:"about",path:"/about",component:()=>C3(()=>import("./52Xs3SHz.js"),__vite__mapDeps([3,4,1,5]),import.meta.url)},{name:"index",path:"/",component:()=>C3(()=>import("./BkDon2iG.js"),__vite__mapDeps([6,7]),import.meta.url)},{name:"loading",path:"/loading",component:()=>C3(()=>import("./BKihVEx9.js"),__vite__mapDeps([8,9]),import.meta.url)},{name:"projects",path:"/projects",component:()=>C3(()=>import("./C0QXg0bY.js"),__vite__mapDeps([10,1,11,12,13,14]),import.meta.url)},{name:"projects-ProjectCard",path:"/projects/ProjectCard",component:()=>C3(()=>import("./Dzd8mdxt.js"),__vite__mapDeps([12,13]),import.meta.url)},{name:"projects-WorkProjects",path:"/projects/WorkProjects",component:()=>C3(()=>import("./B3YltPFo.js"),[],import.meta.url)},{name:"projects-ProjectDetail",path:"/projects/ProjectDetail",component:()=>C3(()=>import("./DB1ks7Xh.js"),__vite__mapDeps([15,16]),import.meta.url)},{name:"projects-PersonalProjects",path:"/projects/PersonalProjects",component:()=>C3(()=>import("./DRo2fHHm.js"),[],import.meta.url)}],w6=(n,e)=>({default:()=>n?Z2(Rf,n===!0?{}:n,e):e.default?.()}),wp=/(:\w+)\([^)]+\)/g,Ap=/(:\w+)[?+*]/g,Cp=/:\w+/g;function e9(n){const e=n?.meta.key??n.path.replace(wp,"$1").replace(Ap,"$1").replace(Cp,t=>n.params[t.slice(1)]?.toString()||"");return typeof e=="function"?e(n):e}function Rp(n,e){return n===e||e===H3?!1:e9(n)!==e9(e)?!0:!n.matched.every((i,r)=>i.components&&i.components.default===e.matched[r]?.components?.default)}const Pp={scrollBehavior(n,e,t){const i=W2(),r=O3().options?.scrollBehaviorType??"auto";if(n.path===e.path)return e.hash&&!n.hash?{left:0,top:0}:n.hash?{el:n.hash,top:A6(n.hash),behavior:r}:!1;if((typeof n.meta.scrollToTop=="function"?n.meta.scrollToTop(n,e):n.meta.scrollToTop)===!1)return!1;const o=i._runningTransition?"page:transition:finish":"page:loading:end";return new Promise(a=>{if(e===H3){a(t9(n,e,t,r));return}i.hooks.hookOnce(o,()=>{requestAnimationFrame(()=>a(t9(n,e,t,r)))})})}};function A6(n){try{const e=document.querySelector(n);if(e)return(Number.parseFloat(getComputedStyle(e).scrollMarginTop)||0)+(Number.parseFloat(getComputedStyle(document.documentElement).scrollPaddingTop)||0)}catch{}return 0}function t9(n,e,t,i){if(t)return t;const r=Rp(n,e);return n.hash?{el:n.hash,top:A6(n.hash),behavior:r?i:"instant"}:{left:0,top:0}}const Lp={hashMode:!1,scrollBehaviorType:"auto"},Ke={...Lp,...Pp},Ip=async(n,e)=>{let t,i;if(!n.meta?.validate)return;const r=([t,i]=C0(()=>Promise.resolve(n.meta.validate(n))),t=await t,i(),t);if(r===!0)return;const s=Wt({fatal:!0,statusCode:r&&r.statusCode||404,statusMessage:r&&r.statusMessage||`Page Not Found: ${n.fullPath}`,data:{path:n.fullPath}});return typeof window<"u"&&window.history.pushState({},"",e.fullPath),s},Dp=async n=>{let e,t;const i=([e,t]=C0(()=>pa({path:n.path})),e=await e,t(),e);if(i.redirect)return Kt(i.redirect,{acceptRelative:!0})?(window.location.href=i.redirect,!1):i.redirect},Up=[Ip,Dp],Qs={};function Op(n,e,t){const{pathname:i,search:r,hash:s}=e,o=n.indexOf("#");if(o>-1){const u=s.includes(n.slice(o))?n.slice(o).length:1;let c=s.slice(u);return c[0]!=="/"&&(c="/"+c),v4(c,"")}const a=v4(i,n),l=!t||Ih(a,t)?a:t;return l+(l.includes("?")?"":r)+s}const Fp=qe({name:"nuxt:router",enforce:"pre",async setup(n){let e,t,i=mr().app.baseURL;const r=Ke.history?.(i)??Y7(i),s=Ke.routes?([e,t]=C0(()=>Ke.routes(Xr)),e=await e,t(),e??Xr):Xr;let o;const a=yp({...Ke,scrollBehavior:(m,p,w)=>{if(p===H3){o=w;return}if(Ke.scrollBehavior){if(a.options.scrollBehavior=Ke.scrollBehavior,"scrollRestoration"in window.history){const M=a.beforeEach(()=>{M(),window.history.scrollRestoration="manual"})}return Ke.scrollBehavior(m,H3,o||w)}},history:r,routes:s});"scrollRestoration"in window.history&&(window.history.scrollRestoration="auto"),n.vueApp.use(a);const l=Xt(a.currentRoute.value);a.afterEach((m,p)=>{l.value=p}),Object.defineProperty(n.vueApp.config.globalProperties,"previousRoute",{get:()=>l.value});const u=Op(i,window.location,n.payload.path),c=Xt(a.currentRoute.value),f=()=>{c.value=a.currentRoute.value};n.hook("page:finish",f),a.afterEach((m,p)=>{m.matched[m.matched.length-1]?.components?.default===p.matched[p.matched.length-1]?.components?.default&&f()});const h={};for(const m in c.value)Object.defineProperty(h,m,{get:()=>c.value[m],enumerable:!0});n._route=de(h),n._middleware||={global:[],named:{}};const d=gr();a.afterEach(async(m,p,w)=>{delete n._processingMiddleware,!n.isHydrating&&d.value&&await n.runWithContext(Ad),w&&await n.callHook("page:loading:end")});try{[e,t]=C0(()=>a.isReady()),await e,t()}catch(m){[e,t]=C0(()=>n.runWithContext(()=>Lt(m))),await e,t()}const g=u!==a.currentRoute.value.fullPath?a.resolve(u):a.currentRoute.value;f();const y=n.payload.state._layout;return a.beforeEach(async(m,p)=>{await n.callHook("page:loading:start"),m.meta=vt(m.meta),n.isHydrating&&y&&!ke(m.meta.layout)&&(m.meta.layout=y),n._processingMiddleware=!0;{const w=new Set([...Up,...n._middleware.global]);for(const M of m.matched){const _=M.meta.middleware;if(_)for(const A of ya(_))w.add(A)}{const M=await n.runWithContext(()=>pa({path:m.path}));if(M.appMiddleware)for(const _ in M.appMiddleware)M.appMiddleware[_]?w.add(_):w.delete(_)}for(const M of w){const _=typeof M=="string"?n._middleware.named[M]||await Qs[M]?.().then(A=>A.default||A):M;if(!_)throw new Error(`Unknown route middleware: '${M}'.`);try{const A=await n.runWithContext(()=>_(m,p));if(!n.payload.serverRendered&&n.isHydrating&&(A===!1||A instanceof Error)){const R=A||Wt({statusCode:404,statusMessage:`Page Not Found: ${u}`});return await n.runWithContext(()=>Lt(R)),!1}if(A===!0)continue;if(A===!1)return A;if(A)return s6(A)&&A.fatal&&await n.runWithContext(()=>Lt(A)),A}catch(A){const R=Wt(A);return R.fatal&&await n.runWithContext(()=>Lt(R)),R}}}}),a.onError(async()=>{delete n._processingMiddleware,await n.callHook("page:loading:end")}),a.afterEach(m=>{if(m.matched.length===0)return n.runWithContext(()=>Lt(Wt({statusCode:404,fatal:!1,statusMessage:`Page not found: ${m.fullPath}`,data:{path:m.fullPath}})))}),n.hooks.hookOnce("app:created",async()=>{try{"name"in g&&(g.name=void 0),await a.replace({...g,force:!0}),a.options.scrollBehavior=Ke.scrollBehavior}catch(m){await n.runWithContext(()=>Lt(m))}}),{provide:{router:a}}}}),n9=globalThis.requestIdleCallback||(n=>{const e=Date.now(),t={didTimeout:!1,timeRemaining:()=>Math.max(0,50-(Date.now()-e))};return setTimeout(()=>{n(t)},1)}),rM=globalThis.cancelIdleCallback||(n=>{clearTimeout(n)}),xa=n=>{const e=W2();e.isHydrating?e.hooks.hookOnce("app:suspense:resolve",()=>{n9(()=>n())}):n9(()=>n())},Np=qe({name:"nuxt:payload",setup(n){const e=new Set;O3().beforeResolve(async(t,i)=>{if(t.path===i.path)return;const r=await F4(t.path);if(r){for(const s of e)delete n.static.data[s];for(const s in r.data)s in n.static.data||e.add(s),n.static.data[s]=r.data[s]}}),xa(()=>{n.hooks.hook("link:prefetch",async t=>{const{hostname:i}=new URL(t,window.location.href);i===window.location.hostname&&await F4(t).catch(()=>{console.warn("[nuxt] Error preloading payload for",t)})}),navigator.connection?.effectiveType!=="slow-2g"&&setTimeout(vr,1e3)})}}),Bp=qe(()=>{const n=O3();xa(()=>{n.beforeResolve(async()=>{await new Promise(e=>{setTimeout(e,100),requestAnimationFrame(()=>{setTimeout(e,0)})})})})}),kp=qe(n=>{let e;async function t(){let i;try{i=await vr()}catch(r){const s=r;if(!("status"in s&&(s.status===404||s.status===403)))throw s}e&&clearTimeout(e),e=setTimeout(t,T4);try{const r=await $fetch(da("builds/latest.json")+`?${Date.now()}`);r.id!==i?.id&&(n.hooks.callHook("app:manifest:update",r),e&&clearTimeout(e))}catch{}}xa(()=>{e=setTimeout(t,T4)})});function Hp(n={}){const e=n.path||window.location.pathname;let t={};try{t=Yi(sessionStorage.getItem("nuxt:reload")||"{}")}catch{}if(n.force||t?.path!==e||t?.expires<Date.now()){try{sessionStorage.setItem("nuxt:reload",JSON.stringify({path:e,expires:Date.now()+(n.ttl??1e4)}))}catch{}if(n.persistState)try{sessionStorage.setItem("nuxt:reload:state",JSON.stringify({state:W2().payload.state}))}catch{}window.location.pathname!==e?window.location.href=e:window.location.reload()}}const zp=qe({name:"nuxt:chunk-reload",setup(n){const e=O3(),t=mr(),i=new Set;e.beforeEach(()=>{i.clear()}),n.hook("app:chunkError",({error:s})=>{i.add(s)});function r(s){const o=fa(t.app.baseURL,s.fullPath);Hp({path:o,persistState:!0})}n.hook("app:manifest:update",()=>{e.beforeResolve(r)}),e.onError((s,o)=>{i.has(s)&&r(o)})}}),Vp=qe({name:"nuxt:global-components"}),ct={default:Ls(()=>C3(()=>import("./DduxfLQ8.js"),__vite__mapDeps([17,4,18]),import.meta.url).then(n=>n.default||n))};function Gp(n){if(n?.__asyncLoader&&!n.__asyncResolved)return n.__asyncLoader()}async function Wp(n,e=O3()){const{path:t,matched:i}=e.resolve(n);if(!i.length||(e._routePreloaded||=new Set,e._routePreloaded.has(t)))return;const r=e._preloadPromises||=[];if(r.length>4)return Promise.all(r).then(()=>Wp(n,e));e._routePreloaded.add(t);const s=i.map(o=>o.components?.default).filter(o=>typeof o=="function");for(const o of s){const a=Promise.resolve(o()).catch(()=>{}).finally(()=>r.splice(r.indexOf(a)));r.push(a)}await Promise.all(r)}const Xp=qe({name:"nuxt:prefetch",setup(n){const e=O3();n.hooks.hook("app:mounted",()=>{e.beforeEach(async t=>{const i=t?.meta?.layout;i&&typeof ct[i]=="function"&&await ct[i]()})}),n.hooks.hook("link:prefetch",t=>{if(Kt(t))return;const i=e.resolve(t);if(!i)return;const r=i.meta.layout;let s=ya(i.meta.middleware);s=s.filter(o=>typeof o=="string");for(const o of s)typeof Qs[o]=="function"&&Qs[o]();typeof r=="string"&&r in ct&&Gp(ct[r])})}}),$p=()=>{},qp={Hex:["1","2","3","4","5","6","7","8","9","0","A","B","C","D","E","F"],Symbols:["!","@","#","$","%","^","&","*"],FullWidthHex:["１","２","３","４","５","６","７","８","９","０","Ａ","Ｂ","Ｃ","Ｄ","Ｅ","Ｆ","Ｘ"],FullWidthSymbols:["！","＠","＃","＄","％","＾","＆","＊"]},C6={HalfWidth:"&ensp;",FullWidth:"&emsp;"};function jp(n){const e=Math.floor(Math.random()*n.length);return{index:e,element:n[e]}}function Yp(n,e){const t=n.innerHTML.split(""),i=t.length;let r=0,s="",o=0;t.forEach(l=>{s+=C6.HalfWidth}),n.innerHTML=s,console.log(n.innerHTML);function a(l){if(r<i){if(Math.abs(l-o)>(e?.interval??100)){const u=n.innerHTML.split("");u[r]=t[r],s=u.join(""),r+=1,n.innerHTML=s,o=l}requestAnimationFrame(a)}}o=new Date().valueOf(),requestAnimationFrame(a)}const Kp={DefaultBaseChars:qp,DefaultSpaces:C6,shuffleFrom:jp,fooAnimateTitle:Yp},Zp=[d7,v7,Fp,Np,Bp,kp,zp,Vp,Xp,$p,Kp],R6=(n="RouteProvider")=>ie({name:n,props:{route:{type:Object,required:!0},vnode:Object,vnodeRef:Object,renderKey:String,trackRootNodes:Boolean},setup(e){const t=e.renderKey,i=e.route,r={};for(const s in e.route)Object.defineProperty(r,s,{get:()=>t===e.renderKey?e.route[s]:i[s],enumerable:!0});return ft(qt,de(r)),()=>e.vnode?Z2(e.vnode,{ref:e.vnodeRef}):e.vnode}}),Jp=R6(),i9=new WeakMap,Qp=ie({name:"NuxtPage",inheritAttrs:!1,props:{name:{type:String},transition:{type:[Boolean,Object],default:void 0},keepalive:{type:[Boolean,Object],default:void 0},route:{type:Object},pageKey:{type:[Function,String],default:null}},setup(n,{attrs:e,slots:t,expose:i}){const r=W2(),s=ve(),o=o3(qt,null);let a;i({pageRef:s});const l=o3(i6,null);let u;const c=r.deferHydration();if(r.isHydrating){const h=r.hooks.hookOnce("app:error",c);O3().beforeEach(h)}n.pageKey&&U2(()=>n.pageKey,(h,d)=>{h!==d&&r.callHook("page:loading:start")});let f=!1;{const h=O3().beforeResolve(()=>{f=!1});X0(()=>{h()})}return()=>Z2(b6,{name:n.name,route:n.route,...e},{default:h=>{const d=tm(o,h.route,h.Component),g=o&&o.matched.length===h.route.matched.length;if(!h.Component){if(u&&!g)return u;c();return}if(u&&l&&!l.isCurrent(h.route))return u;if(d&&o&&(!l||l?.isCurrent(o)))return g?u:null;const y=Js(h,n.pageKey),m=nm(o,h.route,h.Component);!r.isHydrating&&a===y&&!m&&D0(()=>{f=!0,r.callHook("page:loading:end")}),a=y;const p=!!(n.transition??h.route.meta.pageTransition??E4),w=p&&em([n.transition,h.route.meta.pageTransition,E4,{onAfterLeave(){delete r._runningTransition,r.callHook("page:transition:finish",h.Component)}}]),M=n.keepalive??h.route.meta.keepalive??cd;return u=w6(p&&w,Tp(M,Z2(oa,{suspensible:!0,onPending:()=>{p&&(r._runningTransition=!0),r.callHook("page:start",h.Component)},onResolve:()=>{D0(()=>r.callHook("page:finish",h.Component).then(()=>{if(delete r._runningTransition,!f&&!m)return f=!0,r.callHook("page:loading:end")}).finally(c))}},{default:()=>{const _={key:y||void 0,vnode:t.default?im(t.default,h):h.Component,route:h.route,renderKey:y||void 0,trackRootNodes:p,vnodeRef:s};if(!M)return Z2(Jp,_);const A=h.Component.type,R=A;let D=i9.get(R);return D||(D=R6(A.name||A.__name),i9.set(R,D)),Z2(D,_)}}))).default(),u}})}});function em(n){const e=n.filter(Boolean).map(t=>({...t,onAfterLeave:t.onAfterLeave?ya(t.onAfterLeave):void 0}));return t6(...e)}function tm(n,e,t){if(!n)return!1;const i=e.matched.findIndex(r=>r.components?.default===t?.type);return!i||i===-1?!1:e.matched.slice(0,i).some((r,s)=>r.components?.default!==n.matched[s]?.components?.default)||t&&Js({route:e,Component:t})!==Js({route:n,Component:t})}function nm(n,e,t){return n?e.matched.findIndex(r=>r.components?.default===t?.type)<e.matched.length-1:!1}function im(n,e){const t=n(e);return t.length===1?Z2(t[0]):Z2(K2,void 0,t)}const rm=ie({name:"LayoutLoader",inheritAttrs:!1,props:{name:String,layoutProps:Object},setup(n,e){return()=>Z2(ct[n.name],n.layoutProps,e.slots)}}),sm={name:{type:[String,Boolean,Object],default:null},fallback:{type:[String,Object],default:null}},om=ie({name:"NuxtLayout",inheritAttrs:!1,props:sm,setup(n,e){const t=W2(),i=o3(qt),s=!i||i===_r()?T6():i,o=I3(()=>{let c=C2(n.name)??s?.meta.layout??"default";return c&&!(c in ct)&&n.fallback&&(c=C2(n.fallback)),c}),a=Xt();e.expose({layoutRef:a});const l=t.deferHydration();if(t.isHydrating){const c=t.hooks.hookOnce("app:error",l);O3().beforeEach(c)}let u;return()=>{const c=o.value&&o.value in ct,f=s?.meta.layoutTransition??ld,h=u;return u=o.value,w6(c&&f,{default:()=>Z2(oa,{suspensible:!0,onResolve:()=>{D0(l)}},{default:()=>Z2(am,{layoutProps:Cc(e.attrs,{ref:a}),key:o.value||void 0,name:o.value,shouldProvide:!n.name,isRenderingNewLayout:d=>d!==h&&d===o.value,hasTransition:!!f},e.slots)})}).default()}}}),am=ie({name:"NuxtLayoutProvider",inheritAttrs:!1,props:{name:{type:[String,Boolean]},layoutProps:{type:Object},hasTransition:{type:Boolean},shouldProvide:{type:Boolean},isRenderingNewLayout:{type:Function,required:!0}},setup(n,e){const t=n.name;n.shouldProvide&&ft(i6,{isCurrent:s=>t===(s.meta.layout??"default")});const i=o3(qt);if(i&&i===_r()){const s=T6(),o={};for(const a in s){const l=a;Object.defineProperty(o,l,{enumerable:!0,get:()=>n.isRenderingNewLayout(n.name)?s[l]:i[l]})}ft(qt,de(o))}return()=>!t||typeof t=="string"&&!(t in ct)?e.slots.default?.():Z2(rm,{key:t,layoutProps:n.layoutProps,name:t},e.slots)}});/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ma="179",lm=0,r9=1,cm=2,P6=1,um=2,Ce=3,mt=0,M3=1,De=2,ht=0,R0=1,s9=2,o9=3,a9=4,fm=5,Ot=100,hm=101,dm=102,pm=103,mm=104,_m=200,gm=201,vm=202,ym=203,eo=204,to=205,xm=206,Mm=207,Sm=208,Em=209,bm=210,Tm=211,wm=212,Am=213,Cm=214,no=0,io=1,ro=2,k0=3,so=4,oo=5,ao=6,lo=7,L6=0,Rm=1,Pm=2,dt=0,Lm=1,Im=2,Dm=3,Um=4,Om=5,Fm=6,Nm=7,I6=300,H0=301,z0=302,co=303,uo=304,xr=306,fo=1e3,Bt=1001,ho=1002,ee=1003,Bm=1004,ni=1005,pe=1006,$r=1007,kt=1008,ze=1009,D6=1010,U6=1011,wn=1012,Sa=1013,jt=1014,Ue=1015,Fn=1016,Ea=1017,ba=1018,An=1020,O6=35902,F6=1021,N6=1022,J3=1023,Cn=1026,Rn=1027,B6=1028,Ta=1029,k6=1030,wa=1031,Aa=1033,Ri=33776,Pi=33777,Li=33778,Ii=33779,po=35840,mo=35841,_o=35842,go=35843,vo=36196,yo=37492,xo=37496,Mo=37808,So=37809,Eo=37810,bo=37811,To=37812,wo=37813,Ao=37814,Co=37815,Ro=37816,Po=37817,Lo=37818,Io=37819,Do=37820,Uo=37821,Di=36492,Oo=36494,Fo=36495,H6=36283,No=36284,Bo=36285,ko=36286,km=3200,Hm=3201,z6=0,zm=1,lt="",R3="srgb",V0="srgb-linear",er="linear",b2="srgb",r0=7680,l9=519,Vm=512,Gm=513,Wm=514,V6=515,Xm=516,$m=517,qm=518,jm=519,c9=35044,u9="300 es",me=2e3,tr=2001;class $0{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners;if(i===void 0)return;const r=i[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const i=t[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const i3=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],qr=Math.PI/180,Ho=180/Math.PI;function Nn(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(i3[n&255]+i3[n>>8&255]+i3[n>>16&255]+i3[n>>24&255]+"-"+i3[e&255]+i3[e>>8&255]+"-"+i3[e>>16&15|64]+i3[e>>24&255]+"-"+i3[t&63|128]+i3[t>>8&255]+"-"+i3[t>>16&255]+i3[t>>24&255]+i3[i&255]+i3[i>>8&255]+i3[i>>16&255]+i3[i>>24&255]).toLowerCase()}function c2(n,e,t){return Math.max(e,Math.min(t,n))}function Ym(n,e){return(n%e+e)%e}function jr(n,e,t){return(1-t)*n+t*e}function tn(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function _3(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}class S2{constructor(e=0,t=0){S2.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=c2(this.x,e.x,t.x),this.y=c2(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=c2(this.x,e,t),this.y=c2(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(c2(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(c2(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*r+e.x,this.y=s*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Bn{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,s,o,a){let l=i[r+0],u=i[r+1],c=i[r+2],f=i[r+3];const h=s[o+0],d=s[o+1],g=s[o+2],y=s[o+3];if(a===0){e[t+0]=l,e[t+1]=u,e[t+2]=c,e[t+3]=f;return}if(a===1){e[t+0]=h,e[t+1]=d,e[t+2]=g,e[t+3]=y;return}if(f!==y||l!==h||u!==d||c!==g){let m=1-a;const p=l*h+u*d+c*g+f*y,w=p>=0?1:-1,M=1-p*p;if(M>Number.EPSILON){const A=Math.sqrt(M),R=Math.atan2(A,p*w);m=Math.sin(m*R)/A,a=Math.sin(a*R)/A}const _=a*w;if(l=l*m+h*_,u=u*m+d*_,c=c*m+g*_,f=f*m+y*_,m===1-a){const A=1/Math.sqrt(l*l+u*u+c*c+f*f);l*=A,u*=A,c*=A,f*=A}}e[t]=l,e[t+1]=u,e[t+2]=c,e[t+3]=f}static multiplyQuaternionsFlat(e,t,i,r,s,o){const a=i[r],l=i[r+1],u=i[r+2],c=i[r+3],f=s[o],h=s[o+1],d=s[o+2],g=s[o+3];return e[t]=a*g+c*f+l*d-u*h,e[t+1]=l*g+c*h+u*f-a*d,e[t+2]=u*g+c*d+a*h-l*f,e[t+3]=c*g-a*f-l*h-u*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,u=a(i/2),c=a(r/2),f=a(s/2),h=l(i/2),d=l(r/2),g=l(s/2);switch(o){case"XYZ":this._x=h*c*f+u*d*g,this._y=u*d*f-h*c*g,this._z=u*c*g+h*d*f,this._w=u*c*f-h*d*g;break;case"YXZ":this._x=h*c*f+u*d*g,this._y=u*d*f-h*c*g,this._z=u*c*g-h*d*f,this._w=u*c*f+h*d*g;break;case"ZXY":this._x=h*c*f-u*d*g,this._y=u*d*f+h*c*g,this._z=u*c*g+h*d*f,this._w=u*c*f-h*d*g;break;case"ZYX":this._x=h*c*f-u*d*g,this._y=u*d*f+h*c*g,this._z=u*c*g-h*d*f,this._w=u*c*f+h*d*g;break;case"YZX":this._x=h*c*f+u*d*g,this._y=u*d*f+h*c*g,this._z=u*c*g-h*d*f,this._w=u*c*f-h*d*g;break;case"XZY":this._x=h*c*f-u*d*g,this._y=u*d*f-h*c*g,this._z=u*c*g+h*d*f,this._w=u*c*f+h*d*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],u=t[2],c=t[6],f=t[10],h=i+a+f;if(h>0){const d=.5/Math.sqrt(h+1);this._w=.25/d,this._x=(c-l)*d,this._y=(s-u)*d,this._z=(o-r)*d}else if(i>a&&i>f){const d=2*Math.sqrt(1+i-a-f);this._w=(c-l)/d,this._x=.25*d,this._y=(r+o)/d,this._z=(s+u)/d}else if(a>f){const d=2*Math.sqrt(1+a-i-f);this._w=(s-u)/d,this._x=(r+o)/d,this._y=.25*d,this._z=(l+c)/d}else{const d=2*Math.sqrt(1+f-i-a);this._w=(o-r)/d,this._x=(s+u)/d,this._y=(l+c)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<1e-8?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(c2(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,u=t._z,c=t._w;return this._x=i*c+o*a+r*u-s*l,this._y=r*c+o*l+s*a-i*u,this._z=s*c+o*u+i*l-r*a,this._w=o*c-i*a-r*l-s*u,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*i+t*this._x,this._y=d*r+t*this._y,this._z=d*s+t*this._z,this.normalize(),this}const u=Math.sqrt(l),c=Math.atan2(u,a),f=Math.sin((1-t)*c)/u,h=Math.sin(t*c)/u;return this._w=o*f+this._w*h,this._x=i*f+this._x*h,this._y=r*f+this._y*h,this._z=s*f+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),r=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class i1{constructor(e=0,t=0,i=0){i1.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(f9.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(f9.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,u=2*(o*r-a*i),c=2*(a*t-s*r),f=2*(s*i-o*t);return this.x=t+l*u+o*f-a*c,this.y=i+l*c+a*u-s*f,this.z=r+l*f+s*c-o*u,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=c2(this.x,e.x,t.x),this.y=c2(this.y,e.y,t.y),this.z=c2(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=c2(this.x,e,t),this.y=c2(this.y,e,t),this.z=c2(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(c2(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-i*l,this.z=i*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Yr.copy(this).projectOnVector(e),this.sub(Yr)}reflect(e){return this.sub(Yr.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(c2(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Yr=new i1,f9=new Bn;class i2{constructor(e,t,i,r,s,o,a,l,u){i2.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,o,a,l,u)}set(e,t,i,r,s,o,a,l,u){const c=this.elements;return c[0]=e,c[1]=r,c[2]=a,c[3]=t,c[4]=s,c[5]=l,c[6]=i,c[7]=o,c[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],u=i[1],c=i[4],f=i[7],h=i[2],d=i[5],g=i[8],y=r[0],m=r[3],p=r[6],w=r[1],M=r[4],_=r[7],A=r[2],R=r[5],D=r[8];return s[0]=o*y+a*w+l*A,s[3]=o*m+a*M+l*R,s[6]=o*p+a*_+l*D,s[1]=u*y+c*w+f*A,s[4]=u*m+c*M+f*R,s[7]=u*p+c*_+f*D,s[2]=h*y+d*w+g*A,s[5]=h*m+d*M+g*R,s[8]=h*p+d*_+g*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],u=e[7],c=e[8];return t*o*c-t*a*u-i*s*c+i*a*l+r*s*u-r*o*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],u=e[7],c=e[8],f=c*o-a*u,h=a*l-c*s,d=u*s-o*l,g=t*f+i*h+r*d;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/g;return e[0]=f*y,e[1]=(r*u-c*i)*y,e[2]=(a*i-r*o)*y,e[3]=h*y,e[4]=(c*t-r*l)*y,e[5]=(r*s-a*t)*y,e[6]=d*y,e[7]=(i*l-u*t)*y,e[8]=(o*t-i*s)*y,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,o,a){const l=Math.cos(s),u=Math.sin(s);return this.set(i*l,i*u,-i*(l*o+u*a)+o+e,-r*u,r*l,-r*(-u*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(Kr.makeScale(e,t)),this}rotate(e){return this.premultiply(Kr.makeRotation(-e)),this}translate(e,t){return this.premultiply(Kr.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Kr=new i2;function G6(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function nr(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function Km(){const n=nr("canvas");return n.style.display="block",n}const h9={};function P0(n){n in h9||(h9[n]=!0,console.warn(n))}function Zm(n,e,t){return new Promise(function(i,r){function s(){switch(n.clientWaitSync(e,n.SYNC_FLUSH_COMMANDS_BIT,0)){case n.WAIT_FAILED:r();break;case n.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:i()}}setTimeout(s,t)})}const d9=new i2().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),p9=new i2().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Jm(){const n={enabled:!0,workingColorSpace:V0,spaces:{},convert:function(r,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===b2&&(r.r=Oe(r.r),r.g=Oe(r.g),r.b=Oe(r.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(r.applyMatrix3(this.spaces[s].toXYZ),r.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===b2&&(r.r=L0(r.r),r.g=L0(r.g),r.b=L0(r.b))),r},workingToColorSpace:function(r,s){return this.convert(r,this.workingColorSpace,s)},colorSpaceToWorking:function(r,s){return this.convert(r,s,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===lt?er:this.spaces[r].transfer},getLuminanceCoefficients:function(r,s=this.workingColorSpace){return r.fromArray(this.spaces[s].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,s,o){return r.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(r,s){return P0("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),n.workingToColorSpace(r,s)},toWorkingColorSpace:function(r,s){return P0("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),n.colorSpaceToWorking(r,s)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return n.define({[V0]:{primaries:e,whitePoint:i,transfer:er,toXYZ:d9,fromXYZ:p9,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:R3},outputColorSpaceConfig:{drawingBufferColorSpace:R3}},[R3]:{primaries:e,whitePoint:i,transfer:b2,toXYZ:d9,fromXYZ:p9,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:R3}}}),n}const p2=Jm();function Oe(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function L0(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let s0;class Qm{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{s0===void 0&&(s0=nr("canvas")),s0.width=e.width,s0.height=e.height;const r=s0.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),i=s0}return i.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=nr("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=Oe(s[o]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Oe(t[i]/255)*255):t[i]=Oe(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let e8=0;class Ca{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:e8++}),this.uuid=Nn(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(Zr(r[o].image)):s.push(Zr(r[o]))}else s=Zr(r);i.url=s}return t||(e.images[this.uuid]=i),i}}function Zr(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?Qm.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let t8=0;const Jr=new i1;class S3 extends $0{constructor(e=S3.DEFAULT_IMAGE,t=S3.DEFAULT_MAPPING,i=Bt,r=Bt,s=pe,o=kt,a=J3,l=ze,u=S3.DEFAULT_ANISOTROPY,c=lt){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:t8++}),this.uuid=Nn(),this.name="",this.source=new Ca(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=u,this.format=a,this.internalFormat=null,this.type=l,this.offset=new S2(0,0),this.repeat=new S2(1,1),this.center=new S2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new i2,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Jr).x}get height(){return this.source.getSize(Jr).y}get depth(){return this.source.getSize(Jr).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}r&&i&&r.isVector2&&i.isVector2||r&&i&&r.isVector3&&i.isVector3||r&&i&&r.isMatrix3&&i.isMatrix3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==I6)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case fo:e.x=e.x-Math.floor(e.x);break;case Bt:e.x=e.x<0?0:1;break;case ho:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case fo:e.y=e.y-Math.floor(e.y);break;case Bt:e.y=e.y<0?0:1;break;case ho:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}S3.DEFAULT_IMAGE=null;S3.DEFAULT_MAPPING=I6;S3.DEFAULT_ANISOTROPY=1;class N2{constructor(e=0,t=0,i=0,r=1){N2.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*r+o[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const l=e.elements,u=l[0],c=l[4],f=l[8],h=l[1],d=l[5],g=l[9],y=l[2],m=l[6],p=l[10];if(Math.abs(c-h)<.01&&Math.abs(f-y)<.01&&Math.abs(g-m)<.01){if(Math.abs(c+h)<.1&&Math.abs(f+y)<.1&&Math.abs(g+m)<.1&&Math.abs(u+d+p-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(u+1)/2,_=(d+1)/2,A=(p+1)/2,R=(c+h)/4,D=(f+y)/4,L=(g+m)/4;return M>_&&M>A?M<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(M),r=R/i,s=D/i):_>A?_<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(_),i=R/r,s=L/r):A<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(A),i=D/s,r=L/s),this.set(i,r,s,t),this}let w=Math.sqrt((m-g)*(m-g)+(f-y)*(f-y)+(h-c)*(h-c));return Math.abs(w)<.001&&(w=1),this.x=(m-g)/w,this.y=(f-y)/w,this.z=(h-c)/w,this.w=Math.acos((u+d+p-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=c2(this.x,e.x,t.x),this.y=c2(this.y,e.y,t.y),this.z=c2(this.z,e.z,t.z),this.w=c2(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=c2(this.x,e,t),this.y=c2(this.y,e,t),this.z=c2(this.z,e,t),this.w=c2(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(c2(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class n8 extends $0{constructor(e=1,t=1,i={}){super(),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:pe,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},i),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=i.depth,this.scissor=new N2(0,0,e,t),this.scissorTest=!1,this.viewport=new N2(0,0,e,t);const r={width:e,height:t,depth:i.depth},s=new S3(r);this.textures=[];const o=i.count;for(let a=0;a<o;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(i),this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples,this.multiview=i.multiview}_setTextureOptions(e={}){const t={minFilter:pe,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let i=0;i<this.textures.length;i++)this.textures[i].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=i,this.textures[r].isArrayTexture=this.textures[r].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const r=Object.assign({},e.textures[t].image);this.textures[t].source=new Ca(r)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Yt extends n8{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class W6 extends S3{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=ee,this.minFilter=ee,this.wrapR=Bt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class i8 extends S3{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=ee,this.minFilter=ee,this.wrapR=Bt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class kn{constructor(e=new i1(1/0,1/0,1/0),t=new i1(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(X3.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(X3.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=X3.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,X3):X3.fromBufferAttribute(s,o),X3.applyMatrix4(e.matrixWorld),this.expandByPoint(X3);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),ii.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),ii.copy(i.boundingBox)),ii.applyMatrix4(e.matrixWorld),this.union(ii)}const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,X3),X3.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(nn),ri.subVectors(this.max,nn),o0.subVectors(e.a,nn),a0.subVectors(e.b,nn),l0.subVectors(e.c,nn),Ze.subVectors(a0,o0),Je.subVectors(l0,a0),bt.subVectors(o0,l0);let t=[0,-Ze.z,Ze.y,0,-Je.z,Je.y,0,-bt.z,bt.y,Ze.z,0,-Ze.x,Je.z,0,-Je.x,bt.z,0,-bt.x,-Ze.y,Ze.x,0,-Je.y,Je.x,0,-bt.y,bt.x,0];return!Qr(t,o0,a0,l0,ri)||(t=[1,0,0,0,1,0,0,0,1],!Qr(t,o0,a0,l0,ri))?!1:(si.crossVectors(Ze,Je),t=[si.x,si.y,si.z],Qr(t,o0,a0,l0,ri))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,X3).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(X3).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Se[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Se[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Se[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Se[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Se[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Se[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Se[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Se[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Se),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const Se=[new i1,new i1,new i1,new i1,new i1,new i1,new i1,new i1],X3=new i1,ii=new kn,o0=new i1,a0=new i1,l0=new i1,Ze=new i1,Je=new i1,bt=new i1,nn=new i1,ri=new i1,si=new i1,Tt=new i1;function Qr(n,e,t,i,r){for(let s=0,o=n.length-3;s<=o;s+=3){Tt.fromArray(n,s);const a=r.x*Math.abs(Tt.x)+r.y*Math.abs(Tt.y)+r.z*Math.abs(Tt.z),l=e.dot(Tt),u=t.dot(Tt),c=i.dot(Tt);if(Math.max(-Math.max(l,u,c),Math.min(l,u,c))>a)return!1}return!0}const r8=new kn,rn=new i1,es=new i1;class Ra{constructor(e=new i1,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):r8.setFromPoints(e).getCenter(i);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;rn.subVectors(e,this.center);const t=rn.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.addScaledVector(rn,r/i),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(es.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(rn.copy(e.center).add(es)),this.expandByPoint(rn.copy(e.center).sub(es))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Ee=new i1,ts=new i1,oi=new i1,Qe=new i1,ns=new i1,ai=new i1,is=new i1;class s8{constructor(e=new i1,t=new i1(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ee)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ee.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ee.copy(this.origin).addScaledVector(this.direction,t),Ee.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){ts.copy(e).add(t).multiplyScalar(.5),oi.copy(t).sub(e).normalize(),Qe.copy(this.origin).sub(ts);const s=e.distanceTo(t)*.5,o=-this.direction.dot(oi),a=Qe.dot(this.direction),l=-Qe.dot(oi),u=Qe.lengthSq(),c=Math.abs(1-o*o);let f,h,d,g;if(c>0)if(f=o*l-a,h=o*a-l,g=s*c,f>=0)if(h>=-g)if(h<=g){const y=1/c;f*=y,h*=y,d=f*(f+o*h+2*a)+h*(o*f+h+2*l)+u}else h=s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+u;else h=-s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+u;else h<=-g?(f=Math.max(0,-(-o*s+a)),h=f>0?-s:Math.min(Math.max(-s,-l),s),d=-f*f+h*(h+2*l)+u):h<=g?(f=0,h=Math.min(Math.max(-s,-l),s),d=h*(h+2*l)+u):(f=Math.max(0,-(o*s+a)),h=f>0?s:Math.min(Math.max(-s,-l),s),d=-f*f+h*(h+2*l)+u);else h=o>0?-s:s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+u;return i&&i.copy(this.origin).addScaledVector(this.direction,f),r&&r.copy(ts).addScaledVector(oi,h),d}intersectSphere(e,t){Ee.subVectors(e.center,this.origin);const i=Ee.dot(this.direction),r=Ee.dot(Ee)-i*i,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,o,a,l;const u=1/this.direction.x,c=1/this.direction.y,f=1/this.direction.z,h=this.origin;return u>=0?(i=(e.min.x-h.x)*u,r=(e.max.x-h.x)*u):(i=(e.max.x-h.x)*u,r=(e.min.x-h.x)*u),c>=0?(s=(e.min.y-h.y)*c,o=(e.max.y-h.y)*c):(s=(e.max.y-h.y)*c,o=(e.min.y-h.y)*c),i>o||s>r||((s>i||isNaN(i))&&(i=s),(o<r||isNaN(r))&&(r=o),f>=0?(a=(e.min.z-h.z)*f,l=(e.max.z-h.z)*f):(a=(e.max.z-h.z)*f,l=(e.min.z-h.z)*f),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Ee)!==null}intersectTriangle(e,t,i,r,s){ns.subVectors(t,e),ai.subVectors(i,e),is.crossVectors(ns,ai);let o=this.direction.dot(is),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Qe.subVectors(this.origin,e);const l=a*this.direction.dot(ai.crossVectors(Qe,ai));if(l<0)return null;const u=a*this.direction.dot(ns.cross(Qe));if(u<0||l+u>o)return null;const c=-a*Qe.dot(is);return c<0?null:this.at(c/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class V2{constructor(e,t,i,r,s,o,a,l,u,c,f,h,d,g,y,m){V2.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,o,a,l,u,c,f,h,d,g,y,m)}set(e,t,i,r,s,o,a,l,u,c,f,h,d,g,y,m){const p=this.elements;return p[0]=e,p[4]=t,p[8]=i,p[12]=r,p[1]=s,p[5]=o,p[9]=a,p[13]=l,p[2]=u,p[6]=c,p[10]=f,p[14]=h,p[3]=d,p[7]=g,p[11]=y,p[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new V2().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/c0.setFromMatrixColumn(e,0).length(),s=1/c0.setFromMatrixColumn(e,1).length(),o=1/c0.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),u=Math.sin(r),c=Math.cos(s),f=Math.sin(s);if(e.order==="XYZ"){const h=o*c,d=o*f,g=a*c,y=a*f;t[0]=l*c,t[4]=-l*f,t[8]=u,t[1]=d+g*u,t[5]=h-y*u,t[9]=-a*l,t[2]=y-h*u,t[6]=g+d*u,t[10]=o*l}else if(e.order==="YXZ"){const h=l*c,d=l*f,g=u*c,y=u*f;t[0]=h+y*a,t[4]=g*a-d,t[8]=o*u,t[1]=o*f,t[5]=o*c,t[9]=-a,t[2]=d*a-g,t[6]=y+h*a,t[10]=o*l}else if(e.order==="ZXY"){const h=l*c,d=l*f,g=u*c,y=u*f;t[0]=h-y*a,t[4]=-o*f,t[8]=g+d*a,t[1]=d+g*a,t[5]=o*c,t[9]=y-h*a,t[2]=-o*u,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const h=o*c,d=o*f,g=a*c,y=a*f;t[0]=l*c,t[4]=g*u-d,t[8]=h*u+y,t[1]=l*f,t[5]=y*u+h,t[9]=d*u-g,t[2]=-u,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const h=o*l,d=o*u,g=a*l,y=a*u;t[0]=l*c,t[4]=y-h*f,t[8]=g*f+d,t[1]=f,t[5]=o*c,t[9]=-a*c,t[2]=-u*c,t[6]=d*f+g,t[10]=h-y*f}else if(e.order==="XZY"){const h=o*l,d=o*u,g=a*l,y=a*u;t[0]=l*c,t[4]=-f,t[8]=u*c,t[1]=h*f+y,t[5]=o*c,t[9]=d*f-g,t[2]=g*f-d,t[6]=a*c,t[10]=y*f+h}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(o8,e,a8)}lookAt(e,t,i){const r=this.elements;return w3.subVectors(e,t),w3.lengthSq()===0&&(w3.z=1),w3.normalize(),et.crossVectors(i,w3),et.lengthSq()===0&&(Math.abs(i.z)===1?w3.x+=1e-4:w3.z+=1e-4,w3.normalize(),et.crossVectors(i,w3)),et.normalize(),li.crossVectors(w3,et),r[0]=et.x,r[4]=li.x,r[8]=w3.x,r[1]=et.y,r[5]=li.y,r[9]=w3.y,r[2]=et.z,r[6]=li.z,r[10]=w3.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],u=i[12],c=i[1],f=i[5],h=i[9],d=i[13],g=i[2],y=i[6],m=i[10],p=i[14],w=i[3],M=i[7],_=i[11],A=i[15],R=r[0],D=r[4],L=r[8],T=r[12],b=r[1],U=r[5],B=r[9],X=r[13],K=r[2],a1=r[6],z=r[10],r1=r[14],H=r[3],y1=r[7],C1=r[11],F1=r[15];return s[0]=o*R+a*b+l*K+u*H,s[4]=o*D+a*U+l*a1+u*y1,s[8]=o*L+a*B+l*z+u*C1,s[12]=o*T+a*X+l*r1+u*F1,s[1]=c*R+f*b+h*K+d*H,s[5]=c*D+f*U+h*a1+d*y1,s[9]=c*L+f*B+h*z+d*C1,s[13]=c*T+f*X+h*r1+d*F1,s[2]=g*R+y*b+m*K+p*H,s[6]=g*D+y*U+m*a1+p*y1,s[10]=g*L+y*B+m*z+p*C1,s[14]=g*T+y*X+m*r1+p*F1,s[3]=w*R+M*b+_*K+A*H,s[7]=w*D+M*U+_*a1+A*y1,s[11]=w*L+M*B+_*z+A*C1,s[15]=w*T+M*X+_*r1+A*F1,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],u=e[13],c=e[2],f=e[6],h=e[10],d=e[14],g=e[3],y=e[7],m=e[11],p=e[15];return g*(+s*l*f-r*u*f-s*a*h+i*u*h+r*a*d-i*l*d)+y*(+t*l*d-t*u*h+s*o*h-r*o*d+r*u*c-s*l*c)+m*(+t*u*f-t*a*d-s*o*f+i*o*d+s*a*c-i*u*c)+p*(-r*a*c-t*l*f+t*a*h+r*o*f-i*o*h+i*l*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],u=e[7],c=e[8],f=e[9],h=e[10],d=e[11],g=e[12],y=e[13],m=e[14],p=e[15],w=f*m*u-y*h*u+y*l*d-a*m*d-f*l*p+a*h*p,M=g*h*u-c*m*u-g*l*d+o*m*d+c*l*p-o*h*p,_=c*y*u-g*f*u+g*a*d-o*y*d-c*a*p+o*f*p,A=g*f*l-c*y*l-g*a*h+o*y*h+c*a*m-o*f*m,R=t*w+i*M+r*_+s*A;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/R;return e[0]=w*D,e[1]=(y*h*s-f*m*s-y*r*d+i*m*d+f*r*p-i*h*p)*D,e[2]=(a*m*s-y*l*s+y*r*u-i*m*u-a*r*p+i*l*p)*D,e[3]=(f*l*s-a*h*s-f*r*u+i*h*u+a*r*d-i*l*d)*D,e[4]=M*D,e[5]=(c*m*s-g*h*s+g*r*d-t*m*d-c*r*p+t*h*p)*D,e[6]=(g*l*s-o*m*s-g*r*u+t*m*u+o*r*p-t*l*p)*D,e[7]=(o*h*s-c*l*s+c*r*u-t*h*u-o*r*d+t*l*d)*D,e[8]=_*D,e[9]=(g*f*s-c*y*s-g*i*d+t*y*d+c*i*p-t*f*p)*D,e[10]=(o*y*s-g*a*s+g*i*u-t*y*u-o*i*p+t*a*p)*D,e[11]=(c*a*s-o*f*s-c*i*u+t*f*u+o*i*d-t*a*d)*D,e[12]=A*D,e[13]=(c*y*r-g*f*r+g*i*h-t*y*h-c*i*m+t*f*m)*D,e[14]=(g*a*r-o*y*r-g*i*l+t*y*l+o*i*m-t*a*m)*D,e[15]=(o*f*r-c*a*r+c*i*l-t*f*l-o*i*h+t*a*h)*D,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,u=s*o,c=s*a;return this.set(u*o+i,u*a-r*l,u*l+r*a,0,u*a+r*l,c*a+i,c*l-r*o,0,u*l-r*a,c*l+r*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,s,o){return this.set(1,i,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,u=s+s,c=o+o,f=a+a,h=s*u,d=s*c,g=s*f,y=o*c,m=o*f,p=a*f,w=l*u,M=l*c,_=l*f,A=i.x,R=i.y,D=i.z;return r[0]=(1-(y+p))*A,r[1]=(d+_)*A,r[2]=(g-M)*A,r[3]=0,r[4]=(d-_)*R,r[5]=(1-(h+p))*R,r[6]=(m+w)*R,r[7]=0,r[8]=(g+M)*D,r[9]=(m-w)*D,r[10]=(1-(h+y))*D,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=c0.set(r[0],r[1],r[2]).length();const o=c0.set(r[4],r[5],r[6]).length(),a=c0.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],$3.copy(this);const u=1/s,c=1/o,f=1/a;return $3.elements[0]*=u,$3.elements[1]*=u,$3.elements[2]*=u,$3.elements[4]*=c,$3.elements[5]*=c,$3.elements[6]*=c,$3.elements[8]*=f,$3.elements[9]*=f,$3.elements[10]*=f,t.setFromRotationMatrix($3),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,r,s,o,a=me,l=!1){const u=this.elements,c=2*s/(t-e),f=2*s/(i-r),h=(t+e)/(t-e),d=(i+r)/(i-r);let g,y;if(l)g=s/(o-s),y=o*s/(o-s);else if(a===me)g=-(o+s)/(o-s),y=-2*o*s/(o-s);else if(a===tr)g=-o/(o-s),y=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return u[0]=c,u[4]=0,u[8]=h,u[12]=0,u[1]=0,u[5]=f,u[9]=d,u[13]=0,u[2]=0,u[6]=0,u[10]=g,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,i,r,s,o,a=me,l=!1){const u=this.elements,c=2/(t-e),f=2/(i-r),h=-(t+e)/(t-e),d=-(i+r)/(i-r);let g,y;if(l)g=1/(o-s),y=o/(o-s);else if(a===me)g=-2/(o-s),y=-(o+s)/(o-s);else if(a===tr)g=-1/(o-s),y=-s/(o-s);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return u[0]=c,u[4]=0,u[8]=0,u[12]=h,u[1]=0,u[5]=f,u[9]=0,u[13]=d,u[2]=0,u[6]=0,u[10]=g,u[14]=y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const c0=new i1,$3=new V2,o8=new i1(0,0,0),a8=new i1(1,1,1),et=new i1,li=new i1,w3=new i1,m9=new V2,_9=new Bn;class Ve{constructor(e=0,t=0,i=0,r=Ve.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],u=r[5],c=r[9],f=r[2],h=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(c2(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(h,u),this._z=0);break;case"YXZ":this._x=Math.asin(-c2(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-f,s),this._z=0);break;case"ZXY":this._x=Math.asin(c2(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-f,d),this._z=Math.atan2(-o,u)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-c2(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,u));break;case"YZX":this._z=Math.asin(c2(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-f,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-c2(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(h,u),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return m9.makeRotationFromQuaternion(e),this.setFromRotationMatrix(m9,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return _9.setFromEuler(this),this.setFromQuaternion(_9,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ve.DEFAULT_ORDER="XYZ";class X6{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let l8=0;const g9=new i1,u0=new Bn,be=new V2,ci=new i1,sn=new i1,c8=new i1,u8=new Bn,v9=new i1(1,0,0),y9=new i1(0,1,0),x9=new i1(0,0,1),M9={type:"added"},f8={type:"removed"},f0={type:"childadded",child:null},rs={type:"childremoved",child:null};class E3 extends $0{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:l8++}),this.uuid=Nn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=E3.DEFAULT_UP.clone();const e=new i1,t=new Ve,i=new Bn,r=new i1(1,1,1);function s(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new V2},normalMatrix:{value:new i2}}),this.matrix=new V2,this.matrixWorld=new V2,this.matrixAutoUpdate=E3.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=E3.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new X6,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return u0.setFromAxisAngle(e,t),this.quaternion.multiply(u0),this}rotateOnWorldAxis(e,t){return u0.setFromAxisAngle(e,t),this.quaternion.premultiply(u0),this}rotateX(e){return this.rotateOnAxis(v9,e)}rotateY(e){return this.rotateOnAxis(y9,e)}rotateZ(e){return this.rotateOnAxis(x9,e)}translateOnAxis(e,t){return g9.copy(e).applyQuaternion(this.quaternion),this.position.add(g9.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(v9,e)}translateY(e){return this.translateOnAxis(y9,e)}translateZ(e){return this.translateOnAxis(x9,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(be.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?ci.copy(e):ci.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),sn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?be.lookAt(sn,ci,this.up):be.lookAt(ci,sn,this.up),this.quaternion.setFromRotationMatrix(be),r&&(be.extractRotation(r.matrixWorld),u0.setFromRotationMatrix(be),this.quaternion.premultiply(u0.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(M9),f0.child=e,this.dispatchEvent(f0),f0.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(f8),rs.child=e,this.dispatchEvent(rs),rs.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),be.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),be.multiply(e.parent.matrixWorld)),e.applyMatrix4(be),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(M9),f0.child=e,this.dispatchEvent(f0),f0.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(sn,e,c8),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(sn,u8,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),r.instanceInfo=this._instanceInfo.map(a=>({...a})),r.availableInstanceIds=this._availableInstanceIds.slice(),r.availableGeometryIds=this._availableGeometryIds.slice(),r.nextIndexStart=this._nextIndexStart,r.nextVertexStart=this._nextVertexStart,r.geometryCount=this._geometryCount,r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.matricesTexture=this._matricesTexture.toJSON(e),r.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(r.boundingBox=this.boundingBox.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let u=0,c=l.length;u<c;u++){const f=l[u];s(e.shapes,f)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,u=this.material.length;l<u;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),u=o(e.textures),c=o(e.images),f=o(e.shapes),h=o(e.skeletons),d=o(e.animations),g=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),u.length>0&&(i.textures=u),c.length>0&&(i.images=c),f.length>0&&(i.shapes=f),h.length>0&&(i.skeletons=h),d.length>0&&(i.animations=d),g.length>0&&(i.nodes=g)}return i.object=r,i;function o(a){const l=[];for(const u in a){const c=a[u];delete c.metadata,l.push(c)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}E3.DEFAULT_UP=new i1(0,1,0);E3.DEFAULT_MATRIX_AUTO_UPDATE=!0;E3.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const q3=new i1,Te=new i1,ss=new i1,we=new i1,h0=new i1,d0=new i1,S9=new i1,os=new i1,as=new i1,ls=new i1,cs=new N2,us=new N2,fs=new N2;class Y3{constructor(e=new i1,t=new i1,i=new i1){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),q3.subVectors(e,t),r.cross(q3);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){q3.subVectors(r,t),Te.subVectors(i,t),ss.subVectors(e,t);const o=q3.dot(q3),a=q3.dot(Te),l=q3.dot(ss),u=Te.dot(Te),c=Te.dot(ss),f=o*u-a*a;if(f===0)return s.set(0,0,0),null;const h=1/f,d=(u*l-a*c)*h,g=(o*c-a*l)*h;return s.set(1-d-g,g,d)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,we)===null?!1:we.x>=0&&we.y>=0&&we.x+we.y<=1}static getInterpolation(e,t,i,r,s,o,a,l){return this.getBarycoord(e,t,i,r,we)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,we.x),l.addScaledVector(o,we.y),l.addScaledVector(a,we.z),l)}static getInterpolatedAttribute(e,t,i,r,s,o){return cs.setScalar(0),us.setScalar(0),fs.setScalar(0),cs.fromBufferAttribute(e,t),us.fromBufferAttribute(e,i),fs.fromBufferAttribute(e,r),o.setScalar(0),o.addScaledVector(cs,s.x),o.addScaledVector(us,s.y),o.addScaledVector(fs,s.z),o}static isFrontFacing(e,t,i,r){return q3.subVectors(i,t),Te.subVectors(e,t),q3.cross(Te).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return q3.subVectors(this.c,this.b),Te.subVectors(this.a,this.b),q3.cross(Te).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Y3.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Y3.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,r,s){return Y3.getInterpolation(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return Y3.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Y3.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,s=this.c;let o,a;h0.subVectors(r,i),d0.subVectors(s,i),os.subVectors(e,i);const l=h0.dot(os),u=d0.dot(os);if(l<=0&&u<=0)return t.copy(i);as.subVectors(e,r);const c=h0.dot(as),f=d0.dot(as);if(c>=0&&f<=c)return t.copy(r);const h=l*f-c*u;if(h<=0&&l>=0&&c<=0)return o=l/(l-c),t.copy(i).addScaledVector(h0,o);ls.subVectors(e,s);const d=h0.dot(ls),g=d0.dot(ls);if(g>=0&&d<=g)return t.copy(s);const y=d*u-l*g;if(y<=0&&u>=0&&g<=0)return a=u/(u-g),t.copy(i).addScaledVector(d0,a);const m=c*g-d*f;if(m<=0&&f-c>=0&&d-g>=0)return S9.subVectors(s,r),a=(f-c)/(f-c+(d-g)),t.copy(r).addScaledVector(S9,a);const p=1/(m+y+h);return o=y*p,a=h*p,t.copy(i).addScaledVector(h0,o).addScaledVector(d0,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const $6={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},tt={h:0,s:0,l:0},ui={h:0,s:0,l:0};function hs(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class M2{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=R3){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,p2.colorSpaceToWorking(this,t),this}setRGB(e,t,i,r=p2.workingColorSpace){return this.r=e,this.g=t,this.b=i,p2.colorSpaceToWorking(this,r),this}setHSL(e,t,i,r=p2.workingColorSpace){if(e=Ym(e,1),t=c2(t,0,1),i=c2(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,o=2*i-s;this.r=hs(o,s,e+1/3),this.g=hs(o,s,e),this.b=hs(o,s,e-1/3)}return p2.colorSpaceToWorking(this,r),this}setStyle(e,t=R3){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=R3){const i=$6[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Oe(e.r),this.g=Oe(e.g),this.b=Oe(e.b),this}copyLinearToSRGB(e){return this.r=L0(e.r),this.g=L0(e.g),this.b=L0(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=R3){return p2.workingToColorSpace(r3.copy(this),e),Math.round(c2(r3.r*255,0,255))*65536+Math.round(c2(r3.g*255,0,255))*256+Math.round(c2(r3.b*255,0,255))}getHexString(e=R3){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=p2.workingColorSpace){p2.workingToColorSpace(r3.copy(this),t);const i=r3.r,r=r3.g,s=r3.b,o=Math.max(i,r,s),a=Math.min(i,r,s);let l,u;const c=(a+o)/2;if(a===o)l=0,u=0;else{const f=o-a;switch(u=c<=.5?f/(o+a):f/(2-o-a),o){case i:l=(r-s)/f+(r<s?6:0);break;case r:l=(s-i)/f+2;break;case s:l=(i-r)/f+4;break}l/=6}return e.h=l,e.s=u,e.l=c,e}getRGB(e,t=p2.workingColorSpace){return p2.workingToColorSpace(r3.copy(this),t),e.r=r3.r,e.g=r3.g,e.b=r3.b,e}getStyle(e=R3){p2.workingToColorSpace(r3.copy(this),e);const t=r3.r,i=r3.g,r=r3.b;return e!==R3?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(e,t,i){return this.getHSL(tt),this.setHSL(tt.h+e,tt.s+t,tt.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(tt),e.getHSL(ui);const i=jr(tt.h,ui.h,t),r=jr(tt.s,ui.s,t),s=jr(tt.l,ui.l,t);return this.setHSL(i,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*r,this.g=s[1]*t+s[4]*i+s[7]*r,this.b=s[2]*t+s[5]*i+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const r3=new M2;M2.NAMES=$6;let h8=0;class Hn extends $0{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:h8++}),this.uuid=Nn(),this.name="",this.type="Material",this.blending=R0,this.side=mt,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=eo,this.blendDst=to,this.blendEquation=Ot,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new M2(0,0,0),this.blendAlpha=0,this.depthFunc=k0,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=l9,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=r0,this.stencilZFail=r0,this.stencilZPass=r0,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==R0&&(i.blending=this.blending),this.side!==mt&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==eo&&(i.blendSrc=this.blendSrc),this.blendDst!==to&&(i.blendDst=this.blendDst),this.blendEquation!==Ot&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==k0&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==l9&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==r0&&(i.stencilFail=this.stencilFail),this.stencilZFail!==r0&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==r0&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class q6 extends Hn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new M2(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ve,this.combine=L6,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const B2=new i1,fi=new S2;let d8=0;class D3{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:d8++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=c9,this.updateRanges=[],this.gpuType=Ue,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)fi.fromBufferAttribute(this,t),fi.applyMatrix3(e),this.setXY(t,fi.x,fi.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)B2.fromBufferAttribute(this,t),B2.applyMatrix3(e),this.setXYZ(t,B2.x,B2.y,B2.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)B2.fromBufferAttribute(this,t),B2.applyMatrix4(e),this.setXYZ(t,B2.x,B2.y,B2.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)B2.fromBufferAttribute(this,t),B2.applyNormalMatrix(e),this.setXYZ(t,B2.x,B2.y,B2.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)B2.fromBufferAttribute(this,t),B2.transformDirection(e),this.setXYZ(t,B2.x,B2.y,B2.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=tn(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=_3(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=tn(t,this.array)),t}setX(e,t){return this.normalized&&(t=_3(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=tn(t,this.array)),t}setY(e,t){return this.normalized&&(t=_3(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=tn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=_3(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=tn(t,this.array)),t}setW(e,t){return this.normalized&&(t=_3(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=_3(t,this.array),i=_3(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=_3(t,this.array),i=_3(i,this.array),r=_3(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.normalized&&(t=_3(t,this.array),i=_3(i,this.array),r=_3(r,this.array),s=_3(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==c9&&(e.usage=this.usage),e}}class j6 extends D3{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class Y6 extends D3{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class Fe extends D3{constructor(e,t,i){super(new Float32Array(e),t,i)}}let p8=0;const k3=new V2,ds=new E3,p0=new i1,A3=new kn,on=new kn,j2=new i1;class Ge extends $0{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:p8++}),this.uuid=Nn(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(G6(e)?Y6:j6)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new i2().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return k3.makeRotationFromQuaternion(e),this.applyMatrix4(k3),this}rotateX(e){return k3.makeRotationX(e),this.applyMatrix4(k3),this}rotateY(e){return k3.makeRotationY(e),this.applyMatrix4(k3),this}rotateZ(e){return k3.makeRotationZ(e),this.applyMatrix4(k3),this}translate(e,t,i){return k3.makeTranslation(e,t,i),this.applyMatrix4(k3),this}scale(e,t,i){return k3.makeScale(e,t,i),this.applyMatrix4(k3),this}lookAt(e){return ds.lookAt(e),ds.updateMatrix(),this.applyMatrix4(ds.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(p0).negate(),this.translate(p0.x,p0.y,p0.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let r=0,s=e.length;r<s;r++){const o=e[r];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new Fe(i,3))}else{const i=Math.min(e.length,t.count);for(let r=0;r<i;r++){const s=e[r];t.setXYZ(r,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new kn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new i1(-1/0,-1/0,-1/0),new i1(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const s=t[i];A3.setFromBufferAttribute(s),this.morphTargetsRelative?(j2.addVectors(this.boundingBox.min,A3.min),this.boundingBox.expandByPoint(j2),j2.addVectors(this.boundingBox.max,A3.max),this.boundingBox.expandByPoint(j2)):(this.boundingBox.expandByPoint(A3.min),this.boundingBox.expandByPoint(A3.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ra);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new i1,1/0);return}if(e){const i=this.boundingSphere.center;if(A3.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];on.setFromBufferAttribute(a),this.morphTargetsRelative?(j2.addVectors(A3.min,on.min),A3.expandByPoint(j2),j2.addVectors(A3.max,on.max),A3.expandByPoint(j2)):(A3.expandByPoint(on.min),A3.expandByPoint(on.max))}A3.getCenter(i);let r=0;for(let s=0,o=e.count;s<o;s++)j2.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(j2));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let u=0,c=a.count;u<c;u++)j2.fromBufferAttribute(a,u),l&&(p0.fromBufferAttribute(e,u),j2.add(p0)),r=Math.max(r,i.distanceToSquared(j2))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new D3(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let L=0;L<i.count;L++)a[L]=new i1,l[L]=new i1;const u=new i1,c=new i1,f=new i1,h=new S2,d=new S2,g=new S2,y=new i1,m=new i1;function p(L,T,b){u.fromBufferAttribute(i,L),c.fromBufferAttribute(i,T),f.fromBufferAttribute(i,b),h.fromBufferAttribute(s,L),d.fromBufferAttribute(s,T),g.fromBufferAttribute(s,b),c.sub(u),f.sub(u),d.sub(h),g.sub(h);const U=1/(d.x*g.y-g.x*d.y);isFinite(U)&&(y.copy(c).multiplyScalar(g.y).addScaledVector(f,-d.y).multiplyScalar(U),m.copy(f).multiplyScalar(d.x).addScaledVector(c,-g.x).multiplyScalar(U),a[L].add(y),a[T].add(y),a[b].add(y),l[L].add(m),l[T].add(m),l[b].add(m))}let w=this.groups;w.length===0&&(w=[{start:0,count:e.count}]);for(let L=0,T=w.length;L<T;++L){const b=w[L],U=b.start,B=b.count;for(let X=U,K=U+B;X<K;X+=3)p(e.getX(X+0),e.getX(X+1),e.getX(X+2))}const M=new i1,_=new i1,A=new i1,R=new i1;function D(L){A.fromBufferAttribute(r,L),R.copy(A);const T=a[L];M.copy(T),M.sub(A.multiplyScalar(A.dot(T))).normalize(),_.crossVectors(R,T);const U=_.dot(l[L])<0?-1:1;o.setXYZW(L,M.x,M.y,M.z,U)}for(let L=0,T=w.length;L<T;++L){const b=w[L],U=b.start,B=b.count;for(let X=U,K=U+B;X<K;X+=3)D(e.getX(X+0)),D(e.getX(X+1)),D(e.getX(X+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new D3(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let h=0,d=i.count;h<d;h++)i.setXYZ(h,0,0,0);const r=new i1,s=new i1,o=new i1,a=new i1,l=new i1,u=new i1,c=new i1,f=new i1;if(e)for(let h=0,d=e.count;h<d;h+=3){const g=e.getX(h+0),y=e.getX(h+1),m=e.getX(h+2);r.fromBufferAttribute(t,g),s.fromBufferAttribute(t,y),o.fromBufferAttribute(t,m),c.subVectors(o,s),f.subVectors(r,s),c.cross(f),a.fromBufferAttribute(i,g),l.fromBufferAttribute(i,y),u.fromBufferAttribute(i,m),a.add(c),l.add(c),u.add(c),i.setXYZ(g,a.x,a.y,a.z),i.setXYZ(y,l.x,l.y,l.z),i.setXYZ(m,u.x,u.y,u.z)}else for(let h=0,d=t.count;h<d;h+=3)r.fromBufferAttribute(t,h+0),s.fromBufferAttribute(t,h+1),o.fromBufferAttribute(t,h+2),c.subVectors(o,s),f.subVectors(r,s),c.cross(f),i.setXYZ(h+0,c.x,c.y,c.z),i.setXYZ(h+1,c.x,c.y,c.z),i.setXYZ(h+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)j2.fromBufferAttribute(e,t),j2.normalize(),e.setXYZ(t,j2.x,j2.y,j2.z)}toNonIndexed(){function e(a,l){const u=a.array,c=a.itemSize,f=a.normalized,h=new u.constructor(l.length*c);let d=0,g=0;for(let y=0,m=l.length;y<m;y++){a.isInterleavedBufferAttribute?d=l[y]*a.data.stride+a.offset:d=l[y]*c;for(let p=0;p<c;p++)h[g++]=u[d++]}return new D3(h,c,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Ge,i=this.index.array,r=this.attributes;for(const a in r){const l=r[a],u=e(l,i);t.setAttribute(a,u)}const s=this.morphAttributes;for(const a in s){const l=[],u=s[a];for(let c=0,f=u.length;c<f;c++){const h=u[c],d=e(h,i);l.push(d)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const u=o[a];t.addGroup(u.start,u.count,u.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const u in l)l[u]!==void 0&&(e[u]=l[u]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const u=i[l];e.data.attributes[l]=u.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const u=this.morphAttributes[l],c=[];for(let f=0,h=u.length;f<h;f++){const d=u[f];c.push(d.toJSON(e.data))}c.length>0&&(r[l]=c,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere=a.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const r=e.attributes;for(const u in r){const c=r[u];this.setAttribute(u,c.clone(t))}const s=e.morphAttributes;for(const u in s){const c=[],f=s[u];for(let h=0,d=f.length;h<d;h++)c.push(f[h].clone(t));this.morphAttributes[u]=c}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let u=0,c=o.length;u<c;u++){const f=o[u];this.addGroup(f.start,f.count,f.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const E9=new V2,wt=new s8,hi=new Ra,b9=new i1,di=new i1,pi=new i1,mi=new i1,ps=new i1,_i=new i1,T9=new i1,gi=new i1;class _e extends E3{constructor(e=new Ge,t=new q6){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,r=i.attributes.position,s=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(r,e);const a=this.morphTargetInfluences;if(s&&a){_i.set(0,0,0);for(let l=0,u=s.length;l<u;l++){const c=a[l],f=s[l];c!==0&&(ps.fromBufferAttribute(f,e),o?_i.addScaledVector(ps,c):_i.addScaledVector(ps.sub(t),c))}t.add(_i)}return t}raycast(e,t){const i=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),hi.copy(i.boundingSphere),hi.applyMatrix4(s),wt.copy(e.ray).recast(e.near),!(hi.containsPoint(wt.origin)===!1&&(wt.intersectSphere(hi,b9)===null||wt.origin.distanceToSquared(b9)>(e.far-e.near)**2))&&(E9.copy(s).invert(),wt.copy(e.ray).applyMatrix4(E9),!(i.boundingBox!==null&&wt.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,wt)))}_computeIntersections(e,t,i){let r;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,u=s.attributes.uv,c=s.attributes.uv1,f=s.attributes.normal,h=s.groups,d=s.drawRange;if(a!==null)if(Array.isArray(o))for(let g=0,y=h.length;g<y;g++){const m=h[g],p=o[m.materialIndex],w=Math.max(m.start,d.start),M=Math.min(a.count,Math.min(m.start+m.count,d.start+d.count));for(let _=w,A=M;_<A;_+=3){const R=a.getX(_),D=a.getX(_+1),L=a.getX(_+2);r=vi(this,p,e,i,u,c,f,R,D,L),r&&(r.faceIndex=Math.floor(_/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const g=Math.max(0,d.start),y=Math.min(a.count,d.start+d.count);for(let m=g,p=y;m<p;m+=3){const w=a.getX(m),M=a.getX(m+1),_=a.getX(m+2);r=vi(this,o,e,i,u,c,f,w,M,_),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(o))for(let g=0,y=h.length;g<y;g++){const m=h[g],p=o[m.materialIndex],w=Math.max(m.start,d.start),M=Math.min(l.count,Math.min(m.start+m.count,d.start+d.count));for(let _=w,A=M;_<A;_+=3){const R=_,D=_+1,L=_+2;r=vi(this,p,e,i,u,c,f,R,D,L),r&&(r.faceIndex=Math.floor(_/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const g=Math.max(0,d.start),y=Math.min(l.count,d.start+d.count);for(let m=g,p=y;m<p;m+=3){const w=m,M=m+1,_=m+2;r=vi(this,o,e,i,u,c,f,w,M,_),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}}}function m8(n,e,t,i,r,s,o,a){let l;if(e.side===M3?l=i.intersectTriangle(o,s,r,!0,a):l=i.intersectTriangle(r,s,o,e.side===mt,a),l===null)return null;gi.copy(a),gi.applyMatrix4(n.matrixWorld);const u=t.ray.origin.distanceTo(gi);return u<t.near||u>t.far?null:{distance:u,point:gi.clone(),object:n}}function vi(n,e,t,i,r,s,o,a,l,u){n.getVertexPosition(a,di),n.getVertexPosition(l,pi),n.getVertexPosition(u,mi);const c=m8(n,e,t,i,di,pi,mi,T9);if(c){const f=new i1;Y3.getBarycoord(T9,di,pi,mi,f),r&&(c.uv=Y3.getInterpolatedAttribute(r,a,l,u,f,new S2)),s&&(c.uv1=Y3.getInterpolatedAttribute(s,a,l,u,f,new S2)),o&&(c.normal=Y3.getInterpolatedAttribute(o,a,l,u,f,new i1),c.normal.dot(i.direction)>0&&c.normal.multiplyScalar(-1));const h={a,b:l,c:u,normal:new i1,materialIndex:0};Y3.getNormal(di,pi,mi,h.normal),c.face=h,c.barycoord=f}return c}class zn extends Ge{constructor(e=1,t=1,i=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],u=[],c=[],f=[];let h=0,d=0;g("z","y","x",-1,-1,i,t,e,o,s,0),g("z","y","x",1,-1,i,t,-e,o,s,1),g("x","z","y",1,1,e,i,t,r,o,2),g("x","z","y",1,-1,e,i,-t,r,o,3),g("x","y","z",1,-1,e,t,i,r,s,4),g("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new Fe(u,3)),this.setAttribute("normal",new Fe(c,3)),this.setAttribute("uv",new Fe(f,2));function g(y,m,p,w,M,_,A,R,D,L,T){const b=_/D,U=A/L,B=_/2,X=A/2,K=R/2,a1=D+1,z=L+1;let r1=0,H=0;const y1=new i1;for(let C1=0;C1<z;C1++){const F1=C1*U-X;for(let X1=0;X1<a1;X1++){const u2=X1*b-B;y1[y]=u2*w,y1[m]=F1*M,y1[p]=K,u.push(y1.x,y1.y,y1.z),y1[y]=0,y1[m]=0,y1[p]=R>0?1:-1,c.push(y1.x,y1.y,y1.z),f.push(X1/D),f.push(1-C1/L),r1+=1}}for(let C1=0;C1<L;C1++)for(let F1=0;F1<D;F1++){const X1=h+F1+a1*C1,u2=h+F1+a1*(C1+1),o2=h+(F1+1)+a1*(C1+1),c1=h+(F1+1)+a1*C1;l.push(X1,u2,c1),l.push(u2,o2,c1),H+=6}a.addGroup(d,H,T),d+=H,h+=r1}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function G0(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function u3(n){const e={};for(let t=0;t<n.length;t++){const i=G0(n[t]);for(const r in i)e[r]=i[r]}return e}function _8(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function K6(n){const e=n.getRenderTarget();return e===null?n.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:p2.workingColorSpace}const g8={clone:G0,merge:u3};var v8=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,y8=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class _t extends Hn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=v8,this.fragmentShader=y8,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=G0(e.uniforms),this.uniformsGroups=_8(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class Z6 extends E3{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new V2,this.projectionMatrix=new V2,this.projectionMatrixInverse=new V2,this.coordinateSystem=me,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const nt=new i1,w9=new S2,A9=new S2;class z3 extends Z6{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ho*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(qr*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ho*2*Math.atan(Math.tan(qr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){nt.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(nt.x,nt.y).multiplyScalar(-e/nt.z),nt.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(nt.x,nt.y).multiplyScalar(-e/nt.z)}getViewSize(e,t){return this.getViewBounds(e,w9,A9),t.subVectors(A9,w9)}setViewOffset(e,t,i,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(qr*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,u=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*i/u,r*=o.width/l,i*=o.height/u}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-i,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const m0=-90,_0=1;class x8 extends E3{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new z3(m0,_0,e,t);r.layers=this.layers,this.add(r);const s=new z3(m0,_0,e,t);s.layers=this.layers,this.add(s);const o=new z3(m0,_0,e,t);o.layers=this.layers,this.add(o);const a=new z3(m0,_0,e,t);a.layers=this.layers,this.add(a);const l=new z3(m0,_0,e,t);l.layers=this.layers,this.add(l);const u=new z3(m0,_0,e,t);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,r,s,o,a,l]=t;for(const u of t)this.remove(u);if(e===me)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===tr)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const u of t)this.add(u),u.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,l,u,c]=this.children,f=e.getRenderTarget(),h=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),g=e.xr.enabled;e.xr.enabled=!1;const y=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,r),e.render(t,s),e.setRenderTarget(i,1,r),e.render(t,o),e.setRenderTarget(i,2,r),e.render(t,a),e.setRenderTarget(i,3,r),e.render(t,l),e.setRenderTarget(i,4,r),e.render(t,u),i.texture.generateMipmaps=y,e.setRenderTarget(i,5,r),e.render(t,c),e.setRenderTarget(f,h,d),e.xr.enabled=g,i.texture.needsPMREMUpdate=!0}}class J6 extends S3{constructor(e=[],t=H0,i,r,s,o,a,l,u,c){super(e,t,i,r,s,o,a,l,u,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class M8 extends Yt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new J6(r),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new zn(5,5,5),s=new _t({name:"CubemapFromEquirect",uniforms:G0(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:M3,blending:ht});s.uniforms.tEquirect.value=t;const o=new _e(r,s),a=t.minFilter;return t.minFilter===kt&&(t.minFilter=pe),new x8(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,i=!0,r=!0){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,r);e.setRenderTarget(s)}}class yi extends E3{constructor(){super(),this.isGroup=!0,this.type="Group"}}const S8={type:"move"};class ms{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new yi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new yi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new i1,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new i1),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new yi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new i1,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new i1),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,u=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(u&&e.hand){o=!0;for(const y of e.hand.values()){const m=t.getJointPose(y,i),p=this._getHandJoint(u,y);m!==null&&(p.matrix.fromArray(m.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=m.radius),p.visible=m!==null}const c=u.joints["index-finger-tip"],f=u.joints["thumb-tip"],h=c.position.distanceTo(f.position),d=.02,g=.005;u.inputState.pinching&&h>d+g?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&h<=d-g&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(S8)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),u!==null&&(u.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new yi;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class E8 extends E3{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ve,this.environmentIntensity=1,this.environmentRotation=new Ve,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}const _s=new i1,b8=new i1,T8=new i2;class It{constructor(e=new i1(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=_s.subVectors(i,t).cross(b8.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(_s),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||T8.getNormalMatrix(e),r=this.coplanarPoint(_s).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const At=new Ra,w8=new S2(.5,.5),xi=new i1;class Q6{constructor(e=new It,t=new It,i=new It,r=new It,s=new It,o=new It){this.planes=[e,t,i,r,s,o]}set(e,t,i,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=me,i=!1){const r=this.planes,s=e.elements,o=s[0],a=s[1],l=s[2],u=s[3],c=s[4],f=s[5],h=s[6],d=s[7],g=s[8],y=s[9],m=s[10],p=s[11],w=s[12],M=s[13],_=s[14],A=s[15];if(r[0].setComponents(u-o,d-c,p-g,A-w).normalize(),r[1].setComponents(u+o,d+c,p+g,A+w).normalize(),r[2].setComponents(u+a,d+f,p+y,A+M).normalize(),r[3].setComponents(u-a,d-f,p-y,A-M).normalize(),i)r[4].setComponents(l,h,m,_).normalize(),r[5].setComponents(u-l,d-h,p-m,A-_).normalize();else if(r[4].setComponents(u-l,d-h,p-m,A-_).normalize(),t===me)r[5].setComponents(u+l,d+h,p+m,A+_).normalize();else if(t===tr)r[5].setComponents(l,h,m,_).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),At.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),At.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(At)}intersectsSprite(e){At.center.set(0,0,0);const t=w8.distanceTo(e.center);return At.radius=.7071067811865476+t,At.applyMatrix4(e.matrixWorld),this.intersectsSphere(At)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(xi.x=r.normal.x>0?e.max.x:e.min.x,xi.y=r.normal.y>0?e.max.y:e.min.y,xi.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(xi)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class e5 extends S3{constructor(e,t,i=jt,r,s,o,a=ee,l=ee,u,c=Cn,f=1){if(c!==Cn&&c!==Rn)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const h={width:e,height:t,depth:f};super(h,r,s,o,a,l,c,i,u),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Ca(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Mr extends Ge{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(i),l=Math.floor(r),u=a+1,c=l+1,f=e/a,h=t/l,d=[],g=[],y=[],m=[];for(let p=0;p<c;p++){const w=p*h-o;for(let M=0;M<u;M++){const _=M*f-s;g.push(_,-w,0),y.push(0,0,1),m.push(M/a),m.push(1-p/l)}}for(let p=0;p<l;p++)for(let w=0;w<a;w++){const M=w+u*p,_=w+u*(p+1),A=w+1+u*(p+1),R=w+1+u*p;d.push(M,_,R),d.push(_,A,R)}this.setIndex(d),this.setAttribute("position",new Fe(g,3)),this.setAttribute("normal",new Fe(y,3)),this.setAttribute("uv",new Fe(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Mr(e.width,e.height,e.widthSegments,e.heightSegments)}}class A8 extends Hn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=z6,this.normalScale=new S2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class C8 extends Hn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=km,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class R8 extends Hn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const C9={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class P8{constructor(e,t,i){const r=this;let s=!1,o=0,a=0,l;const u=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.abortController=new AbortController,this.itemStart=function(c){a++,s===!1&&r.onStart!==void 0&&r.onStart(c,o,a),s=!0},this.itemEnd=function(c){o++,r.onProgress!==void 0&&r.onProgress(c,o,a),o===a&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(c){r.onError!==void 0&&r.onError(c)},this.resolveURL=function(c){return l?l(c):c},this.setURLModifier=function(c){return l=c,this},this.addHandler=function(c,f){return u.push(c,f),this},this.removeHandler=function(c){const f=u.indexOf(c);return f!==-1&&u.splice(f,2),this},this.getHandler=function(c){for(let f=0,h=u.length;f<h;f+=2){const d=u[f],g=u[f+1];if(d.global&&(d.lastIndex=0),d.test(c))return g}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const L8=new P8;class Pa{constructor(e){this.manager=e!==void 0?e:L8,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(r,s){i.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}abort(){return this}}Pa.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ae={};class I8 extends Error{constructor(e,t){super(e),this.response=t}}class D8 extends Pa{constructor(e){super(e),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(e,t,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=C9.get(`file:${e}`);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Ae[e]!==void 0){Ae[e].push({onLoad:t,onProgress:i,onError:r});return}Ae[e]=[],Ae[e].push({onLoad:t,onProgress:i,onError:r});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),a=this.mimeType,l=this.responseType;fetch(o).then(u=>{if(u.status===200||u.status===0){if(u.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||u.body===void 0||u.body.getReader===void 0)return u;const c=Ae[e],f=u.body.getReader(),h=u.headers.get("X-File-Size")||u.headers.get("Content-Length"),d=h?parseInt(h):0,g=d!==0;let y=0;const m=new ReadableStream({start(p){w();function w(){f.read().then(({done:M,value:_})=>{if(M)p.close();else{y+=_.byteLength;const A=new ProgressEvent("progress",{lengthComputable:g,loaded:y,total:d});for(let R=0,D=c.length;R<D;R++){const L=c[R];L.onProgress&&L.onProgress(A)}p.enqueue(_),w()}},M=>{p.error(M)})}}});return new Response(m)}else throw new I8(`fetch for "${u.url}" responded with ${u.status}: ${u.statusText}`,u)}).then(u=>{switch(l){case"arraybuffer":return u.arrayBuffer();case"blob":return u.blob();case"document":return u.text().then(c=>new DOMParser().parseFromString(c,a));case"json":return u.json();default:if(a==="")return u.text();{const f=/charset="?([^;"\s]*)"?/i.exec(a),h=f&&f[1]?f[1].toLowerCase():void 0,d=new TextDecoder(h);return u.arrayBuffer().then(g=>d.decode(g))}}}).then(u=>{C9.add(`file:${e}`,u);const c=Ae[e];delete Ae[e];for(let f=0,h=c.length;f<h;f++){const d=c[f];d.onLoad&&d.onLoad(u)}}).catch(u=>{const c=Ae[e];if(c===void 0)throw this.manager.itemError(e),u;delete Ae[e];for(let f=0,h=c.length;f<h;f++){const d=c[f];d.onError&&d.onError(u)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class U8 extends E3{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new M2(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class O8 extends Z6{constructor(e=-1,t=1,i=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,o=i+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=u*this.view.offsetX,o=s+u*this.view.width,a-=c*this.view.offsetY,l=a-c*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class sM extends U8{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class F8 extends z3{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}function R9(n,e,t,i){const r=N8(i);switch(t){case F6:return n*e;case B6:return n*e/r.components*r.byteLength;case Ta:return n*e/r.components*r.byteLength;case k6:return n*e*2/r.components*r.byteLength;case wa:return n*e*2/r.components*r.byteLength;case N6:return n*e*3/r.components*r.byteLength;case J3:return n*e*4/r.components*r.byteLength;case Aa:return n*e*4/r.components*r.byteLength;case Ri:case Pi:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case Li:case Ii:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case mo:case go:return Math.max(n,16)*Math.max(e,8)/4;case po:case _o:return Math.max(n,8)*Math.max(e,8)/2;case vo:case yo:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case xo:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case Mo:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case So:return Math.floor((n+4)/5)*Math.floor((e+3)/4)*16;case Eo:return Math.floor((n+4)/5)*Math.floor((e+4)/5)*16;case bo:return Math.floor((n+5)/6)*Math.floor((e+4)/5)*16;case To:return Math.floor((n+5)/6)*Math.floor((e+5)/6)*16;case wo:return Math.floor((n+7)/8)*Math.floor((e+4)/5)*16;case Ao:return Math.floor((n+7)/8)*Math.floor((e+5)/6)*16;case Co:return Math.floor((n+7)/8)*Math.floor((e+7)/8)*16;case Ro:return Math.floor((n+9)/10)*Math.floor((e+4)/5)*16;case Po:return Math.floor((n+9)/10)*Math.floor((e+5)/6)*16;case Lo:return Math.floor((n+9)/10)*Math.floor((e+7)/8)*16;case Io:return Math.floor((n+9)/10)*Math.floor((e+9)/10)*16;case Do:return Math.floor((n+11)/12)*Math.floor((e+9)/10)*16;case Uo:return Math.floor((n+11)/12)*Math.floor((e+11)/12)*16;case Di:case Oo:case Fo:return Math.ceil(n/4)*Math.ceil(e/4)*16;case H6:case No:return Math.ceil(n/4)*Math.ceil(e/4)*8;case Bo:case ko:return Math.ceil(n/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function N8(n){switch(n){case ze:case D6:return{byteLength:1,components:1};case wn:case U6:case Fn:return{byteLength:2,components:1};case Ea:case ba:return{byteLength:2,components:4};case jt:case Sa:case Ue:return{byteLength:4,components:1};case O6:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${n}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ma}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ma);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function t5(){let n=null,e=!1,t=null,i=null;function r(s,o){t(s,o),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function B8(n){const e=new WeakMap;function t(a,l){const u=a.array,c=a.usage,f=u.byteLength,h=n.createBuffer();n.bindBuffer(l,h),n.bufferData(l,u,c),a.onUploadCallback();let d;if(u instanceof Float32Array)d=n.FLOAT;else if(typeof Float16Array<"u"&&u instanceof Float16Array)d=n.HALF_FLOAT;else if(u instanceof Uint16Array)a.isFloat16BufferAttribute?d=n.HALF_FLOAT:d=n.UNSIGNED_SHORT;else if(u instanceof Int16Array)d=n.SHORT;else if(u instanceof Uint32Array)d=n.UNSIGNED_INT;else if(u instanceof Int32Array)d=n.INT;else if(u instanceof Int8Array)d=n.BYTE;else if(u instanceof Uint8Array)d=n.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)d=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:h,type:d,bytesPerElement:u.BYTES_PER_ELEMENT,version:a.version,size:f}}function i(a,l,u){const c=l.array,f=l.updateRanges;if(n.bindBuffer(u,a),f.length===0)n.bufferSubData(u,0,c);else{f.sort((d,g)=>d.start-g.start);let h=0;for(let d=1;d<f.length;d++){const g=f[h],y=f[d];y.start<=g.start+g.count+1?g.count=Math.max(g.count,y.start+y.count-g.start):(++h,f[h]=y)}f.length=h+1;for(let d=0,g=f.length;d<g;d++){const y=f[d];n.bufferSubData(u,y.start*c.BYTES_PER_ELEMENT,c,y.start,y.count)}l.clearUpdateRanges()}l.onUploadCallback()}function r(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(n.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const c=e.get(a);(!c||c.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const u=e.get(a);if(u===void 0)e.set(a,t(a,l));else if(u.version<a.version){if(u.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(u.buffer,a,l),u.version=a.version}}return{get:r,remove:s,update:o}}var k8=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,H8=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,z8=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,V8=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,G8=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,W8=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,X8=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,$8=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,q8=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,j8=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,Y8=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,K8=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Z8=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,J8=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Q8=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,e_=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,t_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,n_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,i_=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,r_=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,s_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,o_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,a_=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,l_=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,c_=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,u_=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,f_=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,h_=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,d_=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,p_=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,m_="gl_FragColor = linearToOutputTexel( gl_FragColor );",__=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,g_=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,v_=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,y_=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,x_=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,M_=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,S_=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,E_=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,b_=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,T_=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,w_=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,A_=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,C_=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,R_=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,P_=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,L_=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,I_=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,D_=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,U_=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,O_=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,F_=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,N_=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,B_=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,k_=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,H_=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,z_=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,V_=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,G_=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,W_=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,X_=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,$_=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,q_=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,j_=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Y_=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,K_=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Z_=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,J_=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Q_=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,eg=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,tg=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,ng=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,ig=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,rg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,sg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,og=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,ag=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,lg=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,cg=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,ug=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,fg=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,hg=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,dg=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,pg=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,mg=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,_g=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,gg=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,vg=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,yg=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,xg=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSEDEPTHBUF
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSEDEPTHBUF
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare , distribution.x );
		#endif
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,Mg=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Sg=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Eg=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,bg=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Tg=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,wg=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Ag=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Cg=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Rg=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Pg=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Lg=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Ig=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Dg=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Ug=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Og=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Fg=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Ng=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Bg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,kg=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Hg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,zg=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Vg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Gg=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Wg=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Xg=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSEDEPTHBUF
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,$g=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,qg=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,jg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Yg=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Kg=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Zg=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Jg=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Qg=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ev=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tv=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nv=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,iv=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rv=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,sv=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,ov=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,av=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lv=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,cv=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uv=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fv=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hv=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,dv=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,pv=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mv=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,_v=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,gv=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,r2={alphahash_fragment:k8,alphahash_pars_fragment:H8,alphamap_fragment:z8,alphamap_pars_fragment:V8,alphatest_fragment:G8,alphatest_pars_fragment:W8,aomap_fragment:X8,aomap_pars_fragment:$8,batching_pars_vertex:q8,batching_vertex:j8,begin_vertex:Y8,beginnormal_vertex:K8,bsdfs:Z8,iridescence_fragment:J8,bumpmap_pars_fragment:Q8,clipping_planes_fragment:e_,clipping_planes_pars_fragment:t_,clipping_planes_pars_vertex:n_,clipping_planes_vertex:i_,color_fragment:r_,color_pars_fragment:s_,color_pars_vertex:o_,color_vertex:a_,common:l_,cube_uv_reflection_fragment:c_,defaultnormal_vertex:u_,displacementmap_pars_vertex:f_,displacementmap_vertex:h_,emissivemap_fragment:d_,emissivemap_pars_fragment:p_,colorspace_fragment:m_,colorspace_pars_fragment:__,envmap_fragment:g_,envmap_common_pars_fragment:v_,envmap_pars_fragment:y_,envmap_pars_vertex:x_,envmap_physical_pars_fragment:L_,envmap_vertex:M_,fog_vertex:S_,fog_pars_vertex:E_,fog_fragment:b_,fog_pars_fragment:T_,gradientmap_pars_fragment:w_,lightmap_pars_fragment:A_,lights_lambert_fragment:C_,lights_lambert_pars_fragment:R_,lights_pars_begin:P_,lights_toon_fragment:I_,lights_toon_pars_fragment:D_,lights_phong_fragment:U_,lights_phong_pars_fragment:O_,lights_physical_fragment:F_,lights_physical_pars_fragment:N_,lights_fragment_begin:B_,lights_fragment_maps:k_,lights_fragment_end:H_,logdepthbuf_fragment:z_,logdepthbuf_pars_fragment:V_,logdepthbuf_pars_vertex:G_,logdepthbuf_vertex:W_,map_fragment:X_,map_pars_fragment:$_,map_particle_fragment:q_,map_particle_pars_fragment:j_,metalnessmap_fragment:Y_,metalnessmap_pars_fragment:K_,morphinstance_vertex:Z_,morphcolor_vertex:J_,morphnormal_vertex:Q_,morphtarget_pars_vertex:eg,morphtarget_vertex:tg,normal_fragment_begin:ng,normal_fragment_maps:ig,normal_pars_fragment:rg,normal_pars_vertex:sg,normal_vertex:og,normalmap_pars_fragment:ag,clearcoat_normal_fragment_begin:lg,clearcoat_normal_fragment_maps:cg,clearcoat_pars_fragment:ug,iridescence_pars_fragment:fg,opaque_fragment:hg,packing:dg,premultiplied_alpha_fragment:pg,project_vertex:mg,dithering_fragment:_g,dithering_pars_fragment:gg,roughnessmap_fragment:vg,roughnessmap_pars_fragment:yg,shadowmap_pars_fragment:xg,shadowmap_pars_vertex:Mg,shadowmap_vertex:Sg,shadowmask_pars_fragment:Eg,skinbase_vertex:bg,skinning_pars_vertex:Tg,skinning_vertex:wg,skinnormal_vertex:Ag,specularmap_fragment:Cg,specularmap_pars_fragment:Rg,tonemapping_fragment:Pg,tonemapping_pars_fragment:Lg,transmission_fragment:Ig,transmission_pars_fragment:Dg,uv_pars_fragment:Ug,uv_pars_vertex:Og,uv_vertex:Fg,worldpos_vertex:Ng,background_vert:Bg,background_frag:kg,backgroundCube_vert:Hg,backgroundCube_frag:zg,cube_vert:Vg,cube_frag:Gg,depth_vert:Wg,depth_frag:Xg,distanceRGBA_vert:$g,distanceRGBA_frag:qg,equirect_vert:jg,equirect_frag:Yg,linedashed_vert:Kg,linedashed_frag:Zg,meshbasic_vert:Jg,meshbasic_frag:Qg,meshlambert_vert:ev,meshlambert_frag:tv,meshmatcap_vert:nv,meshmatcap_frag:iv,meshnormal_vert:rv,meshnormal_frag:sv,meshphong_vert:ov,meshphong_frag:av,meshphysical_vert:lv,meshphysical_frag:cv,meshtoon_vert:uv,meshtoon_frag:fv,points_vert:hv,points_frag:dv,shadow_vert:pv,shadow_frag:mv,sprite_vert:_v,sprite_frag:gv},L1={common:{diffuse:{value:new M2(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new i2},alphaMap:{value:null},alphaMapTransform:{value:new i2},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new i2}},envmap:{envMap:{value:null},envMapRotation:{value:new i2},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new i2}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new i2}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new i2},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new i2},normalScale:{value:new S2(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new i2},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new i2}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new i2}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new i2}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new M2(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new M2(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new i2},alphaTest:{value:0},uvTransform:{value:new i2}},sprite:{diffuse:{value:new M2(16777215)},opacity:{value:1},center:{value:new S2(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new i2},alphaMap:{value:null},alphaMapTransform:{value:new i2},alphaTest:{value:0}}},he={basic:{uniforms:u3([L1.common,L1.specularmap,L1.envmap,L1.aomap,L1.lightmap,L1.fog]),vertexShader:r2.meshbasic_vert,fragmentShader:r2.meshbasic_frag},lambert:{uniforms:u3([L1.common,L1.specularmap,L1.envmap,L1.aomap,L1.lightmap,L1.emissivemap,L1.bumpmap,L1.normalmap,L1.displacementmap,L1.fog,L1.lights,{emissive:{value:new M2(0)}}]),vertexShader:r2.meshlambert_vert,fragmentShader:r2.meshlambert_frag},phong:{uniforms:u3([L1.common,L1.specularmap,L1.envmap,L1.aomap,L1.lightmap,L1.emissivemap,L1.bumpmap,L1.normalmap,L1.displacementmap,L1.fog,L1.lights,{emissive:{value:new M2(0)},specular:{value:new M2(1118481)},shininess:{value:30}}]),vertexShader:r2.meshphong_vert,fragmentShader:r2.meshphong_frag},standard:{uniforms:u3([L1.common,L1.envmap,L1.aomap,L1.lightmap,L1.emissivemap,L1.bumpmap,L1.normalmap,L1.displacementmap,L1.roughnessmap,L1.metalnessmap,L1.fog,L1.lights,{emissive:{value:new M2(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:r2.meshphysical_vert,fragmentShader:r2.meshphysical_frag},toon:{uniforms:u3([L1.common,L1.aomap,L1.lightmap,L1.emissivemap,L1.bumpmap,L1.normalmap,L1.displacementmap,L1.gradientmap,L1.fog,L1.lights,{emissive:{value:new M2(0)}}]),vertexShader:r2.meshtoon_vert,fragmentShader:r2.meshtoon_frag},matcap:{uniforms:u3([L1.common,L1.bumpmap,L1.normalmap,L1.displacementmap,L1.fog,{matcap:{value:null}}]),vertexShader:r2.meshmatcap_vert,fragmentShader:r2.meshmatcap_frag},points:{uniforms:u3([L1.points,L1.fog]),vertexShader:r2.points_vert,fragmentShader:r2.points_frag},dashed:{uniforms:u3([L1.common,L1.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:r2.linedashed_vert,fragmentShader:r2.linedashed_frag},depth:{uniforms:u3([L1.common,L1.displacementmap]),vertexShader:r2.depth_vert,fragmentShader:r2.depth_frag},normal:{uniforms:u3([L1.common,L1.bumpmap,L1.normalmap,L1.displacementmap,{opacity:{value:1}}]),vertexShader:r2.meshnormal_vert,fragmentShader:r2.meshnormal_frag},sprite:{uniforms:u3([L1.sprite,L1.fog]),vertexShader:r2.sprite_vert,fragmentShader:r2.sprite_frag},background:{uniforms:{uvTransform:{value:new i2},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:r2.background_vert,fragmentShader:r2.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new i2}},vertexShader:r2.backgroundCube_vert,fragmentShader:r2.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:r2.cube_vert,fragmentShader:r2.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:r2.equirect_vert,fragmentShader:r2.equirect_frag},distanceRGBA:{uniforms:u3([L1.common,L1.displacementmap,{referencePosition:{value:new i1},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:r2.distanceRGBA_vert,fragmentShader:r2.distanceRGBA_frag},shadow:{uniforms:u3([L1.lights,L1.fog,{color:{value:new M2(0)},opacity:{value:1}}]),vertexShader:r2.shadow_vert,fragmentShader:r2.shadow_frag}};he.physical={uniforms:u3([he.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new i2},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new i2},clearcoatNormalScale:{value:new S2(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new i2},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new i2},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new i2},sheen:{value:0},sheenColor:{value:new M2(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new i2},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new i2},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new i2},transmissionSamplerSize:{value:new S2},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new i2},attenuationDistance:{value:0},attenuationColor:{value:new M2(0)},specularColor:{value:new M2(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new i2},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new i2},anisotropyVector:{value:new S2},anisotropyMap:{value:null},anisotropyMapTransform:{value:new i2}}]),vertexShader:r2.meshphysical_vert,fragmentShader:r2.meshphysical_frag};const Mi={r:0,b:0,g:0},Ct=new Ve,vv=new V2;function yv(n,e,t,i,r,s,o){const a=new M2(0);let l=s===!0?0:1,u,c,f=null,h=0,d=null;function g(M){let _=M.isScene===!0?M.background:null;return _&&_.isTexture&&(_=(M.backgroundBlurriness>0?t:e).get(_)),_}function y(M){let _=!1;const A=g(M);A===null?p(a,l):A&&A.isColor&&(p(A,1),_=!0);const R=n.xr.getEnvironmentBlendMode();R==="additive"?i.buffers.color.setClear(0,0,0,1,o):R==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(n.autoClear||_)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil))}function m(M,_){const A=g(_);A&&(A.isCubeTexture||A.mapping===xr)?(c===void 0&&(c=new _e(new zn(1,1,1),new _t({name:"BackgroundCubeMaterial",uniforms:G0(he.backgroundCube.uniforms),vertexShader:he.backgroundCube.vertexShader,fragmentShader:he.backgroundCube.fragmentShader,side:M3,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(R,D,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(c)),Ct.copy(_.backgroundRotation),Ct.x*=-1,Ct.y*=-1,Ct.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&(Ct.y*=-1,Ct.z*=-1),c.material.uniforms.envMap.value=A,c.material.uniforms.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,c.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.uniforms.backgroundRotation.value.setFromMatrix4(vv.makeRotationFromEuler(Ct)),c.material.toneMapped=p2.getTransfer(A.colorSpace)!==b2,(f!==A||h!==A.version||d!==n.toneMapping)&&(c.material.needsUpdate=!0,f=A,h=A.version,d=n.toneMapping),c.layers.enableAll(),M.unshift(c,c.geometry,c.material,0,0,null)):A&&A.isTexture&&(u===void 0&&(u=new _e(new Mr(2,2),new _t({name:"BackgroundMaterial",uniforms:G0(he.background.uniforms),vertexShader:he.background.vertexShader,fragmentShader:he.background.fragmentShader,side:mt,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(u)),u.material.uniforms.t2D.value=A,u.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,u.material.toneMapped=p2.getTransfer(A.colorSpace)!==b2,A.matrixAutoUpdate===!0&&A.updateMatrix(),u.material.uniforms.uvTransform.value.copy(A.matrix),(f!==A||h!==A.version||d!==n.toneMapping)&&(u.material.needsUpdate=!0,f=A,h=A.version,d=n.toneMapping),u.layers.enableAll(),M.unshift(u,u.geometry,u.material,0,0,null))}function p(M,_){M.getRGB(Mi,K6(n)),i.buffers.color.setClear(Mi.r,Mi.g,Mi.b,_,o)}function w(){c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0),u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0)}return{getClearColor:function(){return a},setClearColor:function(M,_=1){a.set(M),l=_,p(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(M){l=M,p(a,l)},render:y,addToRenderList:m,dispose:w}}function xv(n,e){const t=n.getParameter(n.MAX_VERTEX_ATTRIBS),i={},r=h(null);let s=r,o=!1;function a(b,U,B,X,K){let a1=!1;const z=f(X,B,U);s!==z&&(s=z,u(s.object)),a1=d(b,X,B,K),a1&&g(b,X,B,K),K!==null&&e.update(K,n.ELEMENT_ARRAY_BUFFER),(a1||o)&&(o=!1,_(b,U,B,X),K!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.get(K).buffer))}function l(){return n.createVertexArray()}function u(b){return n.bindVertexArray(b)}function c(b){return n.deleteVertexArray(b)}function f(b,U,B){const X=B.wireframe===!0;let K=i[b.id];K===void 0&&(K={},i[b.id]=K);let a1=K[U.id];a1===void 0&&(a1={},K[U.id]=a1);let z=a1[X];return z===void 0&&(z=h(l()),a1[X]=z),z}function h(b){const U=[],B=[],X=[];for(let K=0;K<t;K++)U[K]=0,B[K]=0,X[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:U,enabledAttributes:B,attributeDivisors:X,object:b,attributes:{},index:null}}function d(b,U,B,X){const K=s.attributes,a1=U.attributes;let z=0;const r1=B.getAttributes();for(const H in r1)if(r1[H].location>=0){const C1=K[H];let F1=a1[H];if(F1===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(F1=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(F1=b.instanceColor)),C1===void 0||C1.attribute!==F1||F1&&C1.data!==F1.data)return!0;z++}return s.attributesNum!==z||s.index!==X}function g(b,U,B,X){const K={},a1=U.attributes;let z=0;const r1=B.getAttributes();for(const H in r1)if(r1[H].location>=0){let C1=a1[H];C1===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(C1=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(C1=b.instanceColor));const F1={};F1.attribute=C1,C1&&C1.data&&(F1.data=C1.data),K[H]=F1,z++}s.attributes=K,s.attributesNum=z,s.index=X}function y(){const b=s.newAttributes;for(let U=0,B=b.length;U<B;U++)b[U]=0}function m(b){p(b,0)}function p(b,U){const B=s.newAttributes,X=s.enabledAttributes,K=s.attributeDivisors;B[b]=1,X[b]===0&&(n.enableVertexAttribArray(b),X[b]=1),K[b]!==U&&(n.vertexAttribDivisor(b,U),K[b]=U)}function w(){const b=s.newAttributes,U=s.enabledAttributes;for(let B=0,X=U.length;B<X;B++)U[B]!==b[B]&&(n.disableVertexAttribArray(B),U[B]=0)}function M(b,U,B,X,K,a1,z){z===!0?n.vertexAttribIPointer(b,U,B,K,a1):n.vertexAttribPointer(b,U,B,X,K,a1)}function _(b,U,B,X){y();const K=X.attributes,a1=B.getAttributes(),z=U.defaultAttributeValues;for(const r1 in a1){const H=a1[r1];if(H.location>=0){let y1=K[r1];if(y1===void 0&&(r1==="instanceMatrix"&&b.instanceMatrix&&(y1=b.instanceMatrix),r1==="instanceColor"&&b.instanceColor&&(y1=b.instanceColor)),y1!==void 0){const C1=y1.normalized,F1=y1.itemSize,X1=e.get(y1);if(X1===void 0)continue;const u2=X1.buffer,o2=X1.type,c1=X1.bytesPerElement,b1=o2===n.INT||o2===n.UNSIGNED_INT||y1.gpuType===Sa;if(y1.isInterleavedBufferAttribute){const V=y1.data,f1=V.stride,u1=y1.offset;if(V.isInstancedInterleavedBuffer){for(let g1=0;g1<H.locationSize;g1++)p(H.location+g1,V.meshPerAttribute);b.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=V.meshPerAttribute*V.count)}else for(let g1=0;g1<H.locationSize;g1++)m(H.location+g1);n.bindBuffer(n.ARRAY_BUFFER,u2);for(let g1=0;g1<H.locationSize;g1++)M(H.location+g1,F1/H.locationSize,o2,C1,f1*c1,(u1+F1/H.locationSize*g1)*c1,b1)}else{if(y1.isInstancedBufferAttribute){for(let V=0;V<H.locationSize;V++)p(H.location+V,y1.meshPerAttribute);b.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=y1.meshPerAttribute*y1.count)}else for(let V=0;V<H.locationSize;V++)m(H.location+V);n.bindBuffer(n.ARRAY_BUFFER,u2);for(let V=0;V<H.locationSize;V++)M(H.location+V,F1/H.locationSize,o2,C1,F1*c1,F1/H.locationSize*V*c1,b1)}}else if(z!==void 0){const C1=z[r1];if(C1!==void 0)switch(C1.length){case 2:n.vertexAttrib2fv(H.location,C1);break;case 3:n.vertexAttrib3fv(H.location,C1);break;case 4:n.vertexAttrib4fv(H.location,C1);break;default:n.vertexAttrib1fv(H.location,C1)}}}}w()}function A(){L();for(const b in i){const U=i[b];for(const B in U){const X=U[B];for(const K in X)c(X[K].object),delete X[K];delete U[B]}delete i[b]}}function R(b){if(i[b.id]===void 0)return;const U=i[b.id];for(const B in U){const X=U[B];for(const K in X)c(X[K].object),delete X[K];delete U[B]}delete i[b.id]}function D(b){for(const U in i){const B=i[U];if(B[b.id]===void 0)continue;const X=B[b.id];for(const K in X)c(X[K].object),delete X[K];delete B[b.id]}}function L(){T(),o=!0,s!==r&&(s=r,u(s.object))}function T(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:a,reset:L,resetDefaultState:T,dispose:A,releaseStatesOfGeometry:R,releaseStatesOfProgram:D,initAttributes:y,enableAttribute:m,disableUnusedAttributes:w}}function Mv(n,e,t){let i;function r(u){i=u}function s(u,c){n.drawArrays(i,u,c),t.update(c,i,1)}function o(u,c,f){f!==0&&(n.drawArraysInstanced(i,u,c,f),t.update(c,i,f))}function a(u,c,f){if(f===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,u,0,c,0,f);let d=0;for(let g=0;g<f;g++)d+=c[g];t.update(d,i,1)}function l(u,c,f,h){if(f===0)return;const d=e.get("WEBGL_multi_draw");if(d===null)for(let g=0;g<u.length;g++)o(u[g],c[g],h[g]);else{d.multiDrawArraysInstancedWEBGL(i,u,0,c,0,h,0,f);let g=0;for(let y=0;y<f;y++)g+=c[y]*h[y];t.update(g,i,1)}}this.setMode=r,this.render=s,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function Sv(n,e,t,i){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const D=e.get("EXT_texture_filter_anisotropic");r=n.getParameter(D.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function o(D){return!(D!==J3&&i.convert(D)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(D){const L=D===Fn&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(D!==ze&&i.convert(D)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_TYPE)&&D!==Ue&&!L)}function l(D){if(D==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";D="mediump"}return D==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let u=t.precision!==void 0?t.precision:"highp";const c=l(u);c!==u&&(console.warn("THREE.WebGLRenderer:",u,"not supported, using",c,"instead."),u=c);const f=t.logarithmicDepthBuffer===!0,h=t.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),d=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),g=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),y=n.getParameter(n.MAX_TEXTURE_SIZE),m=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),p=n.getParameter(n.MAX_VERTEX_ATTRIBS),w=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),M=n.getParameter(n.MAX_VARYING_VECTORS),_=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),A=g>0,R=n.getParameter(n.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:u,logarithmicDepthBuffer:f,reversedDepthBuffer:h,maxTextures:d,maxVertexTextures:g,maxTextureSize:y,maxCubemapSize:m,maxAttributes:p,maxVertexUniforms:w,maxVaryings:M,maxFragmentUniforms:_,vertexTextures:A,maxSamples:R}}function Ev(n){const e=this;let t=null,i=0,r=!1,s=!1;const o=new It,a=new i2,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(f,h){const d=f.length!==0||h||i!==0||r;return r=h,i=f.length,d},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(f,h){t=c(f,h,0)},this.setState=function(f,h,d){const g=f.clippingPlanes,y=f.clipIntersection,m=f.clipShadows,p=n.get(f);if(!r||g===null||g.length===0||s&&!m)s?c(null):u();else{const w=s?0:i,M=w*4;let _=p.clippingState||null;l.value=_,_=c(g,h,M,d);for(let A=0;A!==M;++A)_[A]=t[A];p.clippingState=_,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=w}};function u(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function c(f,h,d,g){const y=f!==null?f.length:0;let m=null;if(y!==0){if(m=l.value,g!==!0||m===null){const p=d+y*4,w=h.matrixWorldInverse;a.getNormalMatrix(w),(m===null||m.length<p)&&(m=new Float32Array(p));for(let M=0,_=d;M!==y;++M,_+=4)o.copy(f[M]).applyMatrix4(w,a),o.normal.toArray(m,_),m[_+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=y,e.numIntersection=0,m}}function bv(n){let e=new WeakMap;function t(o,a){return a===co?o.mapping=H0:a===uo&&(o.mapping=z0),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===co||a===uo)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const u=new M8(l.height);return u.fromEquirectangularTexture(n,o),e.set(o,u),o.addEventListener("dispose",r),t(u.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}const M0=4,P9=[.125,.215,.35,.446,.526,.582],Ft=20,gs=new O8,L9=new M2;let vs=null,ys=0,xs=0,Ms=!1;const Dt=(1+Math.sqrt(5))/2,g0=1/Dt,I9=[new i1(-Dt,g0,0),new i1(Dt,g0,0),new i1(-g0,0,Dt),new i1(g0,0,Dt),new i1(0,Dt,-g0),new i1(0,Dt,g0),new i1(-1,1,-1),new i1(1,1,-1),new i1(-1,1,1),new i1(1,1,1)],Tv=new i1;class D9{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100,s={}){const{size:o=256,position:a=Tv}=s;vs=this._renderer.getRenderTarget(),ys=this._renderer.getActiveCubeFace(),xs=this._renderer.getActiveMipmapLevel(),Ms=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,i,r,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=F9(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=O9(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(vs,ys,xs),this._renderer.xr.enabled=Ms,e.scissorTest=!1,Si(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===H0||e.mapping===z0?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),vs=this._renderer.getRenderTarget(),ys=this._renderer.getActiveCubeFace(),xs=this._renderer.getActiveMipmapLevel(),Ms=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:pe,minFilter:pe,generateMipmaps:!1,type:Fn,format:J3,colorSpace:V0,depthBuffer:!1},r=U9(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=U9(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=wv(s)),this._blurMaterial=Av(s,e,t)}return r}_compileMaterial(e){const t=new _e(this._lodPlanes[0],e);this._renderer.compile(t,gs)}_sceneToCubeUV(e,t,i,r,s){const l=new z3(90,1,t,i),u=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],f=this._renderer,h=f.autoClear,d=f.toneMapping;f.getClearColor(L9),f.toneMapping=dt,f.autoClear=!1,f.state.buffers.depth.getReversed()&&(f.setRenderTarget(r),f.clearDepth(),f.setRenderTarget(null));const y=new q6({name:"PMREM.Background",side:M3,depthWrite:!1,depthTest:!1}),m=new _e(new zn,y);let p=!1;const w=e.background;w?w.isColor&&(y.color.copy(w),e.background=null,p=!0):(y.color.copy(L9),p=!0);for(let M=0;M<6;M++){const _=M%3;_===0?(l.up.set(0,u[M],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+c[M],s.y,s.z)):_===1?(l.up.set(0,0,u[M]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+c[M],s.z)):(l.up.set(0,u[M],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+c[M]));const A=this._cubeSize;Si(r,_*A,M>2?A:0,A,A),f.setRenderTarget(r),p&&f.render(m,l),f.render(e,l)}m.geometry.dispose(),m.material.dispose(),f.toneMapping=d,f.autoClear=h,e.background=w}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===H0||e.mapping===z0;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=F9()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=O9());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new _e(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Si(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,gs)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=I9[(r-s-1)%I9.length];this._blur(e,s-1,s,o,a)}t.autoClear=i}_blur(e,t,i,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,r,"latitudinal",s),this._halfBlur(o,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,o,a){const l=this._renderer,u=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,f=new _e(this._lodPlanes[r],u),h=u.uniforms,d=this._sizeLods[i]-1,g=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*Ft-1),y=s/g,m=isFinite(s)?1+Math.floor(c*y):Ft;m>Ft&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Ft}`);const p=[];let w=0;for(let D=0;D<Ft;++D){const L=D/y,T=Math.exp(-L*L/2);p.push(T),D===0?w+=T:D<m&&(w+=2*T)}for(let D=0;D<p.length;D++)p[D]=p[D]/w;h.envMap.value=e.texture,h.samples.value=m,h.weights.value=p,h.latitudinal.value=o==="latitudinal",a&&(h.poleAxis.value=a);const{_lodMax:M}=this;h.dTheta.value=g,h.mipInt.value=M-i;const _=this._sizeLods[r],A=3*_*(r>M-M0?r-M+M0:0),R=4*(this._cubeSize-_);Si(t,A,R,3*_,2*_),l.setRenderTarget(t),l.render(f,gs)}}function wv(n){const e=[],t=[],i=[];let r=n;const s=n-M0+1+P9.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>n-M0?l=P9[o-n+M0-1]:o===0&&(l=0),i.push(l);const u=1/(a-2),c=-u,f=1+u,h=[c,c,f,c,f,f,c,c,f,f,c,f],d=6,g=6,y=3,m=2,p=1,w=new Float32Array(y*g*d),M=new Float32Array(m*g*d),_=new Float32Array(p*g*d);for(let R=0;R<d;R++){const D=R%3*2/3-1,L=R>2?0:-1,T=[D,L,0,D+2/3,L,0,D+2/3,L+1,0,D,L,0,D+2/3,L+1,0,D,L+1,0];w.set(T,y*g*R),M.set(h,m*g*R);const b=[R,R,R,R,R,R];_.set(b,p*g*R)}const A=new Ge;A.setAttribute("position",new D3(w,y)),A.setAttribute("uv",new D3(M,m)),A.setAttribute("faceIndex",new D3(_,p)),e.push(A),r>M0&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function U9(n,e,t){const i=new Yt(n,e,t);return i.texture.mapping=xr,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Si(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function Av(n,e,t){const i=new Float32Array(Ft),r=new i1(0,1,0);return new _t({name:"SphericalGaussianBlur",defines:{n:Ft,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:La(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ht,depthTest:!1,depthWrite:!1})}function O9(){return new _t({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:La(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ht,depthTest:!1,depthWrite:!1})}function F9(){return new _t({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:La(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ht,depthTest:!1,depthWrite:!1})}function La(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Cv(n){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,u=l===co||l===uo,c=l===H0||l===z0;if(u||c){let f=e.get(a);const h=f!==void 0?f.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==h)return t===null&&(t=new D9(n)),f=u?t.fromEquirectangular(a,f):t.fromCubemap(a,f),f.texture.pmremVersion=a.pmremVersion,e.set(a,f),f.texture;if(f!==void 0)return f.texture;{const d=a.image;return u&&d&&d.height>0||c&&d&&r(d)?(t===null&&(t=new D9(n)),f=u?t.fromEquirectangular(a):t.fromCubemap(a),f.texture.pmremVersion=a.pmremVersion,e.set(a,f),a.addEventListener("dispose",s),f.texture):null}}}return a}function r(a){let l=0;const u=6;for(let c=0;c<u;c++)a[c]!==void 0&&l++;return l===u}function s(a){const l=a.target;l.removeEventListener("dispose",s);const u=e.get(l);u!==void 0&&(e.delete(l),u.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function Rv(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const r=t(i);return r===null&&P0("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function Pv(n,e,t,i){const r={},s=new WeakMap;function o(f){const h=f.target;h.index!==null&&e.remove(h.index);for(const g in h.attributes)e.remove(h.attributes[g]);h.removeEventListener("dispose",o),delete r[h.id];const d=s.get(h);d&&(e.remove(d),s.delete(h)),i.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,t.memory.geometries--}function a(f,h){return r[h.id]===!0||(h.addEventListener("dispose",o),r[h.id]=!0,t.memory.geometries++),h}function l(f){const h=f.attributes;for(const d in h)e.update(h[d],n.ARRAY_BUFFER)}function u(f){const h=[],d=f.index,g=f.attributes.position;let y=0;if(d!==null){const w=d.array;y=d.version;for(let M=0,_=w.length;M<_;M+=3){const A=w[M+0],R=w[M+1],D=w[M+2];h.push(A,R,R,D,D,A)}}else if(g!==void 0){const w=g.array;y=g.version;for(let M=0,_=w.length/3-1;M<_;M+=3){const A=M+0,R=M+1,D=M+2;h.push(A,R,R,D,D,A)}}else return;const m=new(G6(h)?Y6:j6)(h,1);m.version=y;const p=s.get(f);p&&e.remove(p),s.set(f,m)}function c(f){const h=s.get(f);if(h){const d=f.index;d!==null&&h.version<d.version&&u(f)}else u(f);return s.get(f)}return{get:a,update:l,getWireframeAttribute:c}}function Lv(n,e,t){let i;function r(h){i=h}let s,o;function a(h){s=h.type,o=h.bytesPerElement}function l(h,d){n.drawElements(i,d,s,h*o),t.update(d,i,1)}function u(h,d,g){g!==0&&(n.drawElementsInstanced(i,d,s,h*o,g),t.update(d,i,g))}function c(h,d,g){if(g===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,d,0,s,h,0,g);let m=0;for(let p=0;p<g;p++)m+=d[p];t.update(m,i,1)}function f(h,d,g,y){if(g===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let p=0;p<h.length;p++)u(h[p]/o,d[p],y[p]);else{m.multiDrawElementsInstancedWEBGL(i,d,0,s,h,0,y,0,g);let p=0;for(let w=0;w<g;w++)p+=d[w]*y[w];t.update(p,i,1)}}this.setMode=r,this.setIndex=a,this.render=l,this.renderInstances=u,this.renderMultiDraw=c,this.renderMultiDrawInstances=f}function Iv(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(t.calls++,o){case n.TRIANGLES:t.triangles+=a*(s/3);break;case n.LINES:t.lines+=a*(s/2);break;case n.LINE_STRIP:t.lines+=a*(s-1);break;case n.LINE_LOOP:t.lines+=a*s;break;case n.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function Dv(n,e,t){const i=new WeakMap,r=new N2;function s(o,a,l){const u=o.morphTargetInfluences,c=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,f=c!==void 0?c.length:0;let h=i.get(a);if(h===void 0||h.count!==f){let T=function(){D.dispose(),i.delete(a),a.removeEventListener("dispose",T)};h!==void 0&&h.texture.dispose();const d=a.morphAttributes.position!==void 0,g=a.morphAttributes.normal!==void 0,y=a.morphAttributes.color!==void 0,m=a.morphAttributes.position||[],p=a.morphAttributes.normal||[],w=a.morphAttributes.color||[];let M=0;d===!0&&(M=1),g===!0&&(M=2),y===!0&&(M=3);let _=a.attributes.position.count*M,A=1;_>e.maxTextureSize&&(A=Math.ceil(_/e.maxTextureSize),_=e.maxTextureSize);const R=new Float32Array(_*A*4*f),D=new W6(R,_,A,f);D.type=Ue,D.needsUpdate=!0;const L=M*4;for(let b=0;b<f;b++){const U=m[b],B=p[b],X=w[b],K=_*A*4*b;for(let a1=0;a1<U.count;a1++){const z=a1*L;d===!0&&(r.fromBufferAttribute(U,a1),R[K+z+0]=r.x,R[K+z+1]=r.y,R[K+z+2]=r.z,R[K+z+3]=0),g===!0&&(r.fromBufferAttribute(B,a1),R[K+z+4]=r.x,R[K+z+5]=r.y,R[K+z+6]=r.z,R[K+z+7]=0),y===!0&&(r.fromBufferAttribute(X,a1),R[K+z+8]=r.x,R[K+z+9]=r.y,R[K+z+10]=r.z,R[K+z+11]=X.itemSize===4?r.w:1)}}h={count:f,texture:D,size:new S2(_,A)},i.set(a,h),a.addEventListener("dispose",T)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(n,"morphTexture",o.morphTexture,t);else{let d=0;for(let y=0;y<u.length;y++)d+=u[y];const g=a.morphTargetsRelative?1:1-d;l.getUniforms().setValue(n,"morphTargetBaseInfluence",g),l.getUniforms().setValue(n,"morphTargetInfluences",u)}l.getUniforms().setValue(n,"morphTargetsTexture",h.texture,t),l.getUniforms().setValue(n,"morphTargetsTextureSize",h.size)}return{update:s}}function Uv(n,e,t,i){let r=new WeakMap;function s(l){const u=i.render.frame,c=l.geometry,f=e.get(l,c);if(r.get(f)!==u&&(e.update(f),r.set(f,u)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),r.get(l)!==u&&(t.update(l.instanceMatrix,n.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,n.ARRAY_BUFFER),r.set(l,u))),l.isSkinnedMesh){const h=l.skeleton;r.get(h)!==u&&(h.update(),r.set(h,u))}return f}function o(){r=new WeakMap}function a(l){const u=l.target;u.removeEventListener("dispose",a),t.remove(u.instanceMatrix),u.instanceColor!==null&&t.remove(u.instanceColor)}return{update:s,dispose:o}}const n5=new S3,N9=new e5(1,1),i5=new W6,r5=new i8,s5=new J6,B9=[],k9=[],H9=new Float32Array(16),z9=new Float32Array(9),V9=new Float32Array(4);function q0(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=B9[r];if(s===void 0&&(s=new Float32Array(r),B9[r]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,n[o].toArray(s,a)}return s}function X2(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function $2(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function Sr(n,e){let t=k9[e];t===void 0&&(t=new Int32Array(e),k9[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function Ov(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function Fv(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(X2(t,e))return;n.uniform2fv(this.addr,e),$2(t,e)}}function Nv(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(X2(t,e))return;n.uniform3fv(this.addr,e),$2(t,e)}}function Bv(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(X2(t,e))return;n.uniform4fv(this.addr,e),$2(t,e)}}function kv(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(X2(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),$2(t,e)}else{if(X2(t,i))return;V9.set(i),n.uniformMatrix2fv(this.addr,!1,V9),$2(t,i)}}function Hv(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(X2(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),$2(t,e)}else{if(X2(t,i))return;z9.set(i),n.uniformMatrix3fv(this.addr,!1,z9),$2(t,i)}}function zv(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(X2(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),$2(t,e)}else{if(X2(t,i))return;H9.set(i),n.uniformMatrix4fv(this.addr,!1,H9),$2(t,i)}}function Vv(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function Gv(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(X2(t,e))return;n.uniform2iv(this.addr,e),$2(t,e)}}function Wv(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(X2(t,e))return;n.uniform3iv(this.addr,e),$2(t,e)}}function Xv(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(X2(t,e))return;n.uniform4iv(this.addr,e),$2(t,e)}}function $v(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function qv(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(X2(t,e))return;n.uniform2uiv(this.addr,e),$2(t,e)}}function jv(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(X2(t,e))return;n.uniform3uiv(this.addr,e),$2(t,e)}}function Yv(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(X2(t,e))return;n.uniform4uiv(this.addr,e),$2(t,e)}}function Kv(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r);let s;this.type===n.SAMPLER_2D_SHADOW?(N9.compareFunction=V6,s=N9):s=n5,t.setTexture2D(e||s,r)}function Zv(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||r5,r)}function Jv(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||s5,r)}function Qv(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||i5,r)}function ey(n){switch(n){case 5126:return Ov;case 35664:return Fv;case 35665:return Nv;case 35666:return Bv;case 35674:return kv;case 35675:return Hv;case 35676:return zv;case 5124:case 35670:return Vv;case 35667:case 35671:return Gv;case 35668:case 35672:return Wv;case 35669:case 35673:return Xv;case 5125:return $v;case 36294:return qv;case 36295:return jv;case 36296:return Yv;case 35678:case 36198:case 36298:case 36306:case 35682:return Kv;case 35679:case 36299:case 36307:return Zv;case 35680:case 36300:case 36308:case 36293:return Jv;case 36289:case 36303:case 36311:case 36292:return Qv}}function ty(n,e){n.uniform1fv(this.addr,e)}function ny(n,e){const t=q0(e,this.size,2);n.uniform2fv(this.addr,t)}function iy(n,e){const t=q0(e,this.size,3);n.uniform3fv(this.addr,t)}function ry(n,e){const t=q0(e,this.size,4);n.uniform4fv(this.addr,t)}function sy(n,e){const t=q0(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function oy(n,e){const t=q0(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function ay(n,e){const t=q0(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function ly(n,e){n.uniform1iv(this.addr,e)}function cy(n,e){n.uniform2iv(this.addr,e)}function uy(n,e){n.uniform3iv(this.addr,e)}function fy(n,e){n.uniform4iv(this.addr,e)}function hy(n,e){n.uniform1uiv(this.addr,e)}function dy(n,e){n.uniform2uiv(this.addr,e)}function py(n,e){n.uniform3uiv(this.addr,e)}function my(n,e){n.uniform4uiv(this.addr,e)}function _y(n,e,t){const i=this.cache,r=e.length,s=Sr(t,r);X2(i,s)||(n.uniform1iv(this.addr,s),$2(i,s));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||n5,s[o])}function gy(n,e,t){const i=this.cache,r=e.length,s=Sr(t,r);X2(i,s)||(n.uniform1iv(this.addr,s),$2(i,s));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||r5,s[o])}function vy(n,e,t){const i=this.cache,r=e.length,s=Sr(t,r);X2(i,s)||(n.uniform1iv(this.addr,s),$2(i,s));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||s5,s[o])}function yy(n,e,t){const i=this.cache,r=e.length,s=Sr(t,r);X2(i,s)||(n.uniform1iv(this.addr,s),$2(i,s));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||i5,s[o])}function xy(n){switch(n){case 5126:return ty;case 35664:return ny;case 35665:return iy;case 35666:return ry;case 35674:return sy;case 35675:return oy;case 35676:return ay;case 5124:case 35670:return ly;case 35667:case 35671:return cy;case 35668:case 35672:return uy;case 35669:case 35673:return fy;case 5125:return hy;case 36294:return dy;case 36295:return py;case 36296:return my;case 35678:case 36198:case 36298:case 36306:case 35682:return _y;case 35679:case 36299:case 36307:return gy;case 35680:case 36300:case 36308:case 36293:return vy;case 36289:case 36303:case 36311:case 36292:return yy}}class My{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=ey(t.type)}}class Sy{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=xy(t.type)}}class Ey{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],i)}}}const Ss=/(\w+)(\])?(\[|\.)?/g;function G9(n,e){n.seq.push(e),n.map[e.id]=e}function by(n,e,t){const i=n.name,r=i.length;for(Ss.lastIndex=0;;){const s=Ss.exec(i),o=Ss.lastIndex;let a=s[1];const l=s[2]==="]",u=s[3];if(l&&(a=a|0),u===void 0||u==="["&&o+2===r){G9(t,u===void 0?new My(a,n,e):new Sy(a,n,e));break}else{let f=t.map[a];f===void 0&&(f=new Ey(a),G9(t,f)),t=f}}}class Ui{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);by(s,o,this)}}setValue(e,t,i,r){const s=this.map[t];s!==void 0&&s.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&i.push(o)}return i}}function W9(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}const Ty=37297;let wy=0;function Ay(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}const X9=new i2;function Cy(n){p2._getMatrix(X9,p2.workingColorSpace,n);const e=`mat3( ${X9.elements.map(t=>t.toFixed(4))} )`;switch(p2.getTransfer(n)){case er:return[e,"LinearTransferOETF"];case b2:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",n),[e,"LinearTransferOETF"]}}function $9(n,e,t){const i=n.getShaderParameter(e,n.COMPILE_STATUS),s=(n.getShaderInfoLog(e)||"").trim();if(i&&s==="")return"";const o=/ERROR: 0:(\d+)/.exec(s);if(o){const a=parseInt(o[1]);return t.toUpperCase()+`

`+s+`

`+Ay(n.getShaderSource(e),a)}else return s}function Ry(n,e){const t=Cy(e);return[`vec4 ${n}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function Py(n,e){let t;switch(e){case Lm:t="Linear";break;case Im:t="Reinhard";break;case Dm:t="Cineon";break;case Um:t="ACESFilmic";break;case Fm:t="AgX";break;case Nm:t="Neutral";break;case Om:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Ei=new i1;function Ly(){p2.getLuminanceCoefficients(Ei);const n=Ei.x.toFixed(4),e=Ei.y.toFixed(4),t=Ei.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${n}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function Iy(n){return[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",n.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(cn).join(`
`)}function Dy(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function Uy(n,e){const t={},i=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const s=n.getActiveAttrib(e,r),o=s.name;let a=1;s.type===n.FLOAT_MAT2&&(a=2),s.type===n.FLOAT_MAT3&&(a=3),s.type===n.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:n.getAttribLocation(e,o),locationSize:a}}return t}function cn(n){return n!==""}function q9(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function j9(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Oy=/^[ \t]*#include +<([\w\d./]+)>/gm;function zo(n){return n.replace(Oy,Ny)}const Fy=new Map;function Ny(n,e){let t=r2[e];if(t===void 0){const i=Fy.get(e);if(i!==void 0)t=r2[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return zo(t)}const By=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Y9(n){return n.replace(By,ky)}function ky(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function K9(n){let e=`precision ${n.precision} float;
	precision ${n.precision} int;
	precision ${n.precision} sampler2D;
	precision ${n.precision} samplerCube;
	precision ${n.precision} sampler3D;
	precision ${n.precision} sampler2DArray;
	precision ${n.precision} sampler2DShadow;
	precision ${n.precision} samplerCubeShadow;
	precision ${n.precision} sampler2DArrayShadow;
	precision ${n.precision} isampler2D;
	precision ${n.precision} isampler3D;
	precision ${n.precision} isamplerCube;
	precision ${n.precision} isampler2DArray;
	precision ${n.precision} usampler2D;
	precision ${n.precision} usampler3D;
	precision ${n.precision} usamplerCube;
	precision ${n.precision} usampler2DArray;
	`;return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Hy(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===P6?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===um?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===Ce&&(e="SHADOWMAP_TYPE_VSM"),e}function zy(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case H0:case z0:e="ENVMAP_TYPE_CUBE";break;case xr:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Vy(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case z0:e="ENVMAP_MODE_REFRACTION";break}return e}function Gy(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case L6:e="ENVMAP_BLENDING_MULTIPLY";break;case Rm:e="ENVMAP_BLENDING_MIX";break;case Pm:e="ENVMAP_BLENDING_ADD";break}return e}function Wy(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:i,maxMip:t}}function Xy(n,e,t,i){const r=n.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=Hy(t),u=zy(t),c=Vy(t),f=Gy(t),h=Wy(t),d=Iy(t),g=Dy(s),y=r.createProgram();let m,p,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g].filter(cn).join(`
`),m.length>0&&(m+=`
`),p=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g].filter(cn).join(`
`),p.length>0&&(p+=`
`)):(m=[K9(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(cn).join(`
`),p=[K9(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.envMap?"#define "+c:"",t.envMap?"#define "+f:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==dt?"#define TONE_MAPPING":"",t.toneMapping!==dt?r2.tonemapping_pars_fragment:"",t.toneMapping!==dt?Py("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",r2.colorspace_pars_fragment,Ry("linearToOutputTexel",t.outputColorSpace),Ly(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(cn).join(`
`)),o=zo(o),o=q9(o,t),o=j9(o,t),a=zo(a),a=q9(a,t),a=j9(a,t),o=Y9(o),a=Y9(a),t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,m=[d,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,p=["#define varying in",t.glslVersion===u9?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===u9?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const M=w+m+o,_=w+p+a,A=W9(r,r.VERTEX_SHADER,M),R=W9(r,r.FRAGMENT_SHADER,_);r.attachShader(y,A),r.attachShader(y,R),t.index0AttributeName!==void 0?r.bindAttribLocation(y,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(y,0,"position"),r.linkProgram(y);function D(U){if(n.debug.checkShaderErrors){const B=r.getProgramInfoLog(y)||"",X=r.getShaderInfoLog(A)||"",K=r.getShaderInfoLog(R)||"",a1=B.trim(),z=X.trim(),r1=K.trim();let H=!0,y1=!0;if(r.getProgramParameter(y,r.LINK_STATUS)===!1)if(H=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(r,y,A,R);else{const C1=$9(r,A,"vertex"),F1=$9(r,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(y,r.VALIDATE_STATUS)+`

Material Name: `+U.name+`
Material Type: `+U.type+`

Program Info Log: `+a1+`
`+C1+`
`+F1)}else a1!==""?console.warn("THREE.WebGLProgram: Program Info Log:",a1):(z===""||r1==="")&&(y1=!1);y1&&(U.diagnostics={runnable:H,programLog:a1,vertexShader:{log:z,prefix:m},fragmentShader:{log:r1,prefix:p}})}r.deleteShader(A),r.deleteShader(R),L=new Ui(r,y),T=Uy(r,y)}let L;this.getUniforms=function(){return L===void 0&&D(this),L};let T;this.getAttributes=function(){return T===void 0&&D(this),T};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=r.getProgramParameter(y,Ty)),b},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(y),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=wy++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=A,this.fragmentShader=R,this}let $y=0;class qy{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new jy(e),t.set(e,i)),i}}class jy{constructor(e){this.id=$y++,this.code=e,this.usedTimes=0}}function Yy(n,e,t,i,r,s,o){const a=new X6,l=new qy,u=new Set,c=[],f=r.logarithmicDepthBuffer,h=r.vertexTextures;let d=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function y(T){return u.add(T),T===0?"uv":`uv${T}`}function m(T,b,U,B,X){const K=B.fog,a1=X.geometry,z=T.isMeshStandardMaterial?B.environment:null,r1=(T.isMeshStandardMaterial?t:e).get(T.envMap||z),H=r1&&r1.mapping===xr?r1.image.height:null,y1=g[T.type];T.precision!==null&&(d=r.getMaxPrecision(T.precision),d!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",d,"instead."));const C1=a1.morphAttributes.position||a1.morphAttributes.normal||a1.morphAttributes.color,F1=C1!==void 0?C1.length:0;let X1=0;a1.morphAttributes.position!==void 0&&(X1=1),a1.morphAttributes.normal!==void 0&&(X1=2),a1.morphAttributes.color!==void 0&&(X1=3);let u2,o2,c1,b1;if(y1){const h2=he[y1];u2=h2.vertexShader,o2=h2.fragmentShader}else u2=T.vertexShader,o2=T.fragmentShader,l.update(T),c1=l.getVertexShaderID(T),b1=l.getFragmentShaderID(T);const V=n.getRenderTarget(),f1=n.state.buffers.depth.getReversed(),u1=X.isInstancedMesh===!0,g1=X.isBatchedMesh===!0,z1=!!T.map,B1=!!T.matcap,S=!!r1,F=!!T.aoMap,k=!!T.lightMap,s1=!!T.bumpMap,q=!!T.normalMap,l1=!!T.displacementMap,e1=!!T.emissiveMap,h1=!!T.metalnessMap,d1=!!T.roughnessMap,Q=T.anisotropy>0,P=T.clearcoat>0,E=T.dispersion>0,N=T.iridescence>0,Y=T.sheen>0,o1=T.transmission>0,J=Q&&!!T.anisotropyMap,T1=P&&!!T.clearcoatMap,x1=P&&!!T.clearcoatNormalMap,P1=P&&!!T.clearcoatRoughnessMap,I1=N&&!!T.iridescenceMap,_1=N&&!!T.iridescenceThicknessMap,A1=Y&&!!T.sheenColorMap,G1=Y&&!!T.sheenRoughnessMap,D1=!!T.specularMap,w1=!!T.specularColorMap,t2=!!T.specularIntensityMap,G=o1&&!!T.transmissionMap,S1=o1&&!!T.thicknessMap,R1=!!T.gradientMap,N1=!!T.alphaMap,M1=T.alphaTest>0,p1=!!T.alphaHash,k1=!!T.extensions;let $1=dt;T.toneMapped&&(V===null||V.isXRRenderTarget===!0)&&($1=n.toneMapping);const E2={shaderID:y1,shaderType:T.type,shaderName:T.name,vertexShader:u2,fragmentShader:o2,defines:T.defines,customVertexShaderID:c1,customFragmentShaderID:b1,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:d,batching:g1,batchingColor:g1&&X._colorsTexture!==null,instancing:u1,instancingColor:u1&&X.instanceColor!==null,instancingMorph:u1&&X.morphTexture!==null,supportsVertexTextures:h,outputColorSpace:V===null?n.outputColorSpace:V.isXRRenderTarget===!0?V.texture.colorSpace:V0,alphaToCoverage:!!T.alphaToCoverage,map:z1,matcap:B1,envMap:S,envMapMode:S&&r1.mapping,envMapCubeUVHeight:H,aoMap:F,lightMap:k,bumpMap:s1,normalMap:q,displacementMap:h&&l1,emissiveMap:e1,normalMapObjectSpace:q&&T.normalMapType===zm,normalMapTangentSpace:q&&T.normalMapType===z6,metalnessMap:h1,roughnessMap:d1,anisotropy:Q,anisotropyMap:J,clearcoat:P,clearcoatMap:T1,clearcoatNormalMap:x1,clearcoatRoughnessMap:P1,dispersion:E,iridescence:N,iridescenceMap:I1,iridescenceThicknessMap:_1,sheen:Y,sheenColorMap:A1,sheenRoughnessMap:G1,specularMap:D1,specularColorMap:w1,specularIntensityMap:t2,transmission:o1,transmissionMap:G,thicknessMap:S1,gradientMap:R1,opaque:T.transparent===!1&&T.blending===R0&&T.alphaToCoverage===!1,alphaMap:N1,alphaTest:M1,alphaHash:p1,combine:T.combine,mapUv:z1&&y(T.map.channel),aoMapUv:F&&y(T.aoMap.channel),lightMapUv:k&&y(T.lightMap.channel),bumpMapUv:s1&&y(T.bumpMap.channel),normalMapUv:q&&y(T.normalMap.channel),displacementMapUv:l1&&y(T.displacementMap.channel),emissiveMapUv:e1&&y(T.emissiveMap.channel),metalnessMapUv:h1&&y(T.metalnessMap.channel),roughnessMapUv:d1&&y(T.roughnessMap.channel),anisotropyMapUv:J&&y(T.anisotropyMap.channel),clearcoatMapUv:T1&&y(T.clearcoatMap.channel),clearcoatNormalMapUv:x1&&y(T.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:P1&&y(T.clearcoatRoughnessMap.channel),iridescenceMapUv:I1&&y(T.iridescenceMap.channel),iridescenceThicknessMapUv:_1&&y(T.iridescenceThicknessMap.channel),sheenColorMapUv:A1&&y(T.sheenColorMap.channel),sheenRoughnessMapUv:G1&&y(T.sheenRoughnessMap.channel),specularMapUv:D1&&y(T.specularMap.channel),specularColorMapUv:w1&&y(T.specularColorMap.channel),specularIntensityMapUv:t2&&y(T.specularIntensityMap.channel),transmissionMapUv:G&&y(T.transmissionMap.channel),thicknessMapUv:S1&&y(T.thicknessMap.channel),alphaMapUv:N1&&y(T.alphaMap.channel),vertexTangents:!!a1.attributes.tangent&&(q||Q),vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!a1.attributes.color&&a1.attributes.color.itemSize===4,pointsUvs:X.isPoints===!0&&!!a1.attributes.uv&&(z1||N1),fog:!!K,useFog:T.fog===!0,fogExp2:!!K&&K.isFogExp2,flatShading:T.flatShading===!0&&T.wireframe===!1,sizeAttenuation:T.sizeAttenuation===!0,logarithmicDepthBuffer:f,reversedDepthBuffer:f1,skinning:X.isSkinnedMesh===!0,morphTargets:a1.morphAttributes.position!==void 0,morphNormals:a1.morphAttributes.normal!==void 0,morphColors:a1.morphAttributes.color!==void 0,morphTargetsCount:F1,morphTextureStride:X1,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:T.dithering,shadowMapEnabled:n.shadowMap.enabled&&U.length>0,shadowMapType:n.shadowMap.type,toneMapping:$1,decodeVideoTexture:z1&&T.map.isVideoTexture===!0&&p2.getTransfer(T.map.colorSpace)===b2,decodeVideoTextureEmissive:e1&&T.emissiveMap.isVideoTexture===!0&&p2.getTransfer(T.emissiveMap.colorSpace)===b2,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===De,flipSided:T.side===M3,useDepthPacking:T.depthPacking>=0,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionClipCullDistance:k1&&T.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(k1&&T.extensions.multiDraw===!0||g1)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:T.customProgramCacheKey()};return E2.vertexUv1s=u.has(1),E2.vertexUv2s=u.has(2),E2.vertexUv3s=u.has(3),u.clear(),E2}function p(T){const b=[];if(T.shaderID?b.push(T.shaderID):(b.push(T.customVertexShaderID),b.push(T.customFragmentShaderID)),T.defines!==void 0)for(const U in T.defines)b.push(U),b.push(T.defines[U]);return T.isRawShaderMaterial===!1&&(w(b,T),M(b,T),b.push(n.outputColorSpace)),b.push(T.customProgramCacheKey),b.join()}function w(T,b){T.push(b.precision),T.push(b.outputColorSpace),T.push(b.envMapMode),T.push(b.envMapCubeUVHeight),T.push(b.mapUv),T.push(b.alphaMapUv),T.push(b.lightMapUv),T.push(b.aoMapUv),T.push(b.bumpMapUv),T.push(b.normalMapUv),T.push(b.displacementMapUv),T.push(b.emissiveMapUv),T.push(b.metalnessMapUv),T.push(b.roughnessMapUv),T.push(b.anisotropyMapUv),T.push(b.clearcoatMapUv),T.push(b.clearcoatNormalMapUv),T.push(b.clearcoatRoughnessMapUv),T.push(b.iridescenceMapUv),T.push(b.iridescenceThicknessMapUv),T.push(b.sheenColorMapUv),T.push(b.sheenRoughnessMapUv),T.push(b.specularMapUv),T.push(b.specularColorMapUv),T.push(b.specularIntensityMapUv),T.push(b.transmissionMapUv),T.push(b.thicknessMapUv),T.push(b.combine),T.push(b.fogExp2),T.push(b.sizeAttenuation),T.push(b.morphTargetsCount),T.push(b.morphAttributeCount),T.push(b.numDirLights),T.push(b.numPointLights),T.push(b.numSpotLights),T.push(b.numSpotLightMaps),T.push(b.numHemiLights),T.push(b.numRectAreaLights),T.push(b.numDirLightShadows),T.push(b.numPointLightShadows),T.push(b.numSpotLightShadows),T.push(b.numSpotLightShadowsWithMaps),T.push(b.numLightProbes),T.push(b.shadowMapType),T.push(b.toneMapping),T.push(b.numClippingPlanes),T.push(b.numClipIntersection),T.push(b.depthPacking)}function M(T,b){a.disableAll(),b.supportsVertexTextures&&a.enable(0),b.instancing&&a.enable(1),b.instancingColor&&a.enable(2),b.instancingMorph&&a.enable(3),b.matcap&&a.enable(4),b.envMap&&a.enable(5),b.normalMapObjectSpace&&a.enable(6),b.normalMapTangentSpace&&a.enable(7),b.clearcoat&&a.enable(8),b.iridescence&&a.enable(9),b.alphaTest&&a.enable(10),b.vertexColors&&a.enable(11),b.vertexAlphas&&a.enable(12),b.vertexUv1s&&a.enable(13),b.vertexUv2s&&a.enable(14),b.vertexUv3s&&a.enable(15),b.vertexTangents&&a.enable(16),b.anisotropy&&a.enable(17),b.alphaHash&&a.enable(18),b.batching&&a.enable(19),b.dispersion&&a.enable(20),b.batchingColor&&a.enable(21),b.gradientMap&&a.enable(22),T.push(a.mask),a.disableAll(),b.fog&&a.enable(0),b.useFog&&a.enable(1),b.flatShading&&a.enable(2),b.logarithmicDepthBuffer&&a.enable(3),b.reversedDepthBuffer&&a.enable(4),b.skinning&&a.enable(5),b.morphTargets&&a.enable(6),b.morphNormals&&a.enable(7),b.morphColors&&a.enable(8),b.premultipliedAlpha&&a.enable(9),b.shadowMapEnabled&&a.enable(10),b.doubleSided&&a.enable(11),b.flipSided&&a.enable(12),b.useDepthPacking&&a.enable(13),b.dithering&&a.enable(14),b.transmission&&a.enable(15),b.sheen&&a.enable(16),b.opaque&&a.enable(17),b.pointsUvs&&a.enable(18),b.decodeVideoTexture&&a.enable(19),b.decodeVideoTextureEmissive&&a.enable(20),b.alphaToCoverage&&a.enable(21),T.push(a.mask)}function _(T){const b=g[T.type];let U;if(b){const B=he[b];U=g8.clone(B.uniforms)}else U=T.uniforms;return U}function A(T,b){let U;for(let B=0,X=c.length;B<X;B++){const K=c[B];if(K.cacheKey===b){U=K,++U.usedTimes;break}}return U===void 0&&(U=new Xy(n,b,T,s),c.push(U)),U}function R(T){if(--T.usedTimes===0){const b=c.indexOf(T);c[b]=c[c.length-1],c.pop(),T.destroy()}}function D(T){l.remove(T)}function L(){l.dispose()}return{getParameters:m,getProgramCacheKey:p,getUniforms:_,acquireProgram:A,releaseProgram:R,releaseShaderCache:D,programs:c,dispose:L}}function Ky(){let n=new WeakMap;function e(o){return n.has(o)}function t(o){let a=n.get(o);return a===void 0&&(a={},n.set(o,a)),a}function i(o){n.delete(o)}function r(o,a,l){n.get(o)[a]=l}function s(){n=new WeakMap}return{has:e,get:t,remove:i,update:r,dispose:s}}function Zy(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function Z9(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function J9(){const n=[];let e=0;const t=[],i=[],r=[];function s(){e=0,t.length=0,i.length=0,r.length=0}function o(f,h,d,g,y,m){let p=n[e];return p===void 0?(p={id:f.id,object:f,geometry:h,material:d,groupOrder:g,renderOrder:f.renderOrder,z:y,group:m},n[e]=p):(p.id=f.id,p.object=f,p.geometry=h,p.material=d,p.groupOrder=g,p.renderOrder=f.renderOrder,p.z=y,p.group=m),e++,p}function a(f,h,d,g,y,m){const p=o(f,h,d,g,y,m);d.transmission>0?i.push(p):d.transparent===!0?r.push(p):t.push(p)}function l(f,h,d,g,y,m){const p=o(f,h,d,g,y,m);d.transmission>0?i.unshift(p):d.transparent===!0?r.unshift(p):t.unshift(p)}function u(f,h){t.length>1&&t.sort(f||Zy),i.length>1&&i.sort(h||Z9),r.length>1&&r.sort(h||Z9)}function c(){for(let f=e,h=n.length;f<h;f++){const d=n[f];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:i,transparent:r,init:s,push:a,unshift:l,finish:c,sort:u}}function Jy(){let n=new WeakMap;function e(i,r){const s=n.get(i);let o;return s===void 0?(o=new J9,n.set(i,[o])):r>=s.length?(o=new J9,s.push(o)):o=s[r],o}function t(){n=new WeakMap}return{get:e,dispose:t}}function Qy(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new i1,color:new M2};break;case"SpotLight":t={position:new i1,direction:new i1,color:new M2,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new i1,color:new M2,distance:0,decay:0};break;case"HemisphereLight":t={direction:new i1,skyColor:new M2,groundColor:new M2};break;case"RectAreaLight":t={color:new M2,position:new i1,halfWidth:new i1,halfHeight:new i1};break}return n[e.id]=t,t}}}function ex(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new S2};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new S2};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new S2,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let tx=0;function nx(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function ix(n){const e=new Qy,t=ex(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let u=0;u<9;u++)i.probe.push(new i1);const r=new i1,s=new V2,o=new V2;function a(u){let c=0,f=0,h=0;for(let T=0;T<9;T++)i.probe[T].set(0,0,0);let d=0,g=0,y=0,m=0,p=0,w=0,M=0,_=0,A=0,R=0,D=0;u.sort(nx);for(let T=0,b=u.length;T<b;T++){const U=u[T],B=U.color,X=U.intensity,K=U.distance,a1=U.shadow&&U.shadow.map?U.shadow.map.texture:null;if(U.isAmbientLight)c+=B.r*X,f+=B.g*X,h+=B.b*X;else if(U.isLightProbe){for(let z=0;z<9;z++)i.probe[z].addScaledVector(U.sh.coefficients[z],X);D++}else if(U.isDirectionalLight){const z=e.get(U);if(z.color.copy(U.color).multiplyScalar(U.intensity),U.castShadow){const r1=U.shadow,H=t.get(U);H.shadowIntensity=r1.intensity,H.shadowBias=r1.bias,H.shadowNormalBias=r1.normalBias,H.shadowRadius=r1.radius,H.shadowMapSize=r1.mapSize,i.directionalShadow[d]=H,i.directionalShadowMap[d]=a1,i.directionalShadowMatrix[d]=U.shadow.matrix,w++}i.directional[d]=z,d++}else if(U.isSpotLight){const z=e.get(U);z.position.setFromMatrixPosition(U.matrixWorld),z.color.copy(B).multiplyScalar(X),z.distance=K,z.coneCos=Math.cos(U.angle),z.penumbraCos=Math.cos(U.angle*(1-U.penumbra)),z.decay=U.decay,i.spot[y]=z;const r1=U.shadow;if(U.map&&(i.spotLightMap[A]=U.map,A++,r1.updateMatrices(U),U.castShadow&&R++),i.spotLightMatrix[y]=r1.matrix,U.castShadow){const H=t.get(U);H.shadowIntensity=r1.intensity,H.shadowBias=r1.bias,H.shadowNormalBias=r1.normalBias,H.shadowRadius=r1.radius,H.shadowMapSize=r1.mapSize,i.spotShadow[y]=H,i.spotShadowMap[y]=a1,_++}y++}else if(U.isRectAreaLight){const z=e.get(U);z.color.copy(B).multiplyScalar(X),z.halfWidth.set(U.width*.5,0,0),z.halfHeight.set(0,U.height*.5,0),i.rectArea[m]=z,m++}else if(U.isPointLight){const z=e.get(U);if(z.color.copy(U.color).multiplyScalar(U.intensity),z.distance=U.distance,z.decay=U.decay,U.castShadow){const r1=U.shadow,H=t.get(U);H.shadowIntensity=r1.intensity,H.shadowBias=r1.bias,H.shadowNormalBias=r1.normalBias,H.shadowRadius=r1.radius,H.shadowMapSize=r1.mapSize,H.shadowCameraNear=r1.camera.near,H.shadowCameraFar=r1.camera.far,i.pointShadow[g]=H,i.pointShadowMap[g]=a1,i.pointShadowMatrix[g]=U.shadow.matrix,M++}i.point[g]=z,g++}else if(U.isHemisphereLight){const z=e.get(U);z.skyColor.copy(U.color).multiplyScalar(X),z.groundColor.copy(U.groundColor).multiplyScalar(X),i.hemi[p]=z,p++}}m>0&&(n.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=L1.LTC_FLOAT_1,i.rectAreaLTC2=L1.LTC_FLOAT_2):(i.rectAreaLTC1=L1.LTC_HALF_1,i.rectAreaLTC2=L1.LTC_HALF_2)),i.ambient[0]=c,i.ambient[1]=f,i.ambient[2]=h;const L=i.hash;(L.directionalLength!==d||L.pointLength!==g||L.spotLength!==y||L.rectAreaLength!==m||L.hemiLength!==p||L.numDirectionalShadows!==w||L.numPointShadows!==M||L.numSpotShadows!==_||L.numSpotMaps!==A||L.numLightProbes!==D)&&(i.directional.length=d,i.spot.length=y,i.rectArea.length=m,i.point.length=g,i.hemi.length=p,i.directionalShadow.length=w,i.directionalShadowMap.length=w,i.pointShadow.length=M,i.pointShadowMap.length=M,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=w,i.pointShadowMatrix.length=M,i.spotLightMatrix.length=_+A-R,i.spotLightMap.length=A,i.numSpotLightShadowsWithMaps=R,i.numLightProbes=D,L.directionalLength=d,L.pointLength=g,L.spotLength=y,L.rectAreaLength=m,L.hemiLength=p,L.numDirectionalShadows=w,L.numPointShadows=M,L.numSpotShadows=_,L.numSpotMaps=A,L.numLightProbes=D,i.version=tx++)}function l(u,c){let f=0,h=0,d=0,g=0,y=0;const m=c.matrixWorldInverse;for(let p=0,w=u.length;p<w;p++){const M=u[p];if(M.isDirectionalLight){const _=i.directional[f];_.direction.setFromMatrixPosition(M.matrixWorld),r.setFromMatrixPosition(M.target.matrixWorld),_.direction.sub(r),_.direction.transformDirection(m),f++}else if(M.isSpotLight){const _=i.spot[d];_.position.setFromMatrixPosition(M.matrixWorld),_.position.applyMatrix4(m),_.direction.setFromMatrixPosition(M.matrixWorld),r.setFromMatrixPosition(M.target.matrixWorld),_.direction.sub(r),_.direction.transformDirection(m),d++}else if(M.isRectAreaLight){const _=i.rectArea[g];_.position.setFromMatrixPosition(M.matrixWorld),_.position.applyMatrix4(m),o.identity(),s.copy(M.matrixWorld),s.premultiply(m),o.extractRotation(s),_.halfWidth.set(M.width*.5,0,0),_.halfHeight.set(0,M.height*.5,0),_.halfWidth.applyMatrix4(o),_.halfHeight.applyMatrix4(o),g++}else if(M.isPointLight){const _=i.point[h];_.position.setFromMatrixPosition(M.matrixWorld),_.position.applyMatrix4(m),h++}else if(M.isHemisphereLight){const _=i.hemi[y];_.direction.setFromMatrixPosition(M.matrixWorld),_.direction.transformDirection(m),y++}}}return{setup:a,setupView:l,state:i}}function Q9(n){const e=new ix(n),t=[],i=[];function r(c){u.camera=c,t.length=0,i.length=0}function s(c){t.push(c)}function o(c){i.push(c)}function a(){e.setup(t)}function l(c){e.setupView(t,c)}const u={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:u,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:o}}function rx(n){let e=new WeakMap;function t(r,s=0){const o=e.get(r);let a;return o===void 0?(a=new Q9(n),e.set(r,[a])):s>=o.length?(a=new Q9(n),o.push(a)):a=o[s],a}function i(){e=new WeakMap}return{get:t,dispose:i}}const sx=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,ox=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function ax(n,e,t){let i=new Q6;const r=new S2,s=new S2,o=new N2,a=new C8({depthPacking:Hm}),l=new R8,u={},c=t.maxTextureSize,f={[mt]:M3,[M3]:mt,[De]:De},h=new _t({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new S2},radius:{value:4}},vertexShader:sx,fragmentShader:ox}),d=h.clone();d.defines.HORIZONTAL_PASS=1;const g=new Ge;g.setAttribute("position",new D3(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new _e(g,h),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=P6;let p=this.type;this.render=function(R,D,L){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||R.length===0)return;const T=n.getRenderTarget(),b=n.getActiveCubeFace(),U=n.getActiveMipmapLevel(),B=n.state;B.setBlending(ht),B.buffers.depth.getReversed()?B.buffers.color.setClear(0,0,0,0):B.buffers.color.setClear(1,1,1,1),B.buffers.depth.setTest(!0),B.setScissorTest(!1);const X=p!==Ce&&this.type===Ce,K=p===Ce&&this.type!==Ce;for(let a1=0,z=R.length;a1<z;a1++){const r1=R[a1],H=r1.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",r1,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;r.copy(H.mapSize);const y1=H.getFrameExtents();if(r.multiply(y1),s.copy(H.mapSize),(r.x>c||r.y>c)&&(r.x>c&&(s.x=Math.floor(c/y1.x),r.x=s.x*y1.x,H.mapSize.x=s.x),r.y>c&&(s.y=Math.floor(c/y1.y),r.y=s.y*y1.y,H.mapSize.y=s.y)),H.map===null||X===!0||K===!0){const F1=this.type!==Ce?{minFilter:ee,magFilter:ee}:{};H.map!==null&&H.map.dispose(),H.map=new Yt(r.x,r.y,F1),H.map.texture.name=r1.name+".shadowMap",H.camera.updateProjectionMatrix()}n.setRenderTarget(H.map),n.clear();const C1=H.getViewportCount();for(let F1=0;F1<C1;F1++){const X1=H.getViewport(F1);o.set(s.x*X1.x,s.y*X1.y,s.x*X1.z,s.y*X1.w),B.viewport(o),H.updateMatrices(r1,F1),i=H.getFrustum(),_(D,L,H.camera,r1,this.type)}H.isPointLightShadow!==!0&&this.type===Ce&&w(H,L),H.needsUpdate=!1}p=this.type,m.needsUpdate=!1,n.setRenderTarget(T,b,U)};function w(R,D){const L=e.update(y);h.defines.VSM_SAMPLES!==R.blurSamples&&(h.defines.VSM_SAMPLES=R.blurSamples,d.defines.VSM_SAMPLES=R.blurSamples,h.needsUpdate=!0,d.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new Yt(r.x,r.y)),h.uniforms.shadow_pass.value=R.map.texture,h.uniforms.resolution.value=R.mapSize,h.uniforms.radius.value=R.radius,n.setRenderTarget(R.mapPass),n.clear(),n.renderBufferDirect(D,null,L,h,y,null),d.uniforms.shadow_pass.value=R.mapPass.texture,d.uniforms.resolution.value=R.mapSize,d.uniforms.radius.value=R.radius,n.setRenderTarget(R.map),n.clear(),n.renderBufferDirect(D,null,L,d,y,null)}function M(R,D,L,T){let b=null;const U=L.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(U!==void 0)b=U;else if(b=L.isPointLight===!0?l:a,n.localClippingEnabled&&D.clipShadows===!0&&Array.isArray(D.clippingPlanes)&&D.clippingPlanes.length!==0||D.displacementMap&&D.displacementScale!==0||D.alphaMap&&D.alphaTest>0||D.map&&D.alphaTest>0||D.alphaToCoverage===!0){const B=b.uuid,X=D.uuid;let K=u[B];K===void 0&&(K={},u[B]=K);let a1=K[X];a1===void 0&&(a1=b.clone(),K[X]=a1,D.addEventListener("dispose",A)),b=a1}if(b.visible=D.visible,b.wireframe=D.wireframe,T===Ce?b.side=D.shadowSide!==null?D.shadowSide:D.side:b.side=D.shadowSide!==null?D.shadowSide:f[D.side],b.alphaMap=D.alphaMap,b.alphaTest=D.alphaToCoverage===!0?.5:D.alphaTest,b.map=D.map,b.clipShadows=D.clipShadows,b.clippingPlanes=D.clippingPlanes,b.clipIntersection=D.clipIntersection,b.displacementMap=D.displacementMap,b.displacementScale=D.displacementScale,b.displacementBias=D.displacementBias,b.wireframeLinewidth=D.wireframeLinewidth,b.linewidth=D.linewidth,L.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const B=n.properties.get(b);B.light=L}return b}function _(R,D,L,T,b){if(R.visible===!1)return;if(R.layers.test(D.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&b===Ce)&&(!R.frustumCulled||i.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,R.matrixWorld);const X=e.update(R),K=R.material;if(Array.isArray(K)){const a1=X.groups;for(let z=0,r1=a1.length;z<r1;z++){const H=a1[z],y1=K[H.materialIndex];if(y1&&y1.visible){const C1=M(R,y1,T,b);R.onBeforeShadow(n,R,D,L,X,C1,H),n.renderBufferDirect(L,null,X,C1,R,H),R.onAfterShadow(n,R,D,L,X,C1,H)}}}else if(K.visible){const a1=M(R,K,T,b);R.onBeforeShadow(n,R,D,L,X,a1,null),n.renderBufferDirect(L,null,X,a1,R,null),R.onAfterShadow(n,R,D,L,X,a1,null)}}const B=R.children;for(let X=0,K=B.length;X<K;X++)_(B[X],D,L,T,b)}function A(R){R.target.removeEventListener("dispose",A);for(const L in u){const T=u[L],b=R.target.uuid;b in T&&(T[b].dispose(),delete T[b])}}}const lx={[no]:io,[ro]:ao,[so]:lo,[k0]:oo,[io]:no,[ao]:ro,[lo]:so,[oo]:k0};function cx(n,e){function t(){let G=!1;const S1=new N2;let R1=null;const N1=new N2(0,0,0,0);return{setMask:function(M1){R1!==M1&&!G&&(n.colorMask(M1,M1,M1,M1),R1=M1)},setLocked:function(M1){G=M1},setClear:function(M1,p1,k1,$1,E2){E2===!0&&(M1*=$1,p1*=$1,k1*=$1),S1.set(M1,p1,k1,$1),N1.equals(S1)===!1&&(n.clearColor(M1,p1,k1,$1),N1.copy(S1))},reset:function(){G=!1,R1=null,N1.set(-1,0,0,0)}}}function i(){let G=!1,S1=!1,R1=null,N1=null,M1=null;return{setReversed:function(p1){if(S1!==p1){const k1=e.get("EXT_clip_control");p1?k1.clipControlEXT(k1.LOWER_LEFT_EXT,k1.ZERO_TO_ONE_EXT):k1.clipControlEXT(k1.LOWER_LEFT_EXT,k1.NEGATIVE_ONE_TO_ONE_EXT),S1=p1;const $1=M1;M1=null,this.setClear($1)}},getReversed:function(){return S1},setTest:function(p1){p1?V(n.DEPTH_TEST):f1(n.DEPTH_TEST)},setMask:function(p1){R1!==p1&&!G&&(n.depthMask(p1),R1=p1)},setFunc:function(p1){if(S1&&(p1=lx[p1]),N1!==p1){switch(p1){case no:n.depthFunc(n.NEVER);break;case io:n.depthFunc(n.ALWAYS);break;case ro:n.depthFunc(n.LESS);break;case k0:n.depthFunc(n.LEQUAL);break;case so:n.depthFunc(n.EQUAL);break;case oo:n.depthFunc(n.GEQUAL);break;case ao:n.depthFunc(n.GREATER);break;case lo:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}N1=p1}},setLocked:function(p1){G=p1},setClear:function(p1){M1!==p1&&(S1&&(p1=1-p1),n.clearDepth(p1),M1=p1)},reset:function(){G=!1,R1=null,N1=null,M1=null,S1=!1}}}function r(){let G=!1,S1=null,R1=null,N1=null,M1=null,p1=null,k1=null,$1=null,E2=null;return{setTest:function(h2){G||(h2?V(n.STENCIL_TEST):f1(n.STENCIL_TEST))},setMask:function(h2){S1!==h2&&!G&&(n.stencilMask(h2),S1=h2)},setFunc:function(h2,P2,b3){(R1!==h2||N1!==P2||M1!==b3)&&(n.stencilFunc(h2,P2,b3),R1=h2,N1=P2,M1=b3)},setOp:function(h2,P2,b3){(p1!==h2||k1!==P2||$1!==b3)&&(n.stencilOp(h2,P2,b3),p1=h2,k1=P2,$1=b3)},setLocked:function(h2){G=h2},setClear:function(h2){E2!==h2&&(n.clearStencil(h2),E2=h2)},reset:function(){G=!1,S1=null,R1=null,N1=null,M1=null,p1=null,k1=null,$1=null,E2=null}}}const s=new t,o=new i,a=new r,l=new WeakMap,u=new WeakMap;let c={},f={},h=new WeakMap,d=[],g=null,y=!1,m=null,p=null,w=null,M=null,_=null,A=null,R=null,D=new M2(0,0,0),L=0,T=!1,b=null,U=null,B=null,X=null,K=null;const a1=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let z=!1,r1=0;const H=n.getParameter(n.VERSION);H.indexOf("WebGL")!==-1?(r1=parseFloat(/^WebGL (\d)/.exec(H)[1]),z=r1>=1):H.indexOf("OpenGL ES")!==-1&&(r1=parseFloat(/^OpenGL ES (\d)/.exec(H)[1]),z=r1>=2);let y1=null,C1={};const F1=n.getParameter(n.SCISSOR_BOX),X1=n.getParameter(n.VIEWPORT),u2=new N2().fromArray(F1),o2=new N2().fromArray(X1);function c1(G,S1,R1,N1){const M1=new Uint8Array(4),p1=n.createTexture();n.bindTexture(G,p1),n.texParameteri(G,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(G,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let k1=0;k1<R1;k1++)G===n.TEXTURE_3D||G===n.TEXTURE_2D_ARRAY?n.texImage3D(S1,0,n.RGBA,1,1,N1,0,n.RGBA,n.UNSIGNED_BYTE,M1):n.texImage2D(S1+k1,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,M1);return p1}const b1={};b1[n.TEXTURE_2D]=c1(n.TEXTURE_2D,n.TEXTURE_2D,1),b1[n.TEXTURE_CUBE_MAP]=c1(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),b1[n.TEXTURE_2D_ARRAY]=c1(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),b1[n.TEXTURE_3D]=c1(n.TEXTURE_3D,n.TEXTURE_3D,1,1),s.setClear(0,0,0,1),o.setClear(1),a.setClear(0),V(n.DEPTH_TEST),o.setFunc(k0),s1(!1),q(r9),V(n.CULL_FACE),F(ht);function V(G){c[G]!==!0&&(n.enable(G),c[G]=!0)}function f1(G){c[G]!==!1&&(n.disable(G),c[G]=!1)}function u1(G,S1){return f[G]!==S1?(n.bindFramebuffer(G,S1),f[G]=S1,G===n.DRAW_FRAMEBUFFER&&(f[n.FRAMEBUFFER]=S1),G===n.FRAMEBUFFER&&(f[n.DRAW_FRAMEBUFFER]=S1),!0):!1}function g1(G,S1){let R1=d,N1=!1;if(G){R1=h.get(S1),R1===void 0&&(R1=[],h.set(S1,R1));const M1=G.textures;if(R1.length!==M1.length||R1[0]!==n.COLOR_ATTACHMENT0){for(let p1=0,k1=M1.length;p1<k1;p1++)R1[p1]=n.COLOR_ATTACHMENT0+p1;R1.length=M1.length,N1=!0}}else R1[0]!==n.BACK&&(R1[0]=n.BACK,N1=!0);N1&&n.drawBuffers(R1)}function z1(G){return g!==G?(n.useProgram(G),g=G,!0):!1}const B1={[Ot]:n.FUNC_ADD,[hm]:n.FUNC_SUBTRACT,[dm]:n.FUNC_REVERSE_SUBTRACT};B1[pm]=n.MIN,B1[mm]=n.MAX;const S={[_m]:n.ZERO,[gm]:n.ONE,[vm]:n.SRC_COLOR,[eo]:n.SRC_ALPHA,[bm]:n.SRC_ALPHA_SATURATE,[Sm]:n.DST_COLOR,[xm]:n.DST_ALPHA,[ym]:n.ONE_MINUS_SRC_COLOR,[to]:n.ONE_MINUS_SRC_ALPHA,[Em]:n.ONE_MINUS_DST_COLOR,[Mm]:n.ONE_MINUS_DST_ALPHA,[Tm]:n.CONSTANT_COLOR,[wm]:n.ONE_MINUS_CONSTANT_COLOR,[Am]:n.CONSTANT_ALPHA,[Cm]:n.ONE_MINUS_CONSTANT_ALPHA};function F(G,S1,R1,N1,M1,p1,k1,$1,E2,h2){if(G===ht){y===!0&&(f1(n.BLEND),y=!1);return}if(y===!1&&(V(n.BLEND),y=!0),G!==fm){if(G!==m||h2!==T){if((p!==Ot||_!==Ot)&&(n.blendEquation(n.FUNC_ADD),p=Ot,_=Ot),h2)switch(G){case R0:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case s9:n.blendFunc(n.ONE,n.ONE);break;case o9:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case a9:n.blendFuncSeparate(n.DST_COLOR,n.ONE_MINUS_SRC_ALPHA,n.ZERO,n.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case R0:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case s9:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE,n.ONE,n.ONE);break;case o9:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case a9:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}w=null,M=null,A=null,R=null,D.set(0,0,0),L=0,m=G,T=h2}return}M1=M1||S1,p1=p1||R1,k1=k1||N1,(S1!==p||M1!==_)&&(n.blendEquationSeparate(B1[S1],B1[M1]),p=S1,_=M1),(R1!==w||N1!==M||p1!==A||k1!==R)&&(n.blendFuncSeparate(S[R1],S[N1],S[p1],S[k1]),w=R1,M=N1,A=p1,R=k1),($1.equals(D)===!1||E2!==L)&&(n.blendColor($1.r,$1.g,$1.b,E2),D.copy($1),L=E2),m=G,T=!1}function k(G,S1){G.side===De?f1(n.CULL_FACE):V(n.CULL_FACE);let R1=G.side===M3;S1&&(R1=!R1),s1(R1),G.blending===R0&&G.transparent===!1?F(ht):F(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.blendColor,G.blendAlpha,G.premultipliedAlpha),o.setFunc(G.depthFunc),o.setTest(G.depthTest),o.setMask(G.depthWrite),s.setMask(G.colorWrite);const N1=G.stencilWrite;a.setTest(N1),N1&&(a.setMask(G.stencilWriteMask),a.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),a.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),e1(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?V(n.SAMPLE_ALPHA_TO_COVERAGE):f1(n.SAMPLE_ALPHA_TO_COVERAGE)}function s1(G){b!==G&&(G?n.frontFace(n.CW):n.frontFace(n.CCW),b=G)}function q(G){G!==lm?(V(n.CULL_FACE),G!==U&&(G===r9?n.cullFace(n.BACK):G===cm?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):f1(n.CULL_FACE),U=G}function l1(G){G!==B&&(z&&n.lineWidth(G),B=G)}function e1(G,S1,R1){G?(V(n.POLYGON_OFFSET_FILL),(X!==S1||K!==R1)&&(n.polygonOffset(S1,R1),X=S1,K=R1)):f1(n.POLYGON_OFFSET_FILL)}function h1(G){G?V(n.SCISSOR_TEST):f1(n.SCISSOR_TEST)}function d1(G){G===void 0&&(G=n.TEXTURE0+a1-1),y1!==G&&(n.activeTexture(G),y1=G)}function Q(G,S1,R1){R1===void 0&&(y1===null?R1=n.TEXTURE0+a1-1:R1=y1);let N1=C1[R1];N1===void 0&&(N1={type:void 0,texture:void 0},C1[R1]=N1),(N1.type!==G||N1.texture!==S1)&&(y1!==R1&&(n.activeTexture(R1),y1=R1),n.bindTexture(G,S1||b1[G]),N1.type=G,N1.texture=S1)}function P(){const G=C1[y1];G!==void 0&&G.type!==void 0&&(n.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function E(){try{n.compressedTexImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function N(){try{n.compressedTexImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Y(){try{n.texSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function o1(){try{n.texSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function J(){try{n.compressedTexSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function T1(){try{n.compressedTexSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function x1(){try{n.texStorage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function P1(){try{n.texStorage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function I1(){try{n.texImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function _1(){try{n.texImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function A1(G){u2.equals(G)===!1&&(n.scissor(G.x,G.y,G.z,G.w),u2.copy(G))}function G1(G){o2.equals(G)===!1&&(n.viewport(G.x,G.y,G.z,G.w),o2.copy(G))}function D1(G,S1){let R1=u.get(S1);R1===void 0&&(R1=new WeakMap,u.set(S1,R1));let N1=R1.get(G);N1===void 0&&(N1=n.getUniformBlockIndex(S1,G.name),R1.set(G,N1))}function w1(G,S1){const N1=u.get(S1).get(G);l.get(S1)!==N1&&(n.uniformBlockBinding(S1,N1,G.__bindingPointIndex),l.set(S1,N1))}function t2(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),o.setReversed(!1),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),c={},y1=null,C1={},f={},h=new WeakMap,d=[],g=null,y=!1,m=null,p=null,w=null,M=null,_=null,A=null,R=null,D=new M2(0,0,0),L=0,T=!1,b=null,U=null,B=null,X=null,K=null,u2.set(0,0,n.canvas.width,n.canvas.height),o2.set(0,0,n.canvas.width,n.canvas.height),s.reset(),o.reset(),a.reset()}return{buffers:{color:s,depth:o,stencil:a},enable:V,disable:f1,bindFramebuffer:u1,drawBuffers:g1,useProgram:z1,setBlending:F,setMaterial:k,setFlipSided:s1,setCullFace:q,setLineWidth:l1,setPolygonOffset:e1,setScissorTest:h1,activeTexture:d1,bindTexture:Q,unbindTexture:P,compressedTexImage2D:E,compressedTexImage3D:N,texImage2D:I1,texImage3D:_1,updateUBOMapping:D1,uniformBlockBinding:w1,texStorage2D:x1,texStorage3D:P1,texSubImage2D:Y,texSubImage3D:o1,compressedTexSubImage2D:J,compressedTexSubImage3D:T1,scissor:A1,viewport:G1,reset:t2}}function ux(n,e,t,i,r,s,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),u=new S2,c=new WeakMap;let f;const h=new WeakMap;let d=!1;try{d=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(P,E){return d?new OffscreenCanvas(P,E):nr("canvas")}function y(P,E,N){let Y=1;const o1=Q(P);if((o1.width>N||o1.height>N)&&(Y=N/Math.max(o1.width,o1.height)),Y<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const J=Math.floor(Y*o1.width),T1=Math.floor(Y*o1.height);f===void 0&&(f=g(J,T1));const x1=E?g(J,T1):f;return x1.width=J,x1.height=T1,x1.getContext("2d").drawImage(P,0,0,J,T1),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+o1.width+"x"+o1.height+") to ("+J+"x"+T1+")."),x1}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+o1.width+"x"+o1.height+")."),P;return P}function m(P){return P.generateMipmaps}function p(P){n.generateMipmap(P)}function w(P){return P.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?n.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?n.TEXTURE_2D_ARRAY:n.TEXTURE_2D}function M(P,E,N,Y,o1=!1){if(P!==null){if(n[P]!==void 0)return n[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let J=E;if(E===n.RED&&(N===n.FLOAT&&(J=n.R32F),N===n.HALF_FLOAT&&(J=n.R16F),N===n.UNSIGNED_BYTE&&(J=n.R8)),E===n.RED_INTEGER&&(N===n.UNSIGNED_BYTE&&(J=n.R8UI),N===n.UNSIGNED_SHORT&&(J=n.R16UI),N===n.UNSIGNED_INT&&(J=n.R32UI),N===n.BYTE&&(J=n.R8I),N===n.SHORT&&(J=n.R16I),N===n.INT&&(J=n.R32I)),E===n.RG&&(N===n.FLOAT&&(J=n.RG32F),N===n.HALF_FLOAT&&(J=n.RG16F),N===n.UNSIGNED_BYTE&&(J=n.RG8)),E===n.RG_INTEGER&&(N===n.UNSIGNED_BYTE&&(J=n.RG8UI),N===n.UNSIGNED_SHORT&&(J=n.RG16UI),N===n.UNSIGNED_INT&&(J=n.RG32UI),N===n.BYTE&&(J=n.RG8I),N===n.SHORT&&(J=n.RG16I),N===n.INT&&(J=n.RG32I)),E===n.RGB_INTEGER&&(N===n.UNSIGNED_BYTE&&(J=n.RGB8UI),N===n.UNSIGNED_SHORT&&(J=n.RGB16UI),N===n.UNSIGNED_INT&&(J=n.RGB32UI),N===n.BYTE&&(J=n.RGB8I),N===n.SHORT&&(J=n.RGB16I),N===n.INT&&(J=n.RGB32I)),E===n.RGBA_INTEGER&&(N===n.UNSIGNED_BYTE&&(J=n.RGBA8UI),N===n.UNSIGNED_SHORT&&(J=n.RGBA16UI),N===n.UNSIGNED_INT&&(J=n.RGBA32UI),N===n.BYTE&&(J=n.RGBA8I),N===n.SHORT&&(J=n.RGBA16I),N===n.INT&&(J=n.RGBA32I)),E===n.RGB&&N===n.UNSIGNED_INT_5_9_9_9_REV&&(J=n.RGB9_E5),E===n.RGBA){const T1=o1?er:p2.getTransfer(Y);N===n.FLOAT&&(J=n.RGBA32F),N===n.HALF_FLOAT&&(J=n.RGBA16F),N===n.UNSIGNED_BYTE&&(J=T1===b2?n.SRGB8_ALPHA8:n.RGBA8),N===n.UNSIGNED_SHORT_4_4_4_4&&(J=n.RGBA4),N===n.UNSIGNED_SHORT_5_5_5_1&&(J=n.RGB5_A1)}return(J===n.R16F||J===n.R32F||J===n.RG16F||J===n.RG32F||J===n.RGBA16F||J===n.RGBA32F)&&e.get("EXT_color_buffer_float"),J}function _(P,E){let N;return P?E===null||E===jt||E===An?N=n.DEPTH24_STENCIL8:E===Ue?N=n.DEPTH32F_STENCIL8:E===wn&&(N=n.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):E===null||E===jt||E===An?N=n.DEPTH_COMPONENT24:E===Ue?N=n.DEPTH_COMPONENT32F:E===wn&&(N=n.DEPTH_COMPONENT16),N}function A(P,E){return m(P)===!0||P.isFramebufferTexture&&P.minFilter!==ee&&P.minFilter!==pe?Math.log2(Math.max(E.width,E.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?E.mipmaps.length:1}function R(P){const E=P.target;E.removeEventListener("dispose",R),L(E),E.isVideoTexture&&c.delete(E)}function D(P){const E=P.target;E.removeEventListener("dispose",D),b(E)}function L(P){const E=i.get(P);if(E.__webglInit===void 0)return;const N=P.source,Y=h.get(N);if(Y){const o1=Y[E.__cacheKey];o1.usedTimes--,o1.usedTimes===0&&T(P),Object.keys(Y).length===0&&h.delete(N)}i.remove(P)}function T(P){const E=i.get(P);n.deleteTexture(E.__webglTexture);const N=P.source,Y=h.get(N);delete Y[E.__cacheKey],o.memory.textures--}function b(P){const E=i.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),i.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let Y=0;Y<6;Y++){if(Array.isArray(E.__webglFramebuffer[Y]))for(let o1=0;o1<E.__webglFramebuffer[Y].length;o1++)n.deleteFramebuffer(E.__webglFramebuffer[Y][o1]);else n.deleteFramebuffer(E.__webglFramebuffer[Y]);E.__webglDepthbuffer&&n.deleteRenderbuffer(E.__webglDepthbuffer[Y])}else{if(Array.isArray(E.__webglFramebuffer))for(let Y=0;Y<E.__webglFramebuffer.length;Y++)n.deleteFramebuffer(E.__webglFramebuffer[Y]);else n.deleteFramebuffer(E.__webglFramebuffer);if(E.__webglDepthbuffer&&n.deleteRenderbuffer(E.__webglDepthbuffer),E.__webglMultisampledFramebuffer&&n.deleteFramebuffer(E.__webglMultisampledFramebuffer),E.__webglColorRenderbuffer)for(let Y=0;Y<E.__webglColorRenderbuffer.length;Y++)E.__webglColorRenderbuffer[Y]&&n.deleteRenderbuffer(E.__webglColorRenderbuffer[Y]);E.__webglDepthRenderbuffer&&n.deleteRenderbuffer(E.__webglDepthRenderbuffer)}const N=P.textures;for(let Y=0,o1=N.length;Y<o1;Y++){const J=i.get(N[Y]);J.__webglTexture&&(n.deleteTexture(J.__webglTexture),o.memory.textures--),i.remove(N[Y])}i.remove(P)}let U=0;function B(){U=0}function X(){const P=U;return P>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+r.maxTextures),U+=1,P}function K(P){const E=[];return E.push(P.wrapS),E.push(P.wrapT),E.push(P.wrapR||0),E.push(P.magFilter),E.push(P.minFilter),E.push(P.anisotropy),E.push(P.internalFormat),E.push(P.format),E.push(P.type),E.push(P.generateMipmaps),E.push(P.premultiplyAlpha),E.push(P.flipY),E.push(P.unpackAlignment),E.push(P.colorSpace),E.join()}function a1(P,E){const N=i.get(P);if(P.isVideoTexture&&h1(P),P.isRenderTargetTexture===!1&&P.isExternalTexture!==!0&&P.version>0&&N.__version!==P.version){const Y=P.image;if(Y===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Y.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{b1(N,P,E);return}}else P.isExternalTexture&&(N.__webglTexture=P.sourceTexture?P.sourceTexture:null);t.bindTexture(n.TEXTURE_2D,N.__webglTexture,n.TEXTURE0+E)}function z(P,E){const N=i.get(P);if(P.isRenderTargetTexture===!1&&P.version>0&&N.__version!==P.version){b1(N,P,E);return}t.bindTexture(n.TEXTURE_2D_ARRAY,N.__webglTexture,n.TEXTURE0+E)}function r1(P,E){const N=i.get(P);if(P.isRenderTargetTexture===!1&&P.version>0&&N.__version!==P.version){b1(N,P,E);return}t.bindTexture(n.TEXTURE_3D,N.__webglTexture,n.TEXTURE0+E)}function H(P,E){const N=i.get(P);if(P.version>0&&N.__version!==P.version){V(N,P,E);return}t.bindTexture(n.TEXTURE_CUBE_MAP,N.__webglTexture,n.TEXTURE0+E)}const y1={[fo]:n.REPEAT,[Bt]:n.CLAMP_TO_EDGE,[ho]:n.MIRRORED_REPEAT},C1={[ee]:n.NEAREST,[Bm]:n.NEAREST_MIPMAP_NEAREST,[ni]:n.NEAREST_MIPMAP_LINEAR,[pe]:n.LINEAR,[$r]:n.LINEAR_MIPMAP_NEAREST,[kt]:n.LINEAR_MIPMAP_LINEAR},F1={[Vm]:n.NEVER,[jm]:n.ALWAYS,[Gm]:n.LESS,[V6]:n.LEQUAL,[Wm]:n.EQUAL,[qm]:n.GEQUAL,[Xm]:n.GREATER,[$m]:n.NOTEQUAL};function X1(P,E){if(E.type===Ue&&e.has("OES_texture_float_linear")===!1&&(E.magFilter===pe||E.magFilter===$r||E.magFilter===ni||E.magFilter===kt||E.minFilter===pe||E.minFilter===$r||E.minFilter===ni||E.minFilter===kt)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),n.texParameteri(P,n.TEXTURE_WRAP_S,y1[E.wrapS]),n.texParameteri(P,n.TEXTURE_WRAP_T,y1[E.wrapT]),(P===n.TEXTURE_3D||P===n.TEXTURE_2D_ARRAY)&&n.texParameteri(P,n.TEXTURE_WRAP_R,y1[E.wrapR]),n.texParameteri(P,n.TEXTURE_MAG_FILTER,C1[E.magFilter]),n.texParameteri(P,n.TEXTURE_MIN_FILTER,C1[E.minFilter]),E.compareFunction&&(n.texParameteri(P,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(P,n.TEXTURE_COMPARE_FUNC,F1[E.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(E.magFilter===ee||E.minFilter!==ni&&E.minFilter!==kt||E.type===Ue&&e.has("OES_texture_float_linear")===!1)return;if(E.anisotropy>1||i.get(E).__currentAnisotropy){const N=e.get("EXT_texture_filter_anisotropic");n.texParameterf(P,N.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,r.getMaxAnisotropy())),i.get(E).__currentAnisotropy=E.anisotropy}}}function u2(P,E){let N=!1;P.__webglInit===void 0&&(P.__webglInit=!0,E.addEventListener("dispose",R));const Y=E.source;let o1=h.get(Y);o1===void 0&&(o1={},h.set(Y,o1));const J=K(E);if(J!==P.__cacheKey){o1[J]===void 0&&(o1[J]={texture:n.createTexture(),usedTimes:0},o.memory.textures++,N=!0),o1[J].usedTimes++;const T1=o1[P.__cacheKey];T1!==void 0&&(o1[P.__cacheKey].usedTimes--,T1.usedTimes===0&&T(E)),P.__cacheKey=J,P.__webglTexture=o1[J].texture}return N}function o2(P,E,N){return Math.floor(Math.floor(P/N)/E)}function c1(P,E,N,Y){const J=P.updateRanges;if(J.length===0)t.texSubImage2D(n.TEXTURE_2D,0,0,0,E.width,E.height,N,Y,E.data);else{J.sort((_1,A1)=>_1.start-A1.start);let T1=0;for(let _1=1;_1<J.length;_1++){const A1=J[T1],G1=J[_1],D1=A1.start+A1.count,w1=o2(G1.start,E.width,4),t2=o2(A1.start,E.width,4);G1.start<=D1+1&&w1===t2&&o2(G1.start+G1.count-1,E.width,4)===w1?A1.count=Math.max(A1.count,G1.start+G1.count-A1.start):(++T1,J[T1]=G1)}J.length=T1+1;const x1=n.getParameter(n.UNPACK_ROW_LENGTH),P1=n.getParameter(n.UNPACK_SKIP_PIXELS),I1=n.getParameter(n.UNPACK_SKIP_ROWS);n.pixelStorei(n.UNPACK_ROW_LENGTH,E.width);for(let _1=0,A1=J.length;_1<A1;_1++){const G1=J[_1],D1=Math.floor(G1.start/4),w1=Math.ceil(G1.count/4),t2=D1%E.width,G=Math.floor(D1/E.width),S1=w1,R1=1;n.pixelStorei(n.UNPACK_SKIP_PIXELS,t2),n.pixelStorei(n.UNPACK_SKIP_ROWS,G),t.texSubImage2D(n.TEXTURE_2D,0,t2,G,S1,R1,N,Y,E.data)}P.clearUpdateRanges(),n.pixelStorei(n.UNPACK_ROW_LENGTH,x1),n.pixelStorei(n.UNPACK_SKIP_PIXELS,P1),n.pixelStorei(n.UNPACK_SKIP_ROWS,I1)}}function b1(P,E,N){let Y=n.TEXTURE_2D;(E.isDataArrayTexture||E.isCompressedArrayTexture)&&(Y=n.TEXTURE_2D_ARRAY),E.isData3DTexture&&(Y=n.TEXTURE_3D);const o1=u2(P,E),J=E.source;t.bindTexture(Y,P.__webglTexture,n.TEXTURE0+N);const T1=i.get(J);if(J.version!==T1.__version||o1===!0){t.activeTexture(n.TEXTURE0+N);const x1=p2.getPrimaries(p2.workingColorSpace),P1=E.colorSpace===lt?null:p2.getPrimaries(E.colorSpace),I1=E.colorSpace===lt||x1===P1?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,E.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,E.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,I1);let _1=y(E.image,!1,r.maxTextureSize);_1=d1(E,_1);const A1=s.convert(E.format,E.colorSpace),G1=s.convert(E.type);let D1=M(E.internalFormat,A1,G1,E.colorSpace,E.isVideoTexture);X1(Y,E);let w1;const t2=E.mipmaps,G=E.isVideoTexture!==!0,S1=T1.__version===void 0||o1===!0,R1=J.dataReady,N1=A(E,_1);if(E.isDepthTexture)D1=_(E.format===Rn,E.type),S1&&(G?t.texStorage2D(n.TEXTURE_2D,1,D1,_1.width,_1.height):t.texImage2D(n.TEXTURE_2D,0,D1,_1.width,_1.height,0,A1,G1,null));else if(E.isDataTexture)if(t2.length>0){G&&S1&&t.texStorage2D(n.TEXTURE_2D,N1,D1,t2[0].width,t2[0].height);for(let M1=0,p1=t2.length;M1<p1;M1++)w1=t2[M1],G?R1&&t.texSubImage2D(n.TEXTURE_2D,M1,0,0,w1.width,w1.height,A1,G1,w1.data):t.texImage2D(n.TEXTURE_2D,M1,D1,w1.width,w1.height,0,A1,G1,w1.data);E.generateMipmaps=!1}else G?(S1&&t.texStorage2D(n.TEXTURE_2D,N1,D1,_1.width,_1.height),R1&&c1(E,_1,A1,G1)):t.texImage2D(n.TEXTURE_2D,0,D1,_1.width,_1.height,0,A1,G1,_1.data);else if(E.isCompressedTexture)if(E.isCompressedArrayTexture){G&&S1&&t.texStorage3D(n.TEXTURE_2D_ARRAY,N1,D1,t2[0].width,t2[0].height,_1.depth);for(let M1=0,p1=t2.length;M1<p1;M1++)if(w1=t2[M1],E.format!==J3)if(A1!==null)if(G){if(R1)if(E.layerUpdates.size>0){const k1=R9(w1.width,w1.height,E.format,E.type);for(const $1 of E.layerUpdates){const E2=w1.data.subarray($1*k1/w1.data.BYTES_PER_ELEMENT,($1+1)*k1/w1.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,M1,0,0,$1,w1.width,w1.height,1,A1,E2)}E.clearLayerUpdates()}else t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,M1,0,0,0,w1.width,w1.height,_1.depth,A1,w1.data)}else t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,M1,D1,w1.width,w1.height,_1.depth,0,w1.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else G?R1&&t.texSubImage3D(n.TEXTURE_2D_ARRAY,M1,0,0,0,w1.width,w1.height,_1.depth,A1,G1,w1.data):t.texImage3D(n.TEXTURE_2D_ARRAY,M1,D1,w1.width,w1.height,_1.depth,0,A1,G1,w1.data)}else{G&&S1&&t.texStorage2D(n.TEXTURE_2D,N1,D1,t2[0].width,t2[0].height);for(let M1=0,p1=t2.length;M1<p1;M1++)w1=t2[M1],E.format!==J3?A1!==null?G?R1&&t.compressedTexSubImage2D(n.TEXTURE_2D,M1,0,0,w1.width,w1.height,A1,w1.data):t.compressedTexImage2D(n.TEXTURE_2D,M1,D1,w1.width,w1.height,0,w1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):G?R1&&t.texSubImage2D(n.TEXTURE_2D,M1,0,0,w1.width,w1.height,A1,G1,w1.data):t.texImage2D(n.TEXTURE_2D,M1,D1,w1.width,w1.height,0,A1,G1,w1.data)}else if(E.isDataArrayTexture)if(G){if(S1&&t.texStorage3D(n.TEXTURE_2D_ARRAY,N1,D1,_1.width,_1.height,_1.depth),R1)if(E.layerUpdates.size>0){const M1=R9(_1.width,_1.height,E.format,E.type);for(const p1 of E.layerUpdates){const k1=_1.data.subarray(p1*M1/_1.data.BYTES_PER_ELEMENT,(p1+1)*M1/_1.data.BYTES_PER_ELEMENT);t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,p1,_1.width,_1.height,1,A1,G1,k1)}E.clearLayerUpdates()}else t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,_1.width,_1.height,_1.depth,A1,G1,_1.data)}else t.texImage3D(n.TEXTURE_2D_ARRAY,0,D1,_1.width,_1.height,_1.depth,0,A1,G1,_1.data);else if(E.isData3DTexture)G?(S1&&t.texStorage3D(n.TEXTURE_3D,N1,D1,_1.width,_1.height,_1.depth),R1&&t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,_1.width,_1.height,_1.depth,A1,G1,_1.data)):t.texImage3D(n.TEXTURE_3D,0,D1,_1.width,_1.height,_1.depth,0,A1,G1,_1.data);else if(E.isFramebufferTexture){if(S1)if(G)t.texStorage2D(n.TEXTURE_2D,N1,D1,_1.width,_1.height);else{let M1=_1.width,p1=_1.height;for(let k1=0;k1<N1;k1++)t.texImage2D(n.TEXTURE_2D,k1,D1,M1,p1,0,A1,G1,null),M1>>=1,p1>>=1}}else if(t2.length>0){if(G&&S1){const M1=Q(t2[0]);t.texStorage2D(n.TEXTURE_2D,N1,D1,M1.width,M1.height)}for(let M1=0,p1=t2.length;M1<p1;M1++)w1=t2[M1],G?R1&&t.texSubImage2D(n.TEXTURE_2D,M1,0,0,A1,G1,w1):t.texImage2D(n.TEXTURE_2D,M1,D1,A1,G1,w1);E.generateMipmaps=!1}else if(G){if(S1){const M1=Q(_1);t.texStorage2D(n.TEXTURE_2D,N1,D1,M1.width,M1.height)}R1&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,A1,G1,_1)}else t.texImage2D(n.TEXTURE_2D,0,D1,A1,G1,_1);m(E)&&p(Y),T1.__version=J.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function V(P,E,N){if(E.image.length!==6)return;const Y=u2(P,E),o1=E.source;t.bindTexture(n.TEXTURE_CUBE_MAP,P.__webglTexture,n.TEXTURE0+N);const J=i.get(o1);if(o1.version!==J.__version||Y===!0){t.activeTexture(n.TEXTURE0+N);const T1=p2.getPrimaries(p2.workingColorSpace),x1=E.colorSpace===lt?null:p2.getPrimaries(E.colorSpace),P1=E.colorSpace===lt||T1===x1?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,E.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,E.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,P1);const I1=E.isCompressedTexture||E.image[0].isCompressedTexture,_1=E.image[0]&&E.image[0].isDataTexture,A1=[];for(let p1=0;p1<6;p1++)!I1&&!_1?A1[p1]=y(E.image[p1],!0,r.maxCubemapSize):A1[p1]=_1?E.image[p1].image:E.image[p1],A1[p1]=d1(E,A1[p1]);const G1=A1[0],D1=s.convert(E.format,E.colorSpace),w1=s.convert(E.type),t2=M(E.internalFormat,D1,w1,E.colorSpace),G=E.isVideoTexture!==!0,S1=J.__version===void 0||Y===!0,R1=o1.dataReady;let N1=A(E,G1);X1(n.TEXTURE_CUBE_MAP,E);let M1;if(I1){G&&S1&&t.texStorage2D(n.TEXTURE_CUBE_MAP,N1,t2,G1.width,G1.height);for(let p1=0;p1<6;p1++){M1=A1[p1].mipmaps;for(let k1=0;k1<M1.length;k1++){const $1=M1[k1];E.format!==J3?D1!==null?G?R1&&t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,k1,0,0,$1.width,$1.height,D1,$1.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,k1,t2,$1.width,$1.height,0,$1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):G?R1&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,k1,0,0,$1.width,$1.height,D1,w1,$1.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,k1,t2,$1.width,$1.height,0,D1,w1,$1.data)}}}else{if(M1=E.mipmaps,G&&S1){M1.length>0&&N1++;const p1=Q(A1[0]);t.texStorage2D(n.TEXTURE_CUBE_MAP,N1,t2,p1.width,p1.height)}for(let p1=0;p1<6;p1++)if(_1){G?R1&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,0,0,0,A1[p1].width,A1[p1].height,D1,w1,A1[p1].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,0,t2,A1[p1].width,A1[p1].height,0,D1,w1,A1[p1].data);for(let k1=0;k1<M1.length;k1++){const E2=M1[k1].image[p1].image;G?R1&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,k1+1,0,0,E2.width,E2.height,D1,w1,E2.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,k1+1,t2,E2.width,E2.height,0,D1,w1,E2.data)}}else{G?R1&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,0,0,0,D1,w1,A1[p1]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,0,t2,D1,w1,A1[p1]);for(let k1=0;k1<M1.length;k1++){const $1=M1[k1];G?R1&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,k1+1,0,0,D1,w1,$1.image[p1]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+p1,k1+1,t2,D1,w1,$1.image[p1])}}}m(E)&&p(n.TEXTURE_CUBE_MAP),J.__version=o1.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function f1(P,E,N,Y,o1,J){const T1=s.convert(N.format,N.colorSpace),x1=s.convert(N.type),P1=M(N.internalFormat,T1,x1,N.colorSpace),I1=i.get(E),_1=i.get(N);if(_1.__renderTarget=E,!I1.__hasExternalTextures){const A1=Math.max(1,E.width>>J),G1=Math.max(1,E.height>>J);o1===n.TEXTURE_3D||o1===n.TEXTURE_2D_ARRAY?t.texImage3D(o1,J,P1,A1,G1,E.depth,0,T1,x1,null):t.texImage2D(o1,J,P1,A1,G1,0,T1,x1,null)}t.bindFramebuffer(n.FRAMEBUFFER,P),e1(E)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,Y,o1,_1.__webglTexture,0,l1(E)):(o1===n.TEXTURE_2D||o1>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&o1<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,Y,o1,_1.__webglTexture,J),t.bindFramebuffer(n.FRAMEBUFFER,null)}function u1(P,E,N){if(n.bindRenderbuffer(n.RENDERBUFFER,P),E.depthBuffer){const Y=E.depthTexture,o1=Y&&Y.isDepthTexture?Y.type:null,J=_(E.stencilBuffer,o1),T1=E.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,x1=l1(E);e1(E)?a.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,x1,J,E.width,E.height):N?n.renderbufferStorageMultisample(n.RENDERBUFFER,x1,J,E.width,E.height):n.renderbufferStorage(n.RENDERBUFFER,J,E.width,E.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,T1,n.RENDERBUFFER,P)}else{const Y=E.textures;for(let o1=0;o1<Y.length;o1++){const J=Y[o1],T1=s.convert(J.format,J.colorSpace),x1=s.convert(J.type),P1=M(J.internalFormat,T1,x1,J.colorSpace),I1=l1(E);N&&e1(E)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,I1,P1,E.width,E.height):e1(E)?a.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,I1,P1,E.width,E.height):n.renderbufferStorage(n.RENDERBUFFER,P1,E.width,E.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function g1(P,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,P),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Y=i.get(E.depthTexture);Y.__renderTarget=E,(!Y.__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),a1(E.depthTexture,0);const o1=Y.__webglTexture,J=l1(E);if(E.depthTexture.format===Cn)e1(E)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,o1,0,J):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,o1,0);else if(E.depthTexture.format===Rn)e1(E)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,o1,0,J):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,o1,0);else throw new Error("Unknown depthTexture format")}function z1(P){const E=i.get(P),N=P.isWebGLCubeRenderTarget===!0;if(E.__boundDepthTexture!==P.depthTexture){const Y=P.depthTexture;if(E.__depthDisposeCallback&&E.__depthDisposeCallback(),Y){const o1=()=>{delete E.__boundDepthTexture,delete E.__depthDisposeCallback,Y.removeEventListener("dispose",o1)};Y.addEventListener("dispose",o1),E.__depthDisposeCallback=o1}E.__boundDepthTexture=Y}if(P.depthTexture&&!E.__autoAllocateDepthBuffer){if(N)throw new Error("target.depthTexture not supported in Cube render targets");const Y=P.texture.mipmaps;Y&&Y.length>0?g1(E.__webglFramebuffer[0],P):g1(E.__webglFramebuffer,P)}else if(N){E.__webglDepthbuffer=[];for(let Y=0;Y<6;Y++)if(t.bindFramebuffer(n.FRAMEBUFFER,E.__webglFramebuffer[Y]),E.__webglDepthbuffer[Y]===void 0)E.__webglDepthbuffer[Y]=n.createRenderbuffer(),u1(E.__webglDepthbuffer[Y],P,!1);else{const o1=P.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,J=E.__webglDepthbuffer[Y];n.bindRenderbuffer(n.RENDERBUFFER,J),n.framebufferRenderbuffer(n.FRAMEBUFFER,o1,n.RENDERBUFFER,J)}}else{const Y=P.texture.mipmaps;if(Y&&Y.length>0?t.bindFramebuffer(n.FRAMEBUFFER,E.__webglFramebuffer[0]):t.bindFramebuffer(n.FRAMEBUFFER,E.__webglFramebuffer),E.__webglDepthbuffer===void 0)E.__webglDepthbuffer=n.createRenderbuffer(),u1(E.__webglDepthbuffer,P,!1);else{const o1=P.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,J=E.__webglDepthbuffer;n.bindRenderbuffer(n.RENDERBUFFER,J),n.framebufferRenderbuffer(n.FRAMEBUFFER,o1,n.RENDERBUFFER,J)}}t.bindFramebuffer(n.FRAMEBUFFER,null)}function B1(P,E,N){const Y=i.get(P);E!==void 0&&f1(Y.__webglFramebuffer,P,P.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),N!==void 0&&z1(P)}function S(P){const E=P.texture,N=i.get(P),Y=i.get(E);P.addEventListener("dispose",D);const o1=P.textures,J=P.isWebGLCubeRenderTarget===!0,T1=o1.length>1;if(T1||(Y.__webglTexture===void 0&&(Y.__webglTexture=n.createTexture()),Y.__version=E.version,o.memory.textures++),J){N.__webglFramebuffer=[];for(let x1=0;x1<6;x1++)if(E.mipmaps&&E.mipmaps.length>0){N.__webglFramebuffer[x1]=[];for(let P1=0;P1<E.mipmaps.length;P1++)N.__webglFramebuffer[x1][P1]=n.createFramebuffer()}else N.__webglFramebuffer[x1]=n.createFramebuffer()}else{if(E.mipmaps&&E.mipmaps.length>0){N.__webglFramebuffer=[];for(let x1=0;x1<E.mipmaps.length;x1++)N.__webglFramebuffer[x1]=n.createFramebuffer()}else N.__webglFramebuffer=n.createFramebuffer();if(T1)for(let x1=0,P1=o1.length;x1<P1;x1++){const I1=i.get(o1[x1]);I1.__webglTexture===void 0&&(I1.__webglTexture=n.createTexture(),o.memory.textures++)}if(P.samples>0&&e1(P)===!1){N.__webglMultisampledFramebuffer=n.createFramebuffer(),N.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,N.__webglMultisampledFramebuffer);for(let x1=0;x1<o1.length;x1++){const P1=o1[x1];N.__webglColorRenderbuffer[x1]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,N.__webglColorRenderbuffer[x1]);const I1=s.convert(P1.format,P1.colorSpace),_1=s.convert(P1.type),A1=M(P1.internalFormat,I1,_1,P1.colorSpace,P.isXRRenderTarget===!0),G1=l1(P);n.renderbufferStorageMultisample(n.RENDERBUFFER,G1,A1,P.width,P.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+x1,n.RENDERBUFFER,N.__webglColorRenderbuffer[x1])}n.bindRenderbuffer(n.RENDERBUFFER,null),P.depthBuffer&&(N.__webglDepthRenderbuffer=n.createRenderbuffer(),u1(N.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(J){t.bindTexture(n.TEXTURE_CUBE_MAP,Y.__webglTexture),X1(n.TEXTURE_CUBE_MAP,E);for(let x1=0;x1<6;x1++)if(E.mipmaps&&E.mipmaps.length>0)for(let P1=0;P1<E.mipmaps.length;P1++)f1(N.__webglFramebuffer[x1][P1],P,E,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+x1,P1);else f1(N.__webglFramebuffer[x1],P,E,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+x1,0);m(E)&&p(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(T1){for(let x1=0,P1=o1.length;x1<P1;x1++){const I1=o1[x1],_1=i.get(I1);let A1=n.TEXTURE_2D;(P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(A1=P.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(A1,_1.__webglTexture),X1(A1,I1),f1(N.__webglFramebuffer,P,I1,n.COLOR_ATTACHMENT0+x1,A1,0),m(I1)&&p(A1)}t.unbindTexture()}else{let x1=n.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(x1=P.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(x1,Y.__webglTexture),X1(x1,E),E.mipmaps&&E.mipmaps.length>0)for(let P1=0;P1<E.mipmaps.length;P1++)f1(N.__webglFramebuffer[P1],P,E,n.COLOR_ATTACHMENT0,x1,P1);else f1(N.__webglFramebuffer,P,E,n.COLOR_ATTACHMENT0,x1,0);m(E)&&p(x1),t.unbindTexture()}P.depthBuffer&&z1(P)}function F(P){const E=P.textures;for(let N=0,Y=E.length;N<Y;N++){const o1=E[N];if(m(o1)){const J=w(P),T1=i.get(o1).__webglTexture;t.bindTexture(J,T1),p(J),t.unbindTexture()}}}const k=[],s1=[];function q(P){if(P.samples>0){if(e1(P)===!1){const E=P.textures,N=P.width,Y=P.height;let o1=n.COLOR_BUFFER_BIT;const J=P.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,T1=i.get(P),x1=E.length>1;if(x1)for(let I1=0;I1<E.length;I1++)t.bindFramebuffer(n.FRAMEBUFFER,T1.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+I1,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,T1.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+I1,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,T1.__webglMultisampledFramebuffer);const P1=P.texture.mipmaps;P1&&P1.length>0?t.bindFramebuffer(n.DRAW_FRAMEBUFFER,T1.__webglFramebuffer[0]):t.bindFramebuffer(n.DRAW_FRAMEBUFFER,T1.__webglFramebuffer);for(let I1=0;I1<E.length;I1++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(o1|=n.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(o1|=n.STENCIL_BUFFER_BIT)),x1){n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,T1.__webglColorRenderbuffer[I1]);const _1=i.get(E[I1]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,_1,0)}n.blitFramebuffer(0,0,N,Y,0,0,N,Y,o1,n.NEAREST),l===!0&&(k.length=0,s1.length=0,k.push(n.COLOR_ATTACHMENT0+I1),P.depthBuffer&&P.resolveDepthBuffer===!1&&(k.push(J),s1.push(J),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,s1)),n.invalidateFramebuffer(n.READ_FRAMEBUFFER,k))}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),x1)for(let I1=0;I1<E.length;I1++){t.bindFramebuffer(n.FRAMEBUFFER,T1.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+I1,n.RENDERBUFFER,T1.__webglColorRenderbuffer[I1]);const _1=i.get(E[I1]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,T1.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+I1,n.TEXTURE_2D,_1,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,T1.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&l){const E=P.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[E])}}}function l1(P){return Math.min(r.maxSamples,P.samples)}function e1(P){const E=i.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function h1(P){const E=o.render.frame;c.get(P)!==E&&(c.set(P,E),P.update())}function d1(P,E){const N=P.colorSpace,Y=P.format,o1=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||N!==V0&&N!==lt&&(p2.getTransfer(N)===b2?(Y!==J3||o1!==ze)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",N)),E}function Q(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(u.width=P.naturalWidth||P.width,u.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(u.width=P.displayWidth,u.height=P.displayHeight):(u.width=P.width,u.height=P.height),u}this.allocateTextureUnit=X,this.resetTextureUnits=B,this.setTexture2D=a1,this.setTexture2DArray=z,this.setTexture3D=r1,this.setTextureCube=H,this.rebindTextures=B1,this.setupRenderTarget=S,this.updateRenderTargetMipmap=F,this.updateMultisampleRenderTarget=q,this.setupDepthRenderbuffer=z1,this.setupFrameBufferTexture=f1,this.useMultisampledRTT=e1}function fx(n,e){function t(i,r=lt){let s;const o=p2.getTransfer(r);if(i===ze)return n.UNSIGNED_BYTE;if(i===Ea)return n.UNSIGNED_SHORT_4_4_4_4;if(i===ba)return n.UNSIGNED_SHORT_5_5_5_1;if(i===O6)return n.UNSIGNED_INT_5_9_9_9_REV;if(i===D6)return n.BYTE;if(i===U6)return n.SHORT;if(i===wn)return n.UNSIGNED_SHORT;if(i===Sa)return n.INT;if(i===jt)return n.UNSIGNED_INT;if(i===Ue)return n.FLOAT;if(i===Fn)return n.HALF_FLOAT;if(i===F6)return n.ALPHA;if(i===N6)return n.RGB;if(i===J3)return n.RGBA;if(i===Cn)return n.DEPTH_COMPONENT;if(i===Rn)return n.DEPTH_STENCIL;if(i===B6)return n.RED;if(i===Ta)return n.RED_INTEGER;if(i===k6)return n.RG;if(i===wa)return n.RG_INTEGER;if(i===Aa)return n.RGBA_INTEGER;if(i===Ri||i===Pi||i===Li||i===Ii)if(o===b2)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(i===Ri)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Pi)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===Li)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Ii)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(i===Ri)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Pi)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Li)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Ii)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===po||i===mo||i===_o||i===go)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(i===po)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===mo)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===_o)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===go)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===vo||i===yo||i===xo)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(i===vo||i===yo)return o===b2?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===xo)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Mo||i===So||i===Eo||i===bo||i===To||i===wo||i===Ao||i===Co||i===Ro||i===Po||i===Lo||i===Io||i===Do||i===Uo)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(i===Mo)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===So)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Eo)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===bo)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===To)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===wo)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Ao)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Co)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Ro)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Po)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Lo)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Io)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Do)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Uo)return o===b2?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===Di||i===Oo||i===Fo)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(i===Di)return o===b2?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Oo)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Fo)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===H6||i===No||i===Bo||i===ko)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(i===Di)return s.COMPRESSED_RED_RGTC1_EXT;if(i===No)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Bo)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===ko)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===An?n.UNSIGNED_INT_24_8:n[i]!==void 0?n[i]:null}return{convert:t}}class o5 extends S3{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}}const hx=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,dx=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class px{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t){if(this.texture===null){const i=new o5(e.texture);(e.depthNear!==t.depthNear||e.depthFar!==t.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new _t({vertexShader:hx,fragmentShader:dx,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new _e(new Mr(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class mx extends $0{constructor(e,t){super();const i=this;let r=null,s=1,o=null,a="local-floor",l=1,u=null,c=null,f=null,h=null,d=null,g=null;const y=new px,m={},p=t.getContextAttributes();let w=null,M=null;const _=[],A=[],R=new S2;let D=null;const L=new z3;L.viewport=new N2;const T=new z3;T.viewport=new N2;const b=[L,T],U=new F8;let B=null,X=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(c1){let b1=_[c1];return b1===void 0&&(b1=new ms,_[c1]=b1),b1.getTargetRaySpace()},this.getControllerGrip=function(c1){let b1=_[c1];return b1===void 0&&(b1=new ms,_[c1]=b1),b1.getGripSpace()},this.getHand=function(c1){let b1=_[c1];return b1===void 0&&(b1=new ms,_[c1]=b1),b1.getHandSpace()};function K(c1){const b1=A.indexOf(c1.inputSource);if(b1===-1)return;const V=_[b1];V!==void 0&&(V.update(c1.inputSource,c1.frame,u||o),V.dispatchEvent({type:c1.type,data:c1.inputSource}))}function a1(){r.removeEventListener("select",K),r.removeEventListener("selectstart",K),r.removeEventListener("selectend",K),r.removeEventListener("squeeze",K),r.removeEventListener("squeezestart",K),r.removeEventListener("squeezeend",K),r.removeEventListener("end",a1),r.removeEventListener("inputsourceschange",z);for(let c1=0;c1<_.length;c1++){const b1=A[c1];b1!==null&&(A[c1]=null,_[c1].disconnect(b1))}B=null,X=null,y.reset();for(const c1 in m)delete m[c1];e.setRenderTarget(w),d=null,h=null,f=null,r=null,M=null,o2.stop(),i.isPresenting=!1,e.setPixelRatio(D),e.setSize(R.width,R.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(c1){s=c1,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(c1){a=c1,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||o},this.setReferenceSpace=function(c1){u=c1},this.getBaseLayer=function(){return h!==null?h:d},this.getBinding=function(){return f},this.getFrame=function(){return g},this.getSession=function(){return r},this.setSession=async function(c1){if(r=c1,r!==null){if(w=e.getRenderTarget(),r.addEventListener("select",K),r.addEventListener("selectstart",K),r.addEventListener("selectend",K),r.addEventListener("squeeze",K),r.addEventListener("squeezestart",K),r.addEventListener("squeezeend",K),r.addEventListener("end",a1),r.addEventListener("inputsourceschange",z),p.xrCompatible!==!0&&await t.makeXRCompatible(),D=e.getPixelRatio(),e.getSize(R),typeof XRWebGLBinding<"u"&&(f=new XRWebGLBinding(r,t)),f!==null&&"createProjectionLayer"in XRWebGLBinding.prototype){let V=null,f1=null,u1=null;p.depth&&(u1=p.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,V=p.stencil?Rn:Cn,f1=p.stencil?An:jt);const g1={colorFormat:t.RGBA8,depthFormat:u1,scaleFactor:s};h=f.createProjectionLayer(g1),r.updateRenderState({layers:[h]}),e.setPixelRatio(1),e.setSize(h.textureWidth,h.textureHeight,!1),M=new Yt(h.textureWidth,h.textureHeight,{format:J3,type:ze,depthTexture:new e5(h.textureWidth,h.textureHeight,f1,void 0,void 0,void 0,void 0,void 0,void 0,V),stencilBuffer:p.stencil,colorSpace:e.outputColorSpace,samples:p.antialias?4:0,resolveDepthBuffer:h.ignoreDepthValues===!1,resolveStencilBuffer:h.ignoreDepthValues===!1})}else{const V={antialias:p.antialias,alpha:!0,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,t,V),r.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),M=new Yt(d.framebufferWidth,d.framebufferHeight,{format:J3,type:ze,colorSpace:e.outputColorSpace,stencilBuffer:p.stencil,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}M.isXRRenderTarget=!0,this.setFoveation(l),u=null,o=await r.requestReferenceSpace(a),o2.setContext(r),o2.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode},this.getDepthTexture=function(){return y.getDepthTexture()};function z(c1){for(let b1=0;b1<c1.removed.length;b1++){const V=c1.removed[b1],f1=A.indexOf(V);f1>=0&&(A[f1]=null,_[f1].disconnect(V))}for(let b1=0;b1<c1.added.length;b1++){const V=c1.added[b1];let f1=A.indexOf(V);if(f1===-1){for(let g1=0;g1<_.length;g1++)if(g1>=A.length){A.push(V),f1=g1;break}else if(A[g1]===null){A[g1]=V,f1=g1;break}if(f1===-1)break}const u1=_[f1];u1&&u1.connect(V)}}const r1=new i1,H=new i1;function y1(c1,b1,V){r1.setFromMatrixPosition(b1.matrixWorld),H.setFromMatrixPosition(V.matrixWorld);const f1=r1.distanceTo(H),u1=b1.projectionMatrix.elements,g1=V.projectionMatrix.elements,z1=u1[14]/(u1[10]-1),B1=u1[14]/(u1[10]+1),S=(u1[9]+1)/u1[5],F=(u1[9]-1)/u1[5],k=(u1[8]-1)/u1[0],s1=(g1[8]+1)/g1[0],q=z1*k,l1=z1*s1,e1=f1/(-k+s1),h1=e1*-k;if(b1.matrixWorld.decompose(c1.position,c1.quaternion,c1.scale),c1.translateX(h1),c1.translateZ(e1),c1.matrixWorld.compose(c1.position,c1.quaternion,c1.scale),c1.matrixWorldInverse.copy(c1.matrixWorld).invert(),u1[10]===-1)c1.projectionMatrix.copy(b1.projectionMatrix),c1.projectionMatrixInverse.copy(b1.projectionMatrixInverse);else{const d1=z1+e1,Q=B1+e1,P=q-h1,E=l1+(f1-h1),N=S*B1/Q*d1,Y=F*B1/Q*d1;c1.projectionMatrix.makePerspective(P,E,N,Y,d1,Q),c1.projectionMatrixInverse.copy(c1.projectionMatrix).invert()}}function C1(c1,b1){b1===null?c1.matrixWorld.copy(c1.matrix):c1.matrixWorld.multiplyMatrices(b1.matrixWorld,c1.matrix),c1.matrixWorldInverse.copy(c1.matrixWorld).invert()}this.updateCamera=function(c1){if(r===null)return;let b1=c1.near,V=c1.far;y.texture!==null&&(y.depthNear>0&&(b1=y.depthNear),y.depthFar>0&&(V=y.depthFar)),U.near=T.near=L.near=b1,U.far=T.far=L.far=V,(B!==U.near||X!==U.far)&&(r.updateRenderState({depthNear:U.near,depthFar:U.far}),B=U.near,X=U.far),U.layers.mask=c1.layers.mask|6,L.layers.mask=U.layers.mask&3,T.layers.mask=U.layers.mask&5;const f1=c1.parent,u1=U.cameras;C1(U,f1);for(let g1=0;g1<u1.length;g1++)C1(u1[g1],f1);u1.length===2?y1(U,L,T):U.projectionMatrix.copy(L.projectionMatrix),F1(c1,U,f1)};function F1(c1,b1,V){V===null?c1.matrix.copy(b1.matrixWorld):(c1.matrix.copy(V.matrixWorld),c1.matrix.invert(),c1.matrix.multiply(b1.matrixWorld)),c1.matrix.decompose(c1.position,c1.quaternion,c1.scale),c1.updateMatrixWorld(!0),c1.projectionMatrix.copy(b1.projectionMatrix),c1.projectionMatrixInverse.copy(b1.projectionMatrixInverse),c1.isPerspectiveCamera&&(c1.fov=Ho*2*Math.atan(1/c1.projectionMatrix.elements[5]),c1.zoom=1)}this.getCamera=function(){return U},this.getFoveation=function(){if(!(h===null&&d===null))return l},this.setFoveation=function(c1){l=c1,h!==null&&(h.fixedFoveation=c1),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=c1)},this.hasDepthSensing=function(){return y.texture!==null},this.getDepthSensingMesh=function(){return y.getMesh(U)},this.getCameraTexture=function(c1){return m[c1]};let X1=null;function u2(c1,b1){if(c=b1.getViewerPose(u||o),g=b1,c!==null){const V=c.views;d!==null&&(e.setRenderTargetFramebuffer(M,d.framebuffer),e.setRenderTarget(M));let f1=!1;V.length!==U.cameras.length&&(U.cameras.length=0,f1=!0);for(let B1=0;B1<V.length;B1++){const S=V[B1];let F=null;if(d!==null)F=d.getViewport(S);else{const s1=f.getViewSubImage(h,S);F=s1.viewport,B1===0&&(e.setRenderTargetTextures(M,s1.colorTexture,s1.depthStencilTexture),e.setRenderTarget(M))}let k=b[B1];k===void 0&&(k=new z3,k.layers.enable(B1),k.viewport=new N2,b[B1]=k),k.matrix.fromArray(S.transform.matrix),k.matrix.decompose(k.position,k.quaternion,k.scale),k.projectionMatrix.fromArray(S.projectionMatrix),k.projectionMatrixInverse.copy(k.projectionMatrix).invert(),k.viewport.set(F.x,F.y,F.width,F.height),B1===0&&(U.matrix.copy(k.matrix),U.matrix.decompose(U.position,U.quaternion,U.scale)),f1===!0&&U.cameras.push(k)}const u1=r.enabledFeatures;if(u1&&u1.includes("depth-sensing")&&r.depthUsage=="gpu-optimized"&&f){const B1=f.getDepthInformation(V[0]);B1&&B1.isValid&&B1.texture&&y.init(B1,r.renderState)}if(u1&&u1.includes("camera-access")&&(e.state.unbindTexture(),f))for(let B1=0;B1<V.length;B1++){const S=V[B1].camera;if(S){let F=m[S];F||(F=new o5,m[S]=F);const k=f.getCameraImage(S);F.sourceTexture=k}}}for(let V=0;V<_.length;V++){const f1=A[V],u1=_[V];f1!==null&&u1!==void 0&&u1.update(f1,b1,u||o)}X1&&X1(c1,b1),b1.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:b1}),g=null}const o2=new t5;o2.setAnimationLoop(u2),this.setAnimationLoop=function(c1){X1=c1},this.dispose=function(){}}}const Rt=new Ve,_x=new V2;function gx(n,e){function t(m,p){m.matrixAutoUpdate===!0&&m.updateMatrix(),p.value.copy(m.matrix)}function i(m,p){p.color.getRGB(m.fogColor.value,K6(n)),p.isFog?(m.fogNear.value=p.near,m.fogFar.value=p.far):p.isFogExp2&&(m.fogDensity.value=p.density)}function r(m,p,w,M,_){p.isMeshBasicMaterial||p.isMeshLambertMaterial?s(m,p):p.isMeshToonMaterial?(s(m,p),f(m,p)):p.isMeshPhongMaterial?(s(m,p),c(m,p)):p.isMeshStandardMaterial?(s(m,p),h(m,p),p.isMeshPhysicalMaterial&&d(m,p,_)):p.isMeshMatcapMaterial?(s(m,p),g(m,p)):p.isMeshDepthMaterial?s(m,p):p.isMeshDistanceMaterial?(s(m,p),y(m,p)):p.isMeshNormalMaterial?s(m,p):p.isLineBasicMaterial?(o(m,p),p.isLineDashedMaterial&&a(m,p)):p.isPointsMaterial?l(m,p,w,M):p.isSpriteMaterial?u(m,p):p.isShadowMaterial?(m.color.value.copy(p.color),m.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function s(m,p){m.opacity.value=p.opacity,p.color&&m.diffuse.value.copy(p.color),p.emissive&&m.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(m.map.value=p.map,t(p.map,m.mapTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,t(p.alphaMap,m.alphaMapTransform)),p.bumpMap&&(m.bumpMap.value=p.bumpMap,t(p.bumpMap,m.bumpMapTransform),m.bumpScale.value=p.bumpScale,p.side===M3&&(m.bumpScale.value*=-1)),p.normalMap&&(m.normalMap.value=p.normalMap,t(p.normalMap,m.normalMapTransform),m.normalScale.value.copy(p.normalScale),p.side===M3&&m.normalScale.value.negate()),p.displacementMap&&(m.displacementMap.value=p.displacementMap,t(p.displacementMap,m.displacementMapTransform),m.displacementScale.value=p.displacementScale,m.displacementBias.value=p.displacementBias),p.emissiveMap&&(m.emissiveMap.value=p.emissiveMap,t(p.emissiveMap,m.emissiveMapTransform)),p.specularMap&&(m.specularMap.value=p.specularMap,t(p.specularMap,m.specularMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest);const w=e.get(p),M=w.envMap,_=w.envMapRotation;M&&(m.envMap.value=M,Rt.copy(_),Rt.x*=-1,Rt.y*=-1,Rt.z*=-1,M.isCubeTexture&&M.isRenderTargetTexture===!1&&(Rt.y*=-1,Rt.z*=-1),m.envMapRotation.value.setFromMatrix4(_x.makeRotationFromEuler(Rt)),m.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=p.reflectivity,m.ior.value=p.ior,m.refractionRatio.value=p.refractionRatio),p.lightMap&&(m.lightMap.value=p.lightMap,m.lightMapIntensity.value=p.lightMapIntensity,t(p.lightMap,m.lightMapTransform)),p.aoMap&&(m.aoMap.value=p.aoMap,m.aoMapIntensity.value=p.aoMapIntensity,t(p.aoMap,m.aoMapTransform))}function o(m,p){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,p.map&&(m.map.value=p.map,t(p.map,m.mapTransform))}function a(m,p){m.dashSize.value=p.dashSize,m.totalSize.value=p.dashSize+p.gapSize,m.scale.value=p.scale}function l(m,p,w,M){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.size.value=p.size*w,m.scale.value=M*.5,p.map&&(m.map.value=p.map,t(p.map,m.uvTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,t(p.alphaMap,m.alphaMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest)}function u(m,p){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.rotation.value=p.rotation,p.map&&(m.map.value=p.map,t(p.map,m.mapTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,t(p.alphaMap,m.alphaMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest)}function c(m,p){m.specular.value.copy(p.specular),m.shininess.value=Math.max(p.shininess,1e-4)}function f(m,p){p.gradientMap&&(m.gradientMap.value=p.gradientMap)}function h(m,p){m.metalness.value=p.metalness,p.metalnessMap&&(m.metalnessMap.value=p.metalnessMap,t(p.metalnessMap,m.metalnessMapTransform)),m.roughness.value=p.roughness,p.roughnessMap&&(m.roughnessMap.value=p.roughnessMap,t(p.roughnessMap,m.roughnessMapTransform)),p.envMap&&(m.envMapIntensity.value=p.envMapIntensity)}function d(m,p,w){m.ior.value=p.ior,p.sheen>0&&(m.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),m.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(m.sheenColorMap.value=p.sheenColorMap,t(p.sheenColorMap,m.sheenColorMapTransform)),p.sheenRoughnessMap&&(m.sheenRoughnessMap.value=p.sheenRoughnessMap,t(p.sheenRoughnessMap,m.sheenRoughnessMapTransform))),p.clearcoat>0&&(m.clearcoat.value=p.clearcoat,m.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(m.clearcoatMap.value=p.clearcoatMap,t(p.clearcoatMap,m.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,t(p.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(m.clearcoatNormalMap.value=p.clearcoatNormalMap,t(p.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===M3&&m.clearcoatNormalScale.value.negate())),p.dispersion>0&&(m.dispersion.value=p.dispersion),p.iridescence>0&&(m.iridescence.value=p.iridescence,m.iridescenceIOR.value=p.iridescenceIOR,m.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(m.iridescenceMap.value=p.iridescenceMap,t(p.iridescenceMap,m.iridescenceMapTransform)),p.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=p.iridescenceThicknessMap,t(p.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),p.transmission>0&&(m.transmission.value=p.transmission,m.transmissionSamplerMap.value=w.texture,m.transmissionSamplerSize.value.set(w.width,w.height),p.transmissionMap&&(m.transmissionMap.value=p.transmissionMap,t(p.transmissionMap,m.transmissionMapTransform)),m.thickness.value=p.thickness,p.thicknessMap&&(m.thicknessMap.value=p.thicknessMap,t(p.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=p.attenuationDistance,m.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(m.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(m.anisotropyMap.value=p.anisotropyMap,t(p.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=p.specularIntensity,m.specularColor.value.copy(p.specularColor),p.specularColorMap&&(m.specularColorMap.value=p.specularColorMap,t(p.specularColorMap,m.specularColorMapTransform)),p.specularIntensityMap&&(m.specularIntensityMap.value=p.specularIntensityMap,t(p.specularIntensityMap,m.specularIntensityMapTransform))}function g(m,p){p.matcap&&(m.matcap.value=p.matcap)}function y(m,p){const w=e.get(p).light;m.referencePosition.value.setFromMatrixPosition(w.matrixWorld),m.nearDistance.value=w.shadow.camera.near,m.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function vx(n,e,t,i){let r={},s={},o=[];const a=n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS);function l(w,M){const _=M.program;i.uniformBlockBinding(w,_)}function u(w,M){let _=r[w.id];_===void 0&&(g(w),_=c(w),r[w.id]=_,w.addEventListener("dispose",m));const A=M.program;i.updateUBOMapping(w,A);const R=e.render.frame;s[w.id]!==R&&(h(w),s[w.id]=R)}function c(w){const M=f();w.__bindingPointIndex=M;const _=n.createBuffer(),A=w.__size,R=w.usage;return n.bindBuffer(n.UNIFORM_BUFFER,_),n.bufferData(n.UNIFORM_BUFFER,A,R),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,M,_),_}function f(){for(let w=0;w<a;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function h(w){const M=r[w.id],_=w.uniforms,A=w.__cache;n.bindBuffer(n.UNIFORM_BUFFER,M);for(let R=0,D=_.length;R<D;R++){const L=Array.isArray(_[R])?_[R]:[_[R]];for(let T=0,b=L.length;T<b;T++){const U=L[T];if(d(U,R,T,A)===!0){const B=U.__offset,X=Array.isArray(U.value)?U.value:[U.value];let K=0;for(let a1=0;a1<X.length;a1++){const z=X[a1],r1=y(z);typeof z=="number"||typeof z=="boolean"?(U.__data[0]=z,n.bufferSubData(n.UNIFORM_BUFFER,B+K,U.__data)):z.isMatrix3?(U.__data[0]=z.elements[0],U.__data[1]=z.elements[1],U.__data[2]=z.elements[2],U.__data[3]=0,U.__data[4]=z.elements[3],U.__data[5]=z.elements[4],U.__data[6]=z.elements[5],U.__data[7]=0,U.__data[8]=z.elements[6],U.__data[9]=z.elements[7],U.__data[10]=z.elements[8],U.__data[11]=0):(z.toArray(U.__data,K),K+=r1.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,B,U.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function d(w,M,_,A){const R=w.value,D=M+"_"+_;if(A[D]===void 0)return typeof R=="number"||typeof R=="boolean"?A[D]=R:A[D]=R.clone(),!0;{const L=A[D];if(typeof R=="number"||typeof R=="boolean"){if(L!==R)return A[D]=R,!0}else if(L.equals(R)===!1)return L.copy(R),!0}return!1}function g(w){const M=w.uniforms;let _=0;const A=16;for(let D=0,L=M.length;D<L;D++){const T=Array.isArray(M[D])?M[D]:[M[D]];for(let b=0,U=T.length;b<U;b++){const B=T[b],X=Array.isArray(B.value)?B.value:[B.value];for(let K=0,a1=X.length;K<a1;K++){const z=X[K],r1=y(z),H=_%A,y1=H%r1.boundary,C1=H+y1;_+=y1,C1!==0&&A-C1<r1.storage&&(_+=A-C1),B.__data=new Float32Array(r1.storage/Float32Array.BYTES_PER_ELEMENT),B.__offset=_,_+=r1.storage}}}const R=_%A;return R>0&&(_+=A-R),w.__size=_,w.__cache={},this}function y(w){const M={boundary:0,storage:0};return typeof w=="number"||typeof w=="boolean"?(M.boundary=4,M.storage=4):w.isVector2?(M.boundary=8,M.storage=8):w.isVector3||w.isColor?(M.boundary=16,M.storage=12):w.isVector4?(M.boundary=16,M.storage=16):w.isMatrix3?(M.boundary=48,M.storage=48):w.isMatrix4?(M.boundary=64,M.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),M}function m(w){const M=w.target;M.removeEventListener("dispose",m);const _=o.indexOf(M.__bindingPointIndex);o.splice(_,1),n.deleteBuffer(r[M.id]),delete r[M.id],delete s[M.id]}function p(){for(const w in r)n.deleteBuffer(r[w]);o=[],r={},s={}}return{bind:l,update:u,dispose:p}}class yx{constructor(e={}){const{canvas:t=Km(),context:i=null,depth:r=!0,stencil:s=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:u=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:f=!1,reversedDepthBuffer:h=!1}=e;this.isWebGLRenderer=!0;let d;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");d=i.getContextAttributes().alpha}else d=o;const g=new Uint32Array(4),y=new Int32Array(4);let m=null,p=null;const w=[],M=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=dt,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const _=this;let A=!1;this._outputColorSpace=R3;let R=0,D=0,L=null,T=-1,b=null;const U=new N2,B=new N2;let X=null;const K=new M2(0);let a1=0,z=t.width,r1=t.height,H=1,y1=null,C1=null;const F1=new N2(0,0,z,r1),X1=new N2(0,0,z,r1);let u2=!1;const o2=new Q6;let c1=!1,b1=!1;const V=new V2,f1=new i1,u1=new N2,g1={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let z1=!1;function B1(){return L===null?H:1}let S=i;function F(C,$){return t.getContext(C,$)}try{const C={alpha:!0,depth:r,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:c,failIfMajorPerformanceCaveat:f};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Ma}`),t.addEventListener("webglcontextlost",R1,!1),t.addEventListener("webglcontextrestored",N1,!1),t.addEventListener("webglcontextcreationerror",M1,!1),S===null){const $="webgl2";if(S=F($,C),S===null)throw F($)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let k,s1,q,l1,e1,h1,d1,Q,P,E,N,Y,o1,J,T1,x1,P1,I1,_1,A1,G1,D1,w1,t2;function G(){k=new Rv(S),k.init(),D1=new fx(S,k),s1=new Sv(S,k,e,D1),q=new cx(S,k),s1.reversedDepthBuffer&&h&&q.buffers.depth.setReversed(!0),l1=new Iv(S),e1=new Ky,h1=new ux(S,k,q,e1,s1,D1,l1),d1=new bv(_),Q=new Cv(_),P=new B8(S),w1=new xv(S,P),E=new Pv(S,P,l1,w1),N=new Uv(S,E,P,l1),_1=new Dv(S,s1,h1),x1=new Ev(e1),Y=new Yy(_,d1,Q,k,s1,w1,x1),o1=new gx(_,e1),J=new Jy,T1=new rx(k),I1=new yv(_,d1,Q,q,N,d,l),P1=new ax(_,N,s1),t2=new vx(S,l1,s1,q),A1=new Mv(S,k,l1),G1=new Lv(S,k,l1),l1.programs=Y.programs,_.capabilities=s1,_.extensions=k,_.properties=e1,_.renderLists=J,_.shadowMap=P1,_.state=q,_.info=l1}G();const S1=new mx(_,S);this.xr=S1,this.getContext=function(){return S},this.getContextAttributes=function(){return S.getContextAttributes()},this.forceContextLoss=function(){const C=k.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=k.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return H},this.setPixelRatio=function(C){C!==void 0&&(H=C,this.setSize(z,r1,!1))},this.getSize=function(C){return C.set(z,r1)},this.setSize=function(C,$,t1=!0){if(S1.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}z=C,r1=$,t.width=Math.floor(C*H),t.height=Math.floor($*H),t1===!0&&(t.style.width=C+"px",t.style.height=$+"px"),this.setViewport(0,0,C,$)},this.getDrawingBufferSize=function(C){return C.set(z*H,r1*H).floor()},this.setDrawingBufferSize=function(C,$,t1){z=C,r1=$,H=t1,t.width=Math.floor(C*t1),t.height=Math.floor($*t1),this.setViewport(0,0,C,$)},this.getCurrentViewport=function(C){return C.copy(U)},this.getViewport=function(C){return C.copy(F1)},this.setViewport=function(C,$,t1,n1){C.isVector4?F1.set(C.x,C.y,C.z,C.w):F1.set(C,$,t1,n1),q.viewport(U.copy(F1).multiplyScalar(H).round())},this.getScissor=function(C){return C.copy(X1)},this.setScissor=function(C,$,t1,n1){C.isVector4?X1.set(C.x,C.y,C.z,C.w):X1.set(C,$,t1,n1),q.scissor(B.copy(X1).multiplyScalar(H).round())},this.getScissorTest=function(){return u2},this.setScissorTest=function(C){q.setScissorTest(u2=C)},this.setOpaqueSort=function(C){y1=C},this.setTransparentSort=function(C){C1=C},this.getClearColor=function(C){return C.copy(I1.getClearColor())},this.setClearColor=function(){I1.setClearColor(...arguments)},this.getClearAlpha=function(){return I1.getClearAlpha()},this.setClearAlpha=function(){I1.setClearAlpha(...arguments)},this.clear=function(C=!0,$=!0,t1=!0){let n1=0;if(C){let j=!1;if(L!==null){const E1=L.texture.format;j=E1===Aa||E1===wa||E1===Ta}if(j){const E1=L.texture.type,U1=E1===ze||E1===jt||E1===wn||E1===An||E1===Ea||E1===ba,H1=I1.getClearColor(),O1=I1.getClearAlpha(),j1=H1.r,K1=H1.g,W1=H1.b;U1?(g[0]=j1,g[1]=K1,g[2]=W1,g[3]=O1,S.clearBufferuiv(S.COLOR,0,g)):(y[0]=j1,y[1]=K1,y[2]=W1,y[3]=O1,S.clearBufferiv(S.COLOR,0,y))}else n1|=S.COLOR_BUFFER_BIT}$&&(n1|=S.DEPTH_BUFFER_BIT),t1&&(n1|=S.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),S.clear(n1)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",R1,!1),t.removeEventListener("webglcontextrestored",N1,!1),t.removeEventListener("webglcontextcreationerror",M1,!1),I1.dispose(),J.dispose(),T1.dispose(),e1.dispose(),d1.dispose(),Q.dispose(),N.dispose(),w1.dispose(),t2.dispose(),Y.dispose(),S1.dispose(),S1.removeEventListener("sessionstart",b3),S1.removeEventListener("sessionend",j0),F3.stop()};function R1(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function N1(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const C=l1.autoReset,$=P1.enabled,t1=P1.autoUpdate,n1=P1.needsUpdate,j=P1.type;G(),l1.autoReset=C,P1.enabled=$,P1.autoUpdate=t1,P1.needsUpdate=n1,P1.type=j}function M1(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function p1(C){const $=C.target;$.removeEventListener("dispose",p1),k1($)}function k1(C){$1(C),e1.remove(C)}function $1(C){const $=e1.get(C).programs;$!==void 0&&($.forEach(function(t1){Y.releaseProgram(t1)}),C.isShaderMaterial&&Y.releaseShaderCache(C))}this.renderBufferDirect=function(C,$,t1,n1,j,E1){$===null&&($=g1);const U1=j.isMesh&&j.matrixWorld.determinant()<0,H1=e0(C,$,t1,n1,j);q.setMaterial(n1,U1);let O1=t1.index,j1=1;if(n1.wireframe===!0){if(O1=E.getWireframeAttribute(t1),O1===void 0)return;j1=2}const K1=t1.drawRange,W1=t1.attributes.position;let s2=K1.start*j1,g2=(K1.start+K1.count)*j1;E1!==null&&(s2=Math.max(s2,E1.start*j1),g2=Math.min(g2,(E1.start+E1.count)*j1)),O1!==null?(s2=Math.max(s2,0),g2=Math.min(g2,O1.count)):W1!=null&&(s2=Math.max(s2,0),g2=Math.min(g2,W1.count));const I2=g2-s2;if(I2<0||I2===1/0)return;w1.setup(j,n1,H1,t1,O1);let m2,v2=A1;if(O1!==null&&(m2=P.get(O1),v2=G1,v2.setIndex(m2)),j.isMesh)n1.wireframe===!0?(q.setLineWidth(n1.wireframeLinewidth*B1()),v2.setMode(S.LINES)):v2.setMode(S.TRIANGLES);else if(j.isLine){let q1=n1.linewidth;q1===void 0&&(q1=1),q.setLineWidth(q1*B1()),j.isLineSegments?v2.setMode(S.LINES):j.isLineLoop?v2.setMode(S.LINE_LOOP):v2.setMode(S.LINE_STRIP)}else j.isPoints?v2.setMode(S.POINTS):j.isSprite&&v2.setMode(S.TRIANGLES);if(j.isBatchedMesh)if(j._multiDrawInstances!==null)P0("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),v2.renderMultiDrawInstances(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount,j._multiDrawInstances);else if(k.get("WEBGL_multi_draw"))v2.renderMultiDraw(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount);else{const q1=j._multiDrawStarts,L2=j._multiDrawCounts,a2=j._multiDrawCount,n3=O1?P.get(O1).bytesPerElement:1,re=e1.get(n1).currentProgram.getUniforms();for(let a3=0;a3<a2;a3++)re.setValue(S,"_gl_DrawID",a3),v2.render(q1[a3]/n3,L2[a3])}else if(j.isInstancedMesh)v2.renderInstances(s2,I2,j.count);else if(t1.isInstancedBufferGeometry){const q1=t1._maxInstanceCount!==void 0?t1._maxInstanceCount:1/0,L2=Math.min(t1.instanceCount,q1);v2.renderInstances(s2,I2,L2)}else v2.render(s2,I2)};function E2(C,$,t1){C.transparent===!0&&C.side===De&&C.forceSinglePass===!1?(C.side=M3,C.needsUpdate=!0,d3(C,$,t1),C.side=mt,C.needsUpdate=!0,d3(C,$,t1),C.side=De):d3(C,$,t1)}this.compile=function(C,$,t1=null){t1===null&&(t1=C),p=T1.get(t1),p.init($),M.push(p),t1.traverseVisible(function(j){j.isLight&&j.layers.test($.layers)&&(p.pushLight(j),j.castShadow&&p.pushShadow(j))}),C!==t1&&C.traverseVisible(function(j){j.isLight&&j.layers.test($.layers)&&(p.pushLight(j),j.castShadow&&p.pushShadow(j))}),p.setupLights();const n1=new Set;return C.traverse(function(j){if(!(j.isMesh||j.isPoints||j.isLine||j.isSprite))return;const E1=j.material;if(E1)if(Array.isArray(E1))for(let U1=0;U1<E1.length;U1++){const H1=E1[U1];E2(H1,t1,j),n1.add(H1)}else E2(E1,t1,j),n1.add(E1)}),p=M.pop(),n1},this.compileAsync=function(C,$,t1=null){const n1=this.compile(C,$,t1);return new Promise(j=>{function E1(){if(n1.forEach(function(U1){e1.get(U1).currentProgram.isReady()&&n1.delete(U1)}),n1.size===0){j(C);return}setTimeout(E1,10)}k.get("KHR_parallel_shader_compile")!==null?E1():setTimeout(E1,10)})};let h2=null;function P2(C){h2&&h2(C)}function b3(){F3.stop()}function j0(){F3.start()}const F3=new t5;F3.setAnimationLoop(P2),typeof self<"u"&&F3.setContext(self),this.setAnimationLoop=function(C){h2=C,S1.setAnimationLoop(C),C===null?F3.stop():F3.start()},S1.addEventListener("sessionstart",b3),S1.addEventListener("sessionend",j0),this.render=function(C,$){if($!==void 0&&$.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;if(C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),$.parent===null&&$.matrixWorldAutoUpdate===!0&&$.updateMatrixWorld(),S1.enabled===!0&&S1.isPresenting===!0&&(S1.cameraAutoUpdate===!0&&S1.updateCamera($),$=S1.getCamera()),C.isScene===!0&&C.onBeforeRender(_,C,$,L),p=T1.get(C,M.length),p.init($),M.push(p),V.multiplyMatrices($.projectionMatrix,$.matrixWorldInverse),o2.setFromProjectionMatrix(V,me,$.reversedDepth),b1=this.localClippingEnabled,c1=x1.init(this.clippingPlanes,b1),m=J.get(C,w.length),m.init(),w.push(m),S1.enabled===!0&&S1.isPresenting===!0){const E1=_.xr.getDepthSensingMesh();E1!==null&&yt(E1,$,-1/0,_.sortObjects)}yt(C,$,0,_.sortObjects),m.finish(),_.sortObjects===!0&&m.sort(y1,C1),z1=S1.enabled===!1||S1.isPresenting===!1||S1.hasDepthSensing()===!1,z1&&I1.addToRenderList(m,C),this.info.render.frame++,c1===!0&&x1.beginShadows();const t1=p.state.shadowsArray;P1.render(t1,C,$),c1===!0&&x1.endShadows(),this.info.autoReset===!0&&this.info.reset();const n1=m.opaque,j=m.transmissive;if(p.setupLights(),$.isArrayCamera){const E1=$.cameras;if(j.length>0)for(let U1=0,H1=E1.length;U1<H1;U1++){const O1=E1[U1];Zt(n1,j,C,O1)}z1&&I1.render(C);for(let U1=0,H1=E1.length;U1<H1;U1++){const O1=E1[U1];Vn(m,C,O1,O1.viewport)}}else j.length>0&&Zt(n1,j,C,$),z1&&I1.render(C),Vn(m,C,$);L!==null&&D===0&&(h1.updateMultisampleRenderTarget(L),h1.updateRenderTargetMipmap(L)),C.isScene===!0&&C.onAfterRender(_,C,$),w1.resetDefaultState(),T=-1,b=null,M.pop(),M.length>0?(p=M[M.length-1],c1===!0&&x1.setGlobalState(_.clippingPlanes,p.state.camera)):p=null,w.pop(),w.length>0?m=w[w.length-1]:m=null};function yt(C,$,t1,n1){if(C.visible===!1)return;if(C.layers.test($.layers)){if(C.isGroup)t1=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update($);else if(C.isLight)p.pushLight(C),C.castShadow&&p.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||o2.intersectsSprite(C)){n1&&u1.setFromMatrixPosition(C.matrixWorld).applyMatrix4(V);const U1=N.update(C),H1=C.material;H1.visible&&m.push(C,U1,H1,t1,u1.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(!C.frustumCulled||o2.intersectsObject(C))){const U1=N.update(C),H1=C.material;if(n1&&(C.boundingSphere!==void 0?(C.boundingSphere===null&&C.computeBoundingSphere(),u1.copy(C.boundingSphere.center)):(U1.boundingSphere===null&&U1.computeBoundingSphere(),u1.copy(U1.boundingSphere.center)),u1.applyMatrix4(C.matrixWorld).applyMatrix4(V)),Array.isArray(H1)){const O1=U1.groups;for(let j1=0,K1=O1.length;j1<K1;j1++){const W1=O1[j1],s2=H1[W1.materialIndex];s2&&s2.visible&&m.push(C,U1,s2,t1,u1.z,W1)}}else H1.visible&&m.push(C,U1,H1,t1,u1.z,null)}}const E1=C.children;for(let U1=0,H1=E1.length;U1<H1;U1++)yt(E1[U1],$,t1,n1)}function Vn(C,$,t1,n1){const j=C.opaque,E1=C.transmissive,U1=C.transparent;p.setupLightsView(t1),c1===!0&&x1.setGlobalState(_.clippingPlanes,t1),n1&&q.viewport(U.copy(n1)),j.length>0&&xt(j,$,t1),E1.length>0&&xt(E1,$,t1),U1.length>0&&xt(U1,$,t1),q.buffers.depth.setTest(!0),q.buffers.depth.setMask(!0),q.buffers.color.setMask(!0),q.setPolygonOffset(!1)}function Zt(C,$,t1,n1){if((t1.isScene===!0?t1.overrideMaterial:null)!==null)return;p.state.transmissionRenderTarget[n1.id]===void 0&&(p.state.transmissionRenderTarget[n1.id]=new Yt(1,1,{generateMipmaps:!0,type:k.has("EXT_color_buffer_half_float")||k.has("EXT_color_buffer_float")?Fn:ze,minFilter:kt,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:p2.workingColorSpace}));const E1=p.state.transmissionRenderTarget[n1.id],U1=n1.viewport||U;E1.setSize(U1.z*_.transmissionResolutionScale,U1.w*_.transmissionResolutionScale);const H1=_.getRenderTarget(),O1=_.getActiveCubeFace(),j1=_.getActiveMipmapLevel();_.setRenderTarget(E1),_.getClearColor(K),a1=_.getClearAlpha(),a1<1&&_.setClearColor(16777215,.5),_.clear(),z1&&I1.render(t1);const K1=_.toneMapping;_.toneMapping=dt;const W1=n1.viewport;if(n1.viewport!==void 0&&(n1.viewport=void 0),p.setupLightsView(n1),c1===!0&&x1.setGlobalState(_.clippingPlanes,n1),xt(C,t1,n1),h1.updateMultisampleRenderTarget(E1),h1.updateRenderTargetMipmap(E1),k.has("WEBGL_multisampled_render_to_texture")===!1){let s2=!1;for(let g2=0,I2=$.length;g2<I2;g2++){const m2=$[g2],v2=m2.object,q1=m2.geometry,L2=m2.material,a2=m2.group;if(L2.side===De&&v2.layers.test(n1.layers)){const n3=L2.side;L2.side=M3,L2.needsUpdate=!0,Jt(v2,t1,n1,q1,L2,a2),L2.side=n3,L2.needsUpdate=!0,s2=!0}}s2===!0&&(h1.updateMultisampleRenderTarget(E1),h1.updateRenderTargetMipmap(E1))}_.setRenderTarget(H1,O1,j1),_.setClearColor(K,a1),W1!==void 0&&(n1.viewport=W1),_.toneMapping=K1}function xt(C,$,t1){const n1=$.isScene===!0?$.overrideMaterial:null;for(let j=0,E1=C.length;j<E1;j++){const U1=C[j],H1=U1.object,O1=U1.geometry,j1=U1.group;let K1=U1.material;K1.allowOverride===!0&&n1!==null&&(K1=n1),H1.layers.test(t1.layers)&&Jt(H1,$,t1,O1,K1,j1)}}function Jt(C,$,t1,n1,j,E1){C.onBeforeRender(_,$,t1,n1,j,E1),C.modelViewMatrix.multiplyMatrices(t1.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),j.onBeforeRender(_,$,t1,n1,C,E1),j.transparent===!0&&j.side===De&&j.forceSinglePass===!1?(j.side=M3,j.needsUpdate=!0,_.renderBufferDirect(t1,$,n1,j,C,E1),j.side=mt,j.needsUpdate=!0,_.renderBufferDirect(t1,$,n1,j,C,E1),j.side=De):_.renderBufferDirect(t1,$,n1,j,C,E1),C.onAfterRender(_,$,t1,n1,j,E1)}function d3(C,$,t1){$.isScene!==!0&&($=g1);const n1=e1.get(C),j=p.state.lights,E1=p.state.shadowsArray,U1=j.state.version,H1=Y.getParameters(C,j.state,E1,$,t1),O1=Y.getProgramCacheKey(H1);let j1=n1.programs;n1.environment=C.isMeshStandardMaterial?$.environment:null,n1.fog=$.fog,n1.envMap=(C.isMeshStandardMaterial?Q:d1).get(C.envMap||n1.environment),n1.envMapRotation=n1.environment!==null&&C.envMap===null?$.environmentRotation:C.envMapRotation,j1===void 0&&(C.addEventListener("dispose",p1),j1=new Map,n1.programs=j1);let K1=j1.get(O1);if(K1!==void 0){if(n1.currentProgram===K1&&n1.lightsStateVersion===U1)return ye(C,H1),K1}else H1.uniforms=Y.getUniforms(C),C.onBeforeCompile(H1,_),K1=Y.acquireProgram(H1,O1),j1.set(O1,K1),n1.uniforms=H1.uniforms;const W1=n1.uniforms;return(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(W1.clippingPlanes=x1.uniform),ye(C,H1),n1.needsLights=Er(C),n1.lightsStateVersion=U1,n1.needsLights&&(W1.ambientLightColor.value=j.state.ambient,W1.lightProbe.value=j.state.probe,W1.directionalLights.value=j.state.directional,W1.directionalLightShadows.value=j.state.directionalShadow,W1.spotLights.value=j.state.spot,W1.spotLightShadows.value=j.state.spotShadow,W1.rectAreaLights.value=j.state.rectArea,W1.ltc_1.value=j.state.rectAreaLTC1,W1.ltc_2.value=j.state.rectAreaLTC2,W1.pointLights.value=j.state.point,W1.pointLightShadows.value=j.state.pointShadow,W1.hemisphereLights.value=j.state.hemi,W1.directionalShadowMap.value=j.state.directionalShadowMap,W1.directionalShadowMatrix.value=j.state.directionalShadowMatrix,W1.spotShadowMap.value=j.state.spotShadowMap,W1.spotLightMatrix.value=j.state.spotLightMatrix,W1.spotLightMap.value=j.state.spotLightMap,W1.pointShadowMap.value=j.state.pointShadowMap,W1.pointShadowMatrix.value=j.state.pointShadowMatrix),n1.currentProgram=K1,n1.uniformsList=null,K1}function Qt(C){if(C.uniformsList===null){const $=C.currentProgram.getUniforms();C.uniformsList=Ui.seqWithValue($.seq,C.uniforms)}return C.uniformsList}function ye(C,$){const t1=e1.get(C);t1.outputColorSpace=$.outputColorSpace,t1.batching=$.batching,t1.batchingColor=$.batchingColor,t1.instancing=$.instancing,t1.instancingColor=$.instancingColor,t1.instancingMorph=$.instancingMorph,t1.skinning=$.skinning,t1.morphTargets=$.morphTargets,t1.morphNormals=$.morphNormals,t1.morphColors=$.morphColors,t1.morphTargetsCount=$.morphTargetsCount,t1.numClippingPlanes=$.numClippingPlanes,t1.numIntersection=$.numClipIntersection,t1.vertexAlphas=$.vertexAlphas,t1.vertexTangents=$.vertexTangents,t1.toneMapping=$.toneMapping}function e0(C,$,t1,n1,j){$.isScene!==!0&&($=g1),h1.resetTextureUnits();const E1=$.fog,U1=n1.isMeshStandardMaterial?$.environment:null,H1=L===null?_.outputColorSpace:L.isXRRenderTarget===!0?L.texture.colorSpace:V0,O1=(n1.isMeshStandardMaterial?Q:d1).get(n1.envMap||U1),j1=n1.vertexColors===!0&&!!t1.attributes.color&&t1.attributes.color.itemSize===4,K1=!!t1.attributes.tangent&&(!!n1.normalMap||n1.anisotropy>0),W1=!!t1.morphAttributes.position,s2=!!t1.morphAttributes.normal,g2=!!t1.morphAttributes.color;let I2=dt;n1.toneMapped&&(L===null||L.isXRRenderTarget===!0)&&(I2=_.toneMapping);const m2=t1.morphAttributes.position||t1.morphAttributes.normal||t1.morphAttributes.color,v2=m2!==void 0?m2.length:0,q1=e1.get(n1),L2=p.state.lights;if(c1===!0&&(b1===!0||C!==b)){const n2=C===b&&n1.id===T;x1.setState(n1,C,n2)}let a2=!1;n1.version===q1.__version?(q1.needsLights&&q1.lightsStateVersion!==L2.state.version||q1.outputColorSpace!==H1||j.isBatchedMesh&&q1.batching===!1||!j.isBatchedMesh&&q1.batching===!0||j.isBatchedMesh&&q1.batchingColor===!0&&j.colorTexture===null||j.isBatchedMesh&&q1.batchingColor===!1&&j.colorTexture!==null||j.isInstancedMesh&&q1.instancing===!1||!j.isInstancedMesh&&q1.instancing===!0||j.isSkinnedMesh&&q1.skinning===!1||!j.isSkinnedMesh&&q1.skinning===!0||j.isInstancedMesh&&q1.instancingColor===!0&&j.instanceColor===null||j.isInstancedMesh&&q1.instancingColor===!1&&j.instanceColor!==null||j.isInstancedMesh&&q1.instancingMorph===!0&&j.morphTexture===null||j.isInstancedMesh&&q1.instancingMorph===!1&&j.morphTexture!==null||q1.envMap!==O1||n1.fog===!0&&q1.fog!==E1||q1.numClippingPlanes!==void 0&&(q1.numClippingPlanes!==x1.numPlanes||q1.numIntersection!==x1.numIntersection)||q1.vertexAlphas!==j1||q1.vertexTangents!==K1||q1.morphTargets!==W1||q1.morphNormals!==s2||q1.morphColors!==g2||q1.toneMapping!==I2||q1.morphTargetsCount!==v2)&&(a2=!0):(a2=!0,q1.__version=n1.version);let n3=q1.currentProgram;a2===!0&&(n3=d3(n1,$,j));let re=!1,a3=!1,je=!1;const w2=n3.getUniforms(),J2=q1.uniforms;if(q.useProgram(n3.program)&&(re=!0,a3=!0,je=!0),n1.id!==T&&(T=n1.id,a3=!0),re||b!==C){q.buffers.depth.getReversed()&&C.reversedDepth!==!0&&(C._reversedDepth=!0,C.updateProjectionMatrix()),w2.setValue(S,"projectionMatrix",C.projectionMatrix),w2.setValue(S,"viewMatrix",C.matrixWorldInverse);const q2=w2.map.cameraPosition;q2!==void 0&&q2.setValue(S,f1.setFromMatrixPosition(C.matrixWorld)),s1.logarithmicDepthBuffer&&w2.setValue(S,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),(n1.isMeshPhongMaterial||n1.isMeshToonMaterial||n1.isMeshLambertMaterial||n1.isMeshBasicMaterial||n1.isMeshStandardMaterial||n1.isShaderMaterial)&&w2.setValue(S,"isOrthographic",C.isOrthographicCamera===!0),b!==C&&(b=C,a3=!0,je=!0)}if(j.isSkinnedMesh){w2.setOptional(S,j,"bindMatrix"),w2.setOptional(S,j,"bindMatrixInverse");const n2=j.skeleton;n2&&(n2.boneTexture===null&&n2.computeBoneTexture(),w2.setValue(S,"boneTexture",n2.boneTexture,h1))}j.isBatchedMesh&&(w2.setOptional(S,j,"batchingTexture"),w2.setValue(S,"batchingTexture",j._matricesTexture,h1),w2.setOptional(S,j,"batchingIdTexture"),w2.setValue(S,"batchingIdTexture",j._indirectTexture,h1),w2.setOptional(S,j,"batchingColorTexture"),j._colorsTexture!==null&&w2.setValue(S,"batchingColorTexture",j._colorsTexture,h1));const p3=t1.morphAttributes;if((p3.position!==void 0||p3.normal!==void 0||p3.color!==void 0)&&_1.update(j,t1,n3),(a3||q1.receiveShadow!==j.receiveShadow)&&(q1.receiveShadow=j.receiveShadow,w2.setValue(S,"receiveShadow",j.receiveShadow)),n1.isMeshGouraudMaterial&&n1.envMap!==null&&(J2.envMap.value=O1,J2.flipEnvMap.value=O1.isCubeTexture&&O1.isRenderTargetTexture===!1?-1:1),n1.isMeshStandardMaterial&&n1.envMap===null&&$.environment!==null&&(J2.envMapIntensity.value=$.environmentIntensity),a3&&(w2.setValue(S,"toneMappingExposure",_.toneMappingExposure),q1.needsLights&&Gn(J2,je),E1&&n1.fog===!0&&o1.refreshFogUniforms(J2,E1),o1.refreshMaterialUniforms(J2,n1,H,r1,p.state.transmissionRenderTarget[C.id]),Ui.upload(S,Qt(q1),J2,h1)),n1.isShaderMaterial&&n1.uniformsNeedUpdate===!0&&(Ui.upload(S,Qt(q1),J2,h1),n1.uniformsNeedUpdate=!1),n1.isSpriteMaterial&&w2.setValue(S,"center",j.center),w2.setValue(S,"modelViewMatrix",j.modelViewMatrix),w2.setValue(S,"normalMatrix",j.normalMatrix),w2.setValue(S,"modelMatrix",j.matrixWorld),n1.isShaderMaterial||n1.isRawShaderMaterial){const n2=n1.uniformsGroups;for(let q2=0,T3=n2.length;q2<T3;q2++){const se=n2[q2];t2.update(se,n3),t2.bind(se,n3)}}return n3}function Gn(C,$){C.ambientLightColor.needsUpdate=$,C.lightProbe.needsUpdate=$,C.directionalLights.needsUpdate=$,C.directionalLightShadows.needsUpdate=$,C.pointLights.needsUpdate=$,C.pointLightShadows.needsUpdate=$,C.spotLights.needsUpdate=$,C.spotLightShadows.needsUpdate=$,C.rectAreaLights.needsUpdate=$,C.hemisphereLights.needsUpdate=$}function Er(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return D},this.getRenderTarget=function(){return L},this.setRenderTargetTextures=function(C,$,t1){const n1=e1.get(C);n1.__autoAllocateDepthBuffer=C.resolveDepthBuffer===!1,n1.__autoAllocateDepthBuffer===!1&&(n1.__useRenderToTexture=!1),e1.get(C.texture).__webglTexture=$,e1.get(C.depthTexture).__webglTexture=n1.__autoAllocateDepthBuffer?void 0:t1,n1.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(C,$){const t1=e1.get(C);t1.__webglFramebuffer=$,t1.__useDefaultFramebuffer=$===void 0};const t0=S.createFramebuffer();this.setRenderTarget=function(C,$=0,t1=0){L=C,R=$,D=t1;let n1=!0,j=null,E1=!1,U1=!1;if(C){const O1=e1.get(C);if(O1.__useDefaultFramebuffer!==void 0)q.bindFramebuffer(S.FRAMEBUFFER,null),n1=!1;else if(O1.__webglFramebuffer===void 0)h1.setupRenderTarget(C);else if(O1.__hasExternalTextures)h1.rebindTextures(C,e1.get(C.texture).__webglTexture,e1.get(C.depthTexture).__webglTexture);else if(C.depthBuffer){const W1=C.depthTexture;if(O1.__boundDepthTexture!==W1){if(W1!==null&&e1.has(W1)&&(C.width!==W1.image.width||C.height!==W1.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");h1.setupDepthRenderbuffer(C)}}const j1=C.texture;(j1.isData3DTexture||j1.isDataArrayTexture||j1.isCompressedArrayTexture)&&(U1=!0);const K1=e1.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(Array.isArray(K1[$])?j=K1[$][t1]:j=K1[$],E1=!0):C.samples>0&&h1.useMultisampledRTT(C)===!1?j=e1.get(C).__webglMultisampledFramebuffer:Array.isArray(K1)?j=K1[t1]:j=K1,U.copy(C.viewport),B.copy(C.scissor),X=C.scissorTest}else U.copy(F1).multiplyScalar(H).floor(),B.copy(X1).multiplyScalar(H).floor(),X=u2;if(t1!==0&&(j=t0),q.bindFramebuffer(S.FRAMEBUFFER,j)&&n1&&q.drawBuffers(C,j),q.viewport(U),q.scissor(B),q.setScissorTest(X),E1){const O1=e1.get(C.texture);S.framebufferTexture2D(S.FRAMEBUFFER,S.COLOR_ATTACHMENT0,S.TEXTURE_CUBE_MAP_POSITIVE_X+$,O1.__webglTexture,t1)}else if(U1){const O1=$;for(let j1=0;j1<C.textures.length;j1++){const K1=e1.get(C.textures[j1]);S.framebufferTextureLayer(S.FRAMEBUFFER,S.COLOR_ATTACHMENT0+j1,K1.__webglTexture,t1,O1)}}else if(C!==null&&t1!==0){const O1=e1.get(C.texture);S.framebufferTexture2D(S.FRAMEBUFFER,S.COLOR_ATTACHMENT0,S.TEXTURE_2D,O1.__webglTexture,t1)}T=-1},this.readRenderTargetPixels=function(C,$,t1,n1,j,E1,U1,H1=0){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let O1=e1.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&U1!==void 0&&(O1=O1[U1]),O1){q.bindFramebuffer(S.FRAMEBUFFER,O1);try{const j1=C.textures[H1],K1=j1.format,W1=j1.type;if(!s1.textureFormatReadable(K1)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!s1.textureTypeReadable(W1)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}$>=0&&$<=C.width-n1&&t1>=0&&t1<=C.height-j&&(C.textures.length>1&&S.readBuffer(S.COLOR_ATTACHMENT0+H1),S.readPixels($,t1,n1,j,D1.convert(K1),D1.convert(W1),E1))}finally{const j1=L!==null?e1.get(L).__webglFramebuffer:null;q.bindFramebuffer(S.FRAMEBUFFER,j1)}}},this.readRenderTargetPixelsAsync=async function(C,$,t1,n1,j,E1,U1,H1=0){if(!(C&&C.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let O1=e1.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&U1!==void 0&&(O1=O1[U1]),O1)if($>=0&&$<=C.width-n1&&t1>=0&&t1<=C.height-j){q.bindFramebuffer(S.FRAMEBUFFER,O1);const j1=C.textures[H1],K1=j1.format,W1=j1.type;if(!s1.textureFormatReadable(K1))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!s1.textureTypeReadable(W1))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const s2=S.createBuffer();S.bindBuffer(S.PIXEL_PACK_BUFFER,s2),S.bufferData(S.PIXEL_PACK_BUFFER,E1.byteLength,S.STREAM_READ),C.textures.length>1&&S.readBuffer(S.COLOR_ATTACHMENT0+H1),S.readPixels($,t1,n1,j,D1.convert(K1),D1.convert(W1),0);const g2=L!==null?e1.get(L).__webglFramebuffer:null;q.bindFramebuffer(S.FRAMEBUFFER,g2);const I2=S.fenceSync(S.SYNC_GPU_COMMANDS_COMPLETE,0);return S.flush(),await Zm(S,I2,4),S.bindBuffer(S.PIXEL_PACK_BUFFER,s2),S.getBufferSubData(S.PIXEL_PACK_BUFFER,0,E1),S.deleteBuffer(s2),S.deleteSync(I2),E1}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(C,$=null,t1=0){const n1=Math.pow(2,-t1),j=Math.floor(C.image.width*n1),E1=Math.floor(C.image.height*n1),U1=$!==null?$.x:0,H1=$!==null?$.y:0;h1.setTexture2D(C,0),S.copyTexSubImage2D(S.TEXTURE_2D,t1,0,0,U1,H1,j,E1),q.unbindTexture()};const Y0=S.createFramebuffer(),br=S.createFramebuffer();this.copyTextureToTexture=function(C,$,t1=null,n1=null,j=0,E1=null){E1===null&&(j!==0?(P0("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),E1=j,j=0):E1=0);let U1,H1,O1,j1,K1,W1,s2,g2,I2;const m2=C.isCompressedTexture?C.mipmaps[E1]:C.image;if(t1!==null)U1=t1.max.x-t1.min.x,H1=t1.max.y-t1.min.y,O1=t1.isBox3?t1.max.z-t1.min.z:1,j1=t1.min.x,K1=t1.min.y,W1=t1.isBox3?t1.min.z:0;else{const p3=Math.pow(2,-j);U1=Math.floor(m2.width*p3),H1=Math.floor(m2.height*p3),C.isDataArrayTexture?O1=m2.depth:C.isData3DTexture?O1=Math.floor(m2.depth*p3):O1=1,j1=0,K1=0,W1=0}n1!==null?(s2=n1.x,g2=n1.y,I2=n1.z):(s2=0,g2=0,I2=0);const v2=D1.convert($.format),q1=D1.convert($.type);let L2;$.isData3DTexture?(h1.setTexture3D($,0),L2=S.TEXTURE_3D):$.isDataArrayTexture||$.isCompressedArrayTexture?(h1.setTexture2DArray($,0),L2=S.TEXTURE_2D_ARRAY):(h1.setTexture2D($,0),L2=S.TEXTURE_2D),S.pixelStorei(S.UNPACK_FLIP_Y_WEBGL,$.flipY),S.pixelStorei(S.UNPACK_PREMULTIPLY_ALPHA_WEBGL,$.premultiplyAlpha),S.pixelStorei(S.UNPACK_ALIGNMENT,$.unpackAlignment);const a2=S.getParameter(S.UNPACK_ROW_LENGTH),n3=S.getParameter(S.UNPACK_IMAGE_HEIGHT),re=S.getParameter(S.UNPACK_SKIP_PIXELS),a3=S.getParameter(S.UNPACK_SKIP_ROWS),je=S.getParameter(S.UNPACK_SKIP_IMAGES);S.pixelStorei(S.UNPACK_ROW_LENGTH,m2.width),S.pixelStorei(S.UNPACK_IMAGE_HEIGHT,m2.height),S.pixelStorei(S.UNPACK_SKIP_PIXELS,j1),S.pixelStorei(S.UNPACK_SKIP_ROWS,K1),S.pixelStorei(S.UNPACK_SKIP_IMAGES,W1);const w2=C.isDataArrayTexture||C.isData3DTexture,J2=$.isDataArrayTexture||$.isData3DTexture;if(C.isDepthTexture){const p3=e1.get(C),n2=e1.get($),q2=e1.get(p3.__renderTarget),T3=e1.get(n2.__renderTarget);q.bindFramebuffer(S.READ_FRAMEBUFFER,q2.__webglFramebuffer),q.bindFramebuffer(S.DRAW_FRAMEBUFFER,T3.__webglFramebuffer);for(let se=0;se<O1;se++)w2&&(S.framebufferTextureLayer(S.READ_FRAMEBUFFER,S.COLOR_ATTACHMENT0,e1.get(C).__webglTexture,j,W1+se),S.framebufferTextureLayer(S.DRAW_FRAMEBUFFER,S.COLOR_ATTACHMENT0,e1.get($).__webglTexture,E1,I2+se)),S.blitFramebuffer(j1,K1,U1,H1,s2,g2,U1,H1,S.DEPTH_BUFFER_BIT,S.NEAREST);q.bindFramebuffer(S.READ_FRAMEBUFFER,null),q.bindFramebuffer(S.DRAW_FRAMEBUFFER,null)}else if(j!==0||C.isRenderTargetTexture||e1.has(C)){const p3=e1.get(C),n2=e1.get($);q.bindFramebuffer(S.READ_FRAMEBUFFER,Y0),q.bindFramebuffer(S.DRAW_FRAMEBUFFER,br);for(let q2=0;q2<O1;q2++)w2?S.framebufferTextureLayer(S.READ_FRAMEBUFFER,S.COLOR_ATTACHMENT0,p3.__webglTexture,j,W1+q2):S.framebufferTexture2D(S.READ_FRAMEBUFFER,S.COLOR_ATTACHMENT0,S.TEXTURE_2D,p3.__webglTexture,j),J2?S.framebufferTextureLayer(S.DRAW_FRAMEBUFFER,S.COLOR_ATTACHMENT0,n2.__webglTexture,E1,I2+q2):S.framebufferTexture2D(S.DRAW_FRAMEBUFFER,S.COLOR_ATTACHMENT0,S.TEXTURE_2D,n2.__webglTexture,E1),j!==0?S.blitFramebuffer(j1,K1,U1,H1,s2,g2,U1,H1,S.COLOR_BUFFER_BIT,S.NEAREST):J2?S.copyTexSubImage3D(L2,E1,s2,g2,I2+q2,j1,K1,U1,H1):S.copyTexSubImage2D(L2,E1,s2,g2,j1,K1,U1,H1);q.bindFramebuffer(S.READ_FRAMEBUFFER,null),q.bindFramebuffer(S.DRAW_FRAMEBUFFER,null)}else J2?C.isDataTexture||C.isData3DTexture?S.texSubImage3D(L2,E1,s2,g2,I2,U1,H1,O1,v2,q1,m2.data):$.isCompressedArrayTexture?S.compressedTexSubImage3D(L2,E1,s2,g2,I2,U1,H1,O1,v2,m2.data):S.texSubImage3D(L2,E1,s2,g2,I2,U1,H1,O1,v2,q1,m2):C.isDataTexture?S.texSubImage2D(S.TEXTURE_2D,E1,s2,g2,U1,H1,v2,q1,m2.data):C.isCompressedTexture?S.compressedTexSubImage2D(S.TEXTURE_2D,E1,s2,g2,m2.width,m2.height,v2,m2.data):S.texSubImage2D(S.TEXTURE_2D,E1,s2,g2,U1,H1,v2,q1,m2);S.pixelStorei(S.UNPACK_ROW_LENGTH,a2),S.pixelStorei(S.UNPACK_IMAGE_HEIGHT,n3),S.pixelStorei(S.UNPACK_SKIP_PIXELS,re),S.pixelStorei(S.UNPACK_SKIP_ROWS,a3),S.pixelStorei(S.UNPACK_SKIP_IMAGES,je),E1===0&&$.generateMipmaps&&S.generateMipmap(L2),q.unbindTexture()},this.copyTextureToTexture3D=function(C,$,t1=null,n1=null,j=0){return P0('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(C,$,t1,n1,j)},this.initRenderTarget=function(C){e1.get(C).__webglFramebuffer===void 0&&h1.setupRenderTarget(C)},this.initTexture=function(C){C.isCubeTexture?h1.setTextureCube(C,0):C.isData3DTexture?h1.setTexture3D(C,0):C.isDataArrayTexture||C.isCompressedArrayTexture?h1.setTexture2DArray(C,0):h1.setTexture2D(C,0),q.unbindTexture()},this.resetState=function(){R=0,D=0,L=null,q.reset(),w1.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return me}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=p2._getDrawingBufferColorSpace(e),t.unpackColorSpace=p2._getUnpackColorSpace()}}class xx extends Pa{constructor(e){super(e)}load(e,t,i,r){const s=this,o=new D8(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(a))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},i,r)}parse(e){function t(u){const c=new DataView(u),f=32/8*3+32/8*3*3+16/8,h=c.getUint32(80,!0);if(80+32/8+h*f===c.byteLength)return!0;const g=[115,111,108,105,100];for(let y=0;y<5;y++)if(i(g,c,y))return!1;return!0}function i(u,c,f){for(let h=0,d=u.length;h<d;h++)if(u[h]!==c.getUint8(f+h))return!1;return!0}function r(u){const c=new DataView(u),f=c.getUint32(80,!0);let h,d,g,y=!1,m,p,w,M,_;for(let U=0;U<70;U++)c.getUint32(U,!1)==1129270351&&c.getUint8(U+4)==82&&c.getUint8(U+5)==61&&(y=!0,m=new Float32Array(f*3*3),p=c.getUint8(U+6)/255,w=c.getUint8(U+7)/255,M=c.getUint8(U+8)/255,_=c.getUint8(U+9)/255);const A=84,R=50,D=new Ge,L=new Float32Array(f*3*3),T=new Float32Array(f*3*3),b=new M2;for(let U=0;U<f;U++){const B=A+U*R,X=c.getFloat32(B,!0),K=c.getFloat32(B+4,!0),a1=c.getFloat32(B+8,!0);if(y){const z=c.getUint16(B+48,!0);(z&32768)===0?(h=(z&31)/31,d=(z>>5&31)/31,g=(z>>10&31)/31):(h=p,d=w,g=M)}for(let z=1;z<=3;z++){const r1=B+z*12,H=U*3*3+(z-1)*3;L[H]=c.getFloat32(r1,!0),L[H+1]=c.getFloat32(r1+4,!0),L[H+2]=c.getFloat32(r1+8,!0),T[H]=X,T[H+1]=K,T[H+2]=a1,y&&(b.setRGB(h,d,g,R3),m[H]=b.r,m[H+1]=b.g,m[H+2]=b.b)}}return D.setAttribute("position",new D3(L,3)),D.setAttribute("normal",new D3(T,3)),y&&(D.setAttribute("color",new D3(m,3)),D.hasColors=!0,D.alpha=_),D}function s(u){const c=new Ge,f=/solid([\s\S]*?)endsolid/g,h=/facet([\s\S]*?)endfacet/g,d=/solid\s(.+)/;let g=0;const y=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,m=new RegExp("vertex"+y+y+y,"g"),p=new RegExp("normal"+y+y+y,"g"),w=[],M=[],_=[],A=new i1;let R,D=0,L=0,T=0;for(;(R=f.exec(u))!==null;){L=T;const b=R[0],U=(R=d.exec(b))!==null?R[1]:"";for(_.push(U);(R=h.exec(b))!==null;){let K=0,a1=0;const z=R[0];for(;(R=p.exec(z))!==null;)A.x=parseFloat(R[1]),A.y=parseFloat(R[2]),A.z=parseFloat(R[3]),a1++;for(;(R=m.exec(z))!==null;)w.push(parseFloat(R[1]),parseFloat(R[2]),parseFloat(R[3])),M.push(A.x,A.y,A.z),K++,T++;a1!==1&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+g),K!==3&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+g),g++}const B=L,X=T-L;c.userData.groupNames=_,c.addGroup(B,X,D),D++}return c.setAttribute("position",new Fe(w,3)),c.setAttribute("normal",new Fe(M,3)),c}function o(u){return typeof u!="string"?new TextDecoder().decode(u):u}function a(u){if(typeof u=="string"){const c=new Uint8Array(u.length);for(let f=0;f<u.length;f++)c[f]=u.charCodeAt(f)&255;return c.buffer||c}else return u}const l=a(e);return t(l)?r(l):s(o(e))}}var Mx=Object.defineProperty,Sx=(n,e,t)=>e in n?Mx(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,Q1=(n,e,t)=>Sx(n,typeof e!="symbol"?e+"":e,t),Ex=class{requestAnimationFrame(n){return requestAnimationFrame(n)}cancelAnimationFrame(n){cancelAnimationFrame(n)}},bx=class{constructor(){Q1(this,"_lastHandleId",0),Q1(this,"_lastImmediate",null)}requestAnimationFrame(n){return this._lastHandleId>=Number.MAX_SAFE_INTEGER&&(this._lastHandleId=0),this._lastHandleId+=1,this._lastImmediate=setImmediate(()=>{n(Date.now())}),this._lastHandleId}cancelAnimationFrame(n){this._lastImmediate&&clearImmediate(this._lastImmediate)}},Tx=class{constructor(){Q1(this,"_strategy"),this._strategy=typeof requestAnimationFrame=="function"?new Ex:new bx}requestAnimationFrame(n){return this._strategy.requestAnimationFrame(n)}cancelAnimationFrame(n){this._strategy.cancelAnimationFrame(n)}},Y2=typeof window<"u"&&typeof window.document<"u",Es=new Uint8Array([80,75,3,4]),wx=["v","ip","op","layers","fr","w","h"],a5="0.55.0",l5="@lottiefiles/dotlottie-web",Ax=.75,Cx=4,Rx=(()=>{var n=typeof document<"u"?document.currentScript?.src:void 0;return function(e={}){var t;function i(v,x,I){return(x=r(x))in v?Object.defineProperty(v,x,{value:I,enumerable:!0,configurable:!0,writable:!0}):v[x]=I,v}function r(v){var x=s(v,"string");return typeof x=="symbol"?x:x+""}function s(v,x){if(typeof v!="object"||!v)return v;var I=v[Symbol.toPrimitive];if(I!==void 0){var O=I.call(v,x);if(typeof O!="object")return O;throw new TypeError("@@toPrimitive must return a primitive value.")}return(x==="string"?String:Number)(v)}var o=e,a,l,u=new Promise((v,x)=>{a=v,l=x}),c=Object.assign({},o),f="./this.program",h="",d;typeof document<"u"&&document.currentScript&&(h=document.currentScript.src),n&&(h=n),h.startsWith("blob:")?h="":h=h.substr(0,h.replace(/[?#].*/,"").lastIndexOf("/")+1),d=async v=>{if(v=await fetch(v,{credentials:"same-origin"}),v.ok)return v.arrayBuffer();throw Error(v.status+" : "+v.url)};var g=o.printErr||console.error.bind(console);Object.assign(o,c),c=null,o.thisProgram&&(f=o.thisProgram);var y=o.wasmBinary,m,p=!1,w,M,_,A,R,D,L,T,b;function U(){var v=m.buffer;o.HEAP8=M=new Int8Array(v),o.HEAP16=A=new Int16Array(v),o.HEAPU8=_=new Uint8Array(v),o.HEAPU16=R=new Uint16Array(v),o.HEAP32=D=new Int32Array(v),o.HEAPU32=L=new Uint32Array(v),o.HEAPF32=T=new Float32Array(v),o.HEAPF64=b=new Float64Array(v)}var B=[],X=[],K=[];function a1(){var v=o.preRun.shift();B.unshift(v)}var z=0,r1=null;function H(v){var x;throw(x=o.onAbort)===null||x===void 0||x.call(o,v),v="Aborted("+v+")",g(v),p=!0,v=new WebAssembly.RuntimeError(v+". Build with -sASSERTIONS for more info."),l(v),v}var y1=v=>v.startsWith("data:application/octet-stream;base64,"),C1;async function F1(v){if(!y)try{var x=await d(v);return new Uint8Array(x)}catch{}if(v==C1&&y)v=new Uint8Array(y);else throw"both async and sync fetching of the wasm failed";return v}async function X1(v,x){try{var I=await F1(v);return await WebAssembly.instantiate(I,x)}catch(O){g(`failed to asynchronously prepare wasm: ${O}`),H(O)}}async function u2(v){var x=C1;if(!y&&typeof WebAssembly.instantiateStreaming=="function"&&!y1(x)&&typeof fetch=="function")try{var I=fetch(x,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(I,v)}catch(O){g(`wasm streaming compile failed: ${O}`),g("falling back to ArrayBuffer instantiation")}return X1(x,v)}class o2{constructor(x){i(this,"name","ExitStatus"),this.message=`Program terminated with exit(${x})`,this.status=x}}var c1=v=>{for(;0<v.length;)v.shift()(o)},b1=o.noExitRuntime||!0,V=typeof TextDecoder<"u"?new TextDecoder:void 0,f1=function(){let v=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,x=arguments.length>1&&arguments[1]!==void 0?arguments[1]:NaN;var I=_,O=v+x;for(x=v;I[x]&&!(x>=O);)++x;if(16<x-v&&I.buffer&&V)return V.decode(I.subarray(v,x));for(O="";v<x;){var W=I[v++];if(W&128){var Z=I[v++]&63;if((W&224)==192)O+=String.fromCharCode((W&31)<<6|Z);else{var v1=I[v++]&63;W=(W&240)==224?(W&15)<<12|Z<<6|v1:(W&7)<<18|Z<<12|v1<<6|I[v++]&63,65536>W?O+=String.fromCharCode(W):(W-=65536,O+=String.fromCharCode(55296|W>>10,56320|W&1023))}}else O+=String.fromCharCode(W)}return O};class u1{constructor(x){this.Ca=x-24}}var g1=0,z1=(v,x,I)=>{var O=_;if(0<I){I=x+I-1;for(var W=0;W<v.length;++W){var Z=v.charCodeAt(W);if(55296<=Z&&57343>=Z){var v1=v.charCodeAt(++W);Z=65536+((Z&1023)<<10)|v1&1023}if(127>=Z){if(x>=I)break;O[x++]=Z}else{if(2047>=Z){if(x+1>=I)break;O[x++]=192|Z>>6}else{if(65535>=Z){if(x+2>=I)break;O[x++]=224|Z>>12}else{if(x+3>=I)break;O[x++]=240|Z>>18,O[x++]=128|Z>>12&63}O[x++]=128|Z>>6&63}O[x++]=128|Z&63}}O[x]=0}},B1={},S=v=>{for(;v.length;){var x=v.pop();v.pop()(x)}};function F(v){return this.fromWireType(L[v>>2])}var k={},s1={},q={},l1,e1=(v,x,I)=>{function O(m1){if(m1=I(m1),m1.length!==v.length)throw new l1("Mismatched type converter count");for(var V1=0;V1<v.length;++V1)E(v[V1],m1[V1])}v.forEach(m1=>q[m1]=x);var W=Array(x.length),Z=[],v1=0;x.forEach((m1,V1)=>{s1.hasOwnProperty(m1)?W[V1]=s1[m1]:(Z.push(m1),k.hasOwnProperty(m1)||(k[m1]=[]),k[m1].push(()=>{W[V1]=s1[m1],++v1,v1===Z.length&&O(W)}))}),Z.length===0&&O(W)},h1,d1=v=>{for(var x="";_[v];)x+=h1[_[v++]];return x},Q;function P(v,x){let I=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};var O=x.name;if(!v)throw new Q(`type "${O}" must have a positive integer typeid pointer`);if(s1.hasOwnProperty(v)){if(I.hb)return;throw new Q(`Cannot register type '${O}' twice`)}s1[v]=x,delete q[v],k.hasOwnProperty(v)&&(x=k[v],delete k[v],x.forEach(W=>W()))}function E(v,x){let I=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};return P(v,x,I)}var N=v=>{throw new Q(v.Aa.Da.Ba.name+" instance already deleted")},Y=!1,o1=()=>{},J=(v,x,I)=>x===I?v:I.Ga===void 0?null:(v=J(v,x,I.Ga),v===null?null:I.$a(v)),T1={},x1={},P1=(v,x)=>{if(x===void 0)throw new Q("ptr should not be undefined");for(;v.Ga;)x=v.Qa(x),v=v.Ga;return x1[x]},I1=(v,x)=>{if(!x.Da||!x.Ca)throw new l1("makeClassHandle requires ptr and ptrType");if(!!x.Ha!=!!x.Fa)throw new l1("Both smartPtrType and smartPtr must be specified");return x.count={value:1},_1(Object.create(v,{Aa:{value:x,writable:!0}}))},_1=v=>typeof FinalizationRegistry>"u"?(_1=x=>x,v):(Y=new FinalizationRegistry(x=>{x=x.Aa,--x.count.value,x.count.value===0&&(x.Fa?x.Ha.Ka(x.Fa):x.Da.Ba.Ka(x.Ca))}),_1=x=>{var I=x.Aa;return I.Fa&&Y.register(x,{Aa:I},x),x},o1=x=>{Y.unregister(x)},_1(v));function A1(){}var G1=(v,x)=>Object.defineProperty(x,"name",{value:v}),D1=(v,x,I)=>{if(v[x].Ea===void 0){var O=v[x];v[x]=function(){for(var W=arguments.length,Z=new Array(W),v1=0;v1<W;v1++)Z[v1]=arguments[v1];if(!v[x].Ea.hasOwnProperty(Z.length))throw new Q(`Function '${I}' called with an invalid number of arguments (${Z.length}) - expects one of (${v[x].Ea})!`);return v[x].Ea[Z.length].apply(this,Z)},v[x].Ea=[],v[x].Ea[O.Na]=O}},w1=(v,x,I)=>{if(o.hasOwnProperty(v)){if(I===void 0||o[v].Ea!==void 0&&o[v].Ea[I]!==void 0)throw new Q(`Cannot register public name '${v}' twice`);if(D1(o,v,v),o[v].Ea.hasOwnProperty(I))throw new Q(`Cannot register multiple overloads of a function with the same number of arguments (${I})!`);o[v].Ea[I]=x}else o[v]=x,o[v].Na=I},t2=v=>{v=v.replace(/[^a-zA-Z0-9_]/g,"$");var x=v.charCodeAt(0);return 48<=x&&57>=x?`_${v}`:v};function G(v,x,I,O,W,Z,v1,m1){this.name=v,this.constructor=x,this.Ma=I,this.Ka=O,this.Ga=W,this.bb=Z,this.Qa=v1,this.$a=m1,this.jb=[]}var S1=(v,x,I)=>{for(;x!==I;){if(!x.Qa)throw new Q(`Expected null or instance of ${I.name}, got an instance of ${x.name}`);v=x.Qa(v),x=x.Ga}return v};function R1(v,x){if(x===null){if(this.Ta)throw new Q(`null is not a valid ${this.name}`);return 0}if(!x.Aa)throw new Q(`Cannot pass "${Y0(x)}" as a ${this.name}`);if(!x.Aa.Ca)throw new Q(`Cannot pass deleted object as a pointer of type ${this.name}`);return S1(x.Aa.Ca,x.Aa.Da.Ba,this.Ba)}function N1(v,x){if(x===null){if(this.Ta)throw new Q(`null is not a valid ${this.name}`);if(this.Sa){var I=this.Ua();return v!==null&&v.push(this.Ka,I),I}return 0}if(!x||!x.Aa)throw new Q(`Cannot pass "${Y0(x)}" as a ${this.name}`);if(!x.Aa.Ca)throw new Q(`Cannot pass deleted object as a pointer of type ${this.name}`);if(!this.Ra&&x.Aa.Da.Ra)throw new Q(`Cannot convert argument of type ${x.Aa.Ha?x.Aa.Ha.name:x.Aa.Da.name} to parameter type ${this.name}`);if(I=S1(x.Aa.Ca,x.Aa.Da.Ba,this.Ba),this.Sa){if(x.Aa.Fa===void 0)throw new Q("Passing raw pointer to smart pointer is illegal");switch(this.ob){case 0:if(x.Aa.Ha===this)I=x.Aa.Fa;else throw new Q(`Cannot convert argument of type ${x.Aa.Ha?x.Aa.Ha.name:x.Aa.Da.name} to parameter type ${this.name}`);break;case 1:I=x.Aa.Fa;break;case 2:if(x.Aa.Ha===this)I=x.Aa.Fa;else{var O=x.clone();I=this.kb(I,e0(()=>O.delete())),v!==null&&v.push(this.Ka,I)}break;default:throw new Q("Unsupporting sharing policy")}}return I}function M1(v,x){if(x===null){if(this.Ta)throw new Q(`null is not a valid ${this.name}`);return 0}if(!x.Aa)throw new Q(`Cannot pass "${Y0(x)}" as a ${this.name}`);if(!x.Aa.Ca)throw new Q(`Cannot pass deleted object as a pointer of type ${this.name}`);if(x.Aa.Da.Ra)throw new Q(`Cannot convert argument of type ${x.Aa.Da.name} to parameter type ${this.name}`);return S1(x.Aa.Ca,x.Aa.Da.Ba,this.Ba)}function p1(v,x,I,O,W,Z,v1,m1,V1,Z1,Y1){this.name=v,this.Ba=x,this.Ta=I,this.Ra=O,this.Sa=W,this.ib=Z,this.ob=v1,this.Ya=m1,this.Ua=V1,this.kb=Z1,this.Ka=Y1,W||x.Ga!==void 0?this.toWireType=N1:(this.toWireType=O?R1:M1,this.Ja=null)}var k1=(v,x,I)=>{if(!o.hasOwnProperty(v))throw new l1("Replacing nonexistent public symbol");o[v].Ea!==void 0&&I!==void 0?o[v].Ea[I]=x:(o[v]=x,o[v].Na=I)},$1,E2=function(v,x){let I=arguments.length>2&&arguments[2]!==void 0?arguments[2]:[];return v.includes("j")?(v=v.replace(/p/g,"i"),x=(0,o["dynCall_"+v])(x,...I)):x=$1.get(x)(...I),x},h2=(v,x)=>function(){for(var I=arguments.length,O=new Array(I),W=0;W<I;W++)O[W]=arguments[W];return E2(v,x,O)},P2=(v,x)=>{v=d1(v);var I=v.includes("j")?h2(v,x):$1.get(x);if(typeof I!="function")throw new Q(`unknown function pointer with signature ${v}: ${x}`);return I},b3,j0=v=>{v=se(v);var x=d1(v);return T3(v),x},F3=(v,x)=>{function I(Z){W[Z]||s1[Z]||(q[Z]?q[Z].forEach(I):(O.push(Z),W[Z]=!0))}var O=[],W={};throw x.forEach(I),new b3(`${v}: `+O.map(j0).join([", "]))},yt=(v,x)=>{for(var I=[],O=0;O<v;O++)I.push(L[x+4*O>>2]);return I};function Vn(v){for(var x=1;x<v.length;++x)if(v[x]!==null&&v[x].Ja===void 0)return!0;return!1}function Zt(v,x,I,O,W){var Z=x.length;if(2>Z)throw new Q("argTypes array size mismatch! Must at least get return value and 'this' types!");var v1=x[1]!==null&&I!==null,m1=Vn(x),V1=x[0].name!=="void",Z1=Z-2,Y1=Array(Z1),d2=[],T2=[];return G1(v,function(){for(var N3=arguments.length,F2=new Array(N3),W3=0;W3<N3;W3++)F2[W3]=arguments[W3];if(T2.length=0,d2.length=v1?2:1,d2[0]=W,v1){var m3=x[1].toWireType(T2,this);d2[1]=m3}for(var H2=0;H2<Z1;++H2)Y1[H2]=x[H2+2].toWireType(T2,F2[H2]),d2.push(Y1[H2]);if(F2=O(...d2),m1)S(T2);else for(H2=v1?1:2;H2<x.length;H2++){var l3=H2===1?m3:Y1[H2-2];x[H2].Ja!==null&&x[H2].Ja(l3)}return m3=V1?x[0].fromWireType(F2):void 0,m3})}var xt=v=>{v=v.trim();let x=v.indexOf("(");return x!==-1?v.substr(0,x):v},Jt=[],d3=[],Qt=v=>{9<v&&--d3[v+1]===0&&(d3[v]=void 0,Jt.push(v))},ye=v=>{if(!v)throw new Q("Cannot use deleted val. handle = "+v);return d3[v]},e0=v=>{switch(v){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let x=Jt.pop()||d3.length;return d3[x]=v,d3[x+1]=1,x}},Gn={name:"emscripten::val",fromWireType:v=>{var x=ye(v);return Qt(v),x},toWireType:(v,x)=>e0(x),Ia:8,readValueFromPointer:F,Ja:null},Er=(v,x,I)=>{switch(x){case 1:return I?function(O){return this.fromWireType(M[O])}:function(O){return this.fromWireType(_[O])};case 2:return I?function(O){return this.fromWireType(A[O>>1])}:function(O){return this.fromWireType(R[O>>1])};case 4:return I?function(O){return this.fromWireType(D[O>>2])}:function(O){return this.fromWireType(L[O>>2])};default:throw new TypeError(`invalid integer width (${x}): ${v}`)}},t0=(v,x)=>{var I=s1[v];if(I===void 0)throw v=`${x} has unknown type ${j0(v)}`,new Q(v);return I},Y0=v=>{if(v===null)return"null";var x=typeof v;return x==="object"||x==="array"||x==="function"?v.toString():""+v},br=(v,x)=>{switch(x){case 4:return function(I){return this.fromWireType(T[I>>2])};case 8:return function(I){return this.fromWireType(b[I>>3])};default:throw new TypeError(`invalid float width (${x}): ${v}`)}},C=(v,x,I)=>{switch(x){case 1:return I?O=>M[O]:O=>_[O];case 2:return I?O=>A[O>>1]:O=>R[O>>1];case 4:return I?O=>D[O>>2]:O=>L[O>>2];default:throw new TypeError(`invalid integer width (${x}): ${v}`)}},$=Object.assign({optional:!0},Gn),t1=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,n1=(v,x)=>{for(var I=v>>1,O=I+x/2;!(I>=O)&&R[I];)++I;if(I<<=1,32<I-v&&t1)return t1.decode(_.subarray(v,I));for(I="",O=0;!(O>=x/2);++O){var W=A[v+2*O>>1];if(W==0)break;I+=String.fromCharCode(W)}return I},j=(v,x,I)=>{var O;if((O=I)!==null&&O!==void 0||(I=2147483647),2>I)return 0;I-=2;var W=x;I=I<2*v.length?I/2:v.length;for(var Z=0;Z<I;++Z)A[x>>1]=v.charCodeAt(Z),x+=2;return A[x>>1]=0,x-W},E1=v=>2*v.length,U1=(v,x)=>{for(var I=0,O="";!(I>=x/4);){var W=D[v+4*I>>2];if(W==0)break;++I,65536<=W?(W-=65536,O+=String.fromCharCode(55296|W>>10,56320|W&1023)):O+=String.fromCharCode(W)}return O},H1=(v,x,I)=>{var O;if((O=I)!==null&&O!==void 0||(I=2147483647),4>I)return 0;var W=x;I=W+I-4;for(var Z=0;Z<v.length;++Z){var v1=v.charCodeAt(Z);if(55296<=v1&&57343>=v1){var m1=v.charCodeAt(++Z);v1=65536+((v1&1023)<<10)|m1&1023}if(D[x>>2]=v1,x+=4,x+4>I)break}return D[x>>2]=0,x-W},O1=v=>{for(var x=0,I=0;I<v.length;++I){var O=v.charCodeAt(I);55296<=O&&57343>=O&&++I,x+=4}return x},j1=0,K1=(v,x,I)=>{var O=[];return v=v.toWireType(O,I),O.length&&(L[x>>2]=e0(O)),v},W1=[],s2=v=>{var x=W1.length;return W1.push(v),x},g2=(v,x)=>{for(var I=Array(v),O=0;O<v;++O)I[O]=t0(L[x+4*O>>2],"parameter "+O);return I},I2=Reflect.construct,m2={},v2=v=>{if(!(v instanceof o2||v=="unwind"))throw v},q1=v=>{var x;throw w=v,b1||0<j1||((x=o.onExit)!==null&&x!==void 0&&x.call(o,v),p=!0),new o2(v)},L2=v=>{if(!p)try{if(v(),!(b1||0<j1))try{w=v=w,q1(v)}catch(x){v2(x)}}catch(x){v2(x)}},a2={},n3=()=>{if(!re){var v={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:f||"./this.program"},x;for(x in a2)a2[x]===void 0?delete v[x]:v[x]=a2[x];var I=[];for(x in v)I.push(`${x}=${v[x]}`);re=I}return re},re,a3=()=>{if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function")return v=>crypto.getRandomValues(v);H("initRandomDevice")},je=v=>(je=a3())(v);l1=o.InternalError=class extends Error{constructor(v){super(v),this.name="InternalError"}};for(var w2=Array(256),J2=0;256>J2;++J2)w2[J2]=String.fromCharCode(J2);h1=w2,Q=o.BindingError=class extends Error{constructor(v){super(v),this.name="BindingError"}},Object.assign(A1.prototype,{isAliasOf:function(v){if(!(this instanceof A1&&v instanceof A1))return!1;var x=this.Aa.Da.Ba,I=this.Aa.Ca;v.Aa=v.Aa;var O=v.Aa.Da.Ba;for(v=v.Aa.Ca;x.Ga;)I=x.Qa(I),x=x.Ga;for(;O.Ga;)v=O.Qa(v),O=O.Ga;return x===O&&I===v},clone:function(){if(this.Aa.Ca||N(this),this.Aa.Pa)return this.Aa.count.value+=1,this;var v=_1,x=Object,I=x.create,O=Object.getPrototypeOf(this),W=this.Aa;return v=v(I.call(x,O,{Aa:{value:{count:W.count,Oa:W.Oa,Pa:W.Pa,Ca:W.Ca,Da:W.Da,Fa:W.Fa,Ha:W.Ha}}})),v.Aa.count.value+=1,v.Aa.Oa=!1,v},delete(){if(this.Aa.Ca||N(this),this.Aa.Oa&&!this.Aa.Pa)throw new Q("Object already scheduled for deletion");o1(this);var v=this.Aa;--v.count.value,v.count.value===0&&(v.Fa?v.Ha.Ka(v.Fa):v.Da.Ba.Ka(v.Ca)),this.Aa.Pa||(this.Aa.Fa=void 0,this.Aa.Ca=void 0)},isDeleted:function(){return!this.Aa.Ca},deleteLater:function(){if(this.Aa.Ca||N(this),this.Aa.Oa&&!this.Aa.Pa)throw new Q("Object already scheduled for deletion");return this.Aa.Oa=!0,this}}),Object.assign(p1.prototype,{cb(v){return this.Ya&&(v=this.Ya(v)),v},Wa(v){var x;(x=this.Ka)===null||x===void 0||x.call(this,v)},Ia:8,readValueFromPointer:F,fromWireType:function(v){function x(){return this.Sa?I1(this.Ba.Ma,{Da:this.ib,Ca:I,Ha:this,Fa:v}):I1(this.Ba.Ma,{Da:this,Ca:v})}var I=this.cb(v);if(!I)return this.Wa(v),null;var O=P1(this.Ba,I);if(O!==void 0)return O.Aa.count.value===0?(O.Aa.Ca=I,O.Aa.Fa=v,O.clone()):(O=O.clone(),this.Wa(v),O);if(O=this.Ba.bb(I),O=T1[O],!O)return x.call(this);O=this.Ra?O.Za:O.pointerType;var W=J(I,this.Ba,O.Ba);return W===null?x.call(this):this.Sa?I1(O.Ba.Ma,{Da:O,Ca:W,Ha:this,Fa:v}):I1(O.Ba.Ma,{Da:O,Ca:W})}}),b3=o.UnboundTypeError=((v,x)=>{var I=G1(x,function(O){this.name=x,this.message=O,O=Error(O).stack,O!==void 0&&(this.stack=this.toString()+`
`+O.replace(/^Error(:[^\n]*)?\n/,""))});return I.prototype=Object.create(v.prototype),I.prototype.constructor=I,I.prototype.toString=function(){return this.message===void 0?this.name:`${this.name}: ${this.message}`},I})(Error,"UnboundTypeError"),d3.push(0,1,void 0,1,null,1,!0,1,!1,1),o.count_emval_handles=()=>d3.length/2-5-Jt.length;var p3={c:(v,x,I,O)=>H(`Assertion failed: ${v?f1(v):""}, at: `+[x?x?f1(x):"":"unknown filename",I,O?O?f1(O):"":"unknown function"]),j:(v,x,I)=>{var O=new u1(v);throw L[O.Ca+16>>2]=0,L[O.Ca+4>>2]=x,L[O.Ca+8>>2]=I,g1=v,g1},P:()=>{},M:()=>{},N:()=>{},R:function(){},O:()=>{},T:()=>H(""),w:v=>{var x=B1[v];delete B1[v];var I=x.Ua,O=x.Ka,W=x.Xa,Z=W.map(v1=>v1.gb).concat(W.map(v1=>v1.mb));e1([v],Z,v1=>{var m1={};return W.forEach((V1,Z1)=>{var Y1=v1[Z1],d2=V1.eb,T2=V1.fb,N3=v1[Z1+W.length],F2=V1.lb,W3=V1.nb;m1[V1.ab]={read:m3=>Y1.fromWireType(d2(T2,m3)),write:(m3,H2)=>{var l3=[];F2(W3,m3,N3.toWireType(l3,H2)),S(l3)}}}),[{name:x.name,fromWireType:V1=>{var Z1={},Y1;for(Y1 in m1)Z1[Y1]=m1[Y1].read(V1);return O(V1),Z1},toWireType:(V1,Z1)=>{for(var Y1 in m1)if(!(Y1 in Z1))throw new TypeError(`Missing field: "${Y1}"`);var d2=I();for(Y1 in m1)m1[Y1].write(d2,Z1[Y1]);return V1!==null&&V1.push(O,d2),d2},Ia:8,readValueFromPointer:F,Ja:O}]})},F:()=>{},_:(v,x,I,O)=>{x=d1(x),E(v,{name:x,fromWireType:function(W){return!!W},toWireType:function(W,Z){return Z?I:O},Ia:8,readValueFromPointer:function(W){return this.fromWireType(_[W])},Ja:null})},m:(v,x,I,O,W,Z,v1,m1,V1,Z1,Y1,d2,T2)=>{Y1=d1(Y1),Z=P2(W,Z),m1&&(m1=P2(v1,m1)),Z1&&(Z1=P2(V1,Z1)),T2=P2(d2,T2);var N3=t2(Y1);w1(N3,function(){F3(`Cannot construct ${Y1} due to unbound types`,[O])}),e1([v,x,I],O?[O]:[],F2=>{if(F2=F2[0],O)var W3=F2.Ba,m3=W3.Ma;else m3=A1.prototype;F2=G1(Y1,function(){if(Object.getPrototypeOf(this)!==H2)throw new Q("Use 'new' to construct "+Y1);if(l3.La===void 0)throw new Q(Y1+" has no accessible constructor");for(var Oa=arguments.length,Xn=new Array(Oa),$n=0;$n<Oa;$n++)Xn[$n]=arguments[$n];var Fa=l3.La[Xn.length];if(Fa===void 0)throw new Q(`Tried to invoke ctor of ${Y1} with invalid number of parameters (${Xn.length}) - expected (${Object.keys(l3.La).toString()}) parameters instead!`);return Fa.apply(this,Xn)});var H2=Object.create(m3,{constructor:{value:F2}});F2.prototype=H2;var l3=new G(Y1,F2,H2,T2,W3,Z,m1,Z1);if(l3.Ga){var Ua,K0;(Ua=(K0=l3.Ga).Va)!==null&&Ua!==void 0||(K0.Va=[]),l3.Ga.Va.push(l3)}return W3=new p1(Y1,l3,!0,!1,!1),K0=new p1(Y1+"*",l3,!1,!1,!1),m3=new p1(Y1+" const*",l3,!1,!0,!1),T1[v]={pointerType:K0,Za:m3},k1(N3,F2),[W3,K0,m3]})},r:(v,x,I,O,W,Z)=>{var v1=yt(x,I);W=P2(O,W),e1([],[v],m1=>{m1=m1[0];var V1=`constructor ${m1.name}`;if(m1.Ba.La===void 0&&(m1.Ba.La=[]),m1.Ba.La[x-1]!==void 0)throw new Q(`Cannot register multiple constructors with identical number of parameters (${x-1}) for class '${m1.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return m1.Ba.La[x-1]=()=>{F3(`Cannot construct ${m1.name} due to unbound types`,v1)},e1([],v1,Z1=>(Z1.splice(1,0,null),m1.Ba.La[x-1]=Zt(V1,Z1,null,W,Z),[])),[]})},d:(v,x,I,O,W,Z,v1,m1)=>{var V1=yt(I,O);x=d1(x),x=xt(x),Z=P2(W,Z),e1([],[v],Z1=>{function Y1(){F3(`Cannot call ${d2} due to unbound types`,V1)}Z1=Z1[0];var d2=`${Z1.name}.${x}`;x.startsWith("@@")&&(x=Symbol[x.substring(2)]),m1&&Z1.Ba.jb.push(x);var T2=Z1.Ba.Ma,N3=T2[x];return N3===void 0||N3.Ea===void 0&&N3.className!==Z1.name&&N3.Na===I-2?(Y1.Na=I-2,Y1.className=Z1.name,T2[x]=Y1):(D1(T2,x,d2),T2[x].Ea[I-2]=Y1),e1([],V1,F2=>(F2=Zt(d2,F2,Z1,Z,v1),T2[x].Ea===void 0?(F2.Na=I-2,T2[x]=F2):T2[x].Ea[I-2]=F2,[])),[]})},Y:v=>E(v,Gn),D:(v,x,I,O)=>{function W(){}x=d1(x),W.values={},E(v,{name:x,constructor:W,fromWireType:function(Z){return this.constructor.values[Z]},toWireType:(Z,v1)=>v1.value,Ia:8,readValueFromPointer:Er(x,I,O),Ja:null}),w1(x,W)},l:(v,x,I)=>{var O=t0(v,"enum");x=d1(x),v=O.constructor,O=Object.create(O.constructor.prototype,{value:{value:I},constructor:{value:G1(`${O.name}_${x}`,function(){})}}),v.values[I]=O,v[x]=O},A:(v,x,I)=>{x=d1(x),E(v,{name:x,fromWireType:O=>O,toWireType:(O,W)=>W,Ia:8,readValueFromPointer:br(x,I),Ja:null})},v:(v,x,I,O,W,Z)=>{var v1=yt(x,I);v=d1(v),v=xt(v),W=P2(O,W),w1(v,function(){F3(`Cannot call ${v} due to unbound types`,v1)},x-1),e1([],v1,m1=>(k1(v,Zt(v,[m1[0],null].concat(m1.slice(1)),null,W,Z),x-1),[]))},n:(v,x,I,O,W)=>{if(x=d1(x),W===-1&&(W=4294967295),W=m1=>m1,O===0){var Z=32-8*I;W=m1=>m1<<Z>>>Z}var v1=x.includes("unsigned")?function(m1,V1){return V1>>>0}:function(m1,V1){return V1};E(v,{name:x,fromWireType:W,toWireType:v1,Ia:8,readValueFromPointer:C(x,I,O!==0),Ja:null})},g:(v,x,I)=>{function O(Z){return new W(M.buffer,L[Z+4>>2],L[Z>>2])}var W=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][x];I=d1(I),E(v,{name:I,fromWireType:O,Ia:8,readValueFromPointer:O},{hb:!0})},q:v=>{E(v,$)},u:(v,x,I,O,W,Z,v1,m1,V1,Z1,Y1,d2)=>{I=d1(I),Z=P2(W,Z),m1=P2(v1,m1),Z1=P2(V1,Z1),d2=P2(Y1,d2),e1([v],[x],T2=>(T2=T2[0],[new p1(I,T2.Ba,!1,!1,!0,T2,O,Z,m1,Z1,d2)]))},Z:(v,x)=>{x=d1(x),E(v,{name:x,fromWireType:function(I){for(var O=L[I>>2],W=I+4,Z,v1=W,m1=0;m1<=O;++m1){var V1=W+m1;(m1==O||_[V1]==0)&&(v1=v1?f1(v1,V1-v1):"",Z===void 0?Z=v1:(Z+="\0",Z+=v1),v1=V1+1)}return T3(I),Z},toWireType:function(I,O){O instanceof ArrayBuffer&&(O=new Uint8Array(O));var W,Z=typeof O=="string";if(!(Z||O instanceof Uint8Array||O instanceof Uint8ClampedArray||O instanceof Int8Array))throw new Q("Cannot pass non-string to std::string");if(Z)for(var v1=W=0;v1<O.length;++v1){var m1=O.charCodeAt(v1);127>=m1?W++:2047>=m1?W+=2:55296<=m1&&57343>=m1?(W+=4,++v1):W+=3}else W=O.length;if(v1=q2(4+W+1),m1=v1+4,L[v1>>2]=W,Z)z1(O,m1,W+1);else if(Z)for(Z=0;Z<W;++Z){var V1=O.charCodeAt(Z);if(255<V1)throw T3(m1),new Q("String has UTF-16 code units that do not fit in 8 bits");_[m1+Z]=V1}else for(Z=0;Z<W;++Z)_[m1+Z]=O[Z];return I!==null&&I.push(T3,v1),v1},Ia:8,readValueFromPointer:F,Ja(I){T3(I)}})},y:(v,x,I)=>{if(I=d1(I),x===2)var O=n1,W=j,Z=E1,v1=m1=>R[m1>>1];else x===4&&(O=U1,W=H1,Z=O1,v1=m1=>L[m1>>2]);E(v,{name:I,fromWireType:m1=>{for(var V1=L[m1>>2],Z1,Y1=m1+4,d2=0;d2<=V1;++d2){var T2=m1+4+d2*x;(d2==V1||v1(T2)==0)&&(Y1=O(Y1,T2-Y1),Z1===void 0?Z1=Y1:(Z1+="\0",Z1+=Y1),Y1=T2+x)}return T3(m1),Z1},toWireType:(m1,V1)=>{if(typeof V1!="string")throw new Q(`Cannot pass non-string to C++ string type ${I}`);var Z1=Z(V1),Y1=q2(4+Z1+x);return L[Y1>>2]=Z1/x,W(V1,Y1+4,Z1+x),m1!==null&&m1.push(T3,Y1),Y1},Ia:8,readValueFromPointer:F,Ja(m1){T3(m1)}})},x:(v,x,I,O,W,Z)=>{B1[v]={name:d1(x),Ua:P2(I,O),Ka:P2(W,Z),Xa:[]}},i:(v,x,I,O,W,Z,v1,m1,V1,Z1)=>{B1[v].Xa.push({ab:d1(x),gb:I,eb:P2(O,W),fb:Z,mb:v1,lb:P2(m1,V1),nb:Z1})},$:(v,x)=>{x=d1(x),E(v,{pb:!0,name:x,Ia:0,fromWireType:()=>{},toWireType:()=>{}})},K:()=>{b1=!1,j1=0},I:()=>{throw 1/0},C:(v,x,I)=>(v=ye(v),x=t0(x,"emval::as"),K1(x,I,v)),p:(v,x,I,O)=>(v=W1[v],x=ye(x),v(null,x,I,O)),W:Qt,E:(v,x)=>(v=ye(v),x=ye(x),v==x),o:(v,x,I)=>{var O=g2(v,x),W=O.shift();v--;var Z=Array(v);return x=`methodCaller<(${O.map(v1=>v1.name).join(", ")}) => ${W.name}>`,s2(G1(x,(v1,m1,V1,Z1)=>{for(var Y1=0,d2=0;d2<v;++d2)Z[d2]=O[d2].readValueFromPointer(Z1+Y1),Y1+=O[d2].Ia;return v1=I===1?I2(m1,Z):m1.apply(v1,Z),K1(W,V1,v1)}))},z:v=>{9<v&&(d3[v+1]+=1)},ca:v=>{var x=ye(v);S(x),Qt(v)},t:(v,x)=>(v=t0(v,"_emval_take_value"),v=v.readValueFromPointer(x),e0(v)),G:(v,x)=>{if(m2[v]&&(clearTimeout(m2[v].id),delete m2[v]),!x)return 0;var I=setTimeout(()=>{delete m2[v],L2(()=>Ia(v,performance.now()))},x);return m2[v]={id:I,qb:x},0},H:(v,x,I,O)=>{var W=new Date().getFullYear(),Z=new Date(W,0,1).getTimezoneOffset();W=new Date(W,6,1).getTimezoneOffset(),L[v>>2]=60*Math.max(Z,W),D[x>>2]=+(Z!=W),x=v1=>{var m1=Math.abs(v1);return`UTC${0<=v1?"-":"+"}${String(Math.floor(m1/60)).padStart(2,"0")}${String(m1%60).padStart(2,"0")}`},v=x(Z),x=x(W),W<Z?(z1(v,I,17),z1(x,O,17)):(z1(v,O,17),z1(x,I,17))},ba:()=>performance.now(),J:v=>{var x=_.length;if(v>>>=0,2147483648<v)return!1;for(var I=1;4>=I;I*=2){var O=x*(1+.2/I);O=Math.min(O,v+100663296);e:{O=(Math.min(2147483648,65536*Math.ceil(Math.max(v,O)/65536))-m.buffer.byteLength+65535)/65536|0;try{m.grow(O),U();var W=1;break e}catch{}W=void 0}if(W)return!0}return!1},V:(v,x)=>{var I=0;return n3().forEach((O,W)=>{var Z=x+I;for(W=L[v+4*W>>2]=Z,Z=0;Z<O.length;++Z)M[W++]=O.charCodeAt(Z);M[W]=0,I+=O.length+1}),0},X:(v,x)=>{var I=n3();L[v>>2]=I.length;var O=0;return I.forEach(W=>O+=W.length+1),L[x>>2]=O,0},S:()=>52,Q:()=>52,k:h5,f:_5,e:y5,B:d5,aa:v5,a:p5,b:g5,h:m5,s:x5,U:q1,L:(v,x)=>(je(_.subarray(v,v+x)),0)},n2;(async function(v,x){function I(Z){var v1;return n2=Z.exports,m=n2.da,U(),$1=n2.ga,X.unshift(n2.ea),z--,(v1=o.monitorRunDependencies)===null||v1===void 0||v1.call(o,z),z==0&&r1&&(Z=r1,r1=null,Z()),n2}z++,(v=o.monitorRunDependencies)===null||v===void 0||v.call(o,z);var O={a:p3};if(o.instantiateWasm)try{return o.instantiateWasm(O,I)}catch(Z){g(`Module.instantiateWasm callback failed with error: ${Z}`),l(Z)}(x=C1)!==null&&x!==void 0||(C1=y1("DotLottiePlayer.wasm")?"DotLottiePlayer.wasm":o.locateFile?o.locateFile("DotLottiePlayer.wasm",h):h+"DotLottiePlayer.wasm");try{var W=await u2(O);return I(W.instance),W}catch(Z){l(Z)}})();var q2=v=>(q2=n2.fa)(v),T3=v=>(T3=n2.ha)(v),se=v=>(se=n2.ia)(v),Ia=(v,x)=>(Ia=n2.ja)(v,x),oe=(v,x)=>(oe=n2.ka)(v,x),ae=v=>(ae=n2.la)(v),le=()=>(le=n2.ma)();o.dynCall_jiii=(v,x,I,O)=>(o.dynCall_jiii=n2.na)(v,x,I,O),o.dynCall_jii=(v,x,I)=>(o.dynCall_jii=n2.oa)(v,x,I),o.dynCall_vjii=(v,x,I,O,W)=>(o.dynCall_vjii=n2.pa)(v,x,I,O,W),o.dynCall_vjfii=(v,x,I,O,W,Z)=>(o.dynCall_vjfii=n2.qa)(v,x,I,O,W,Z),o.dynCall_vjiii=(v,x,I,O,W,Z)=>(o.dynCall_vjiii=n2.ra)(v,x,I,O,W,Z),o.dynCall_vj=(v,x,I)=>(o.dynCall_vj=n2.sa)(v,x,I),o.dynCall_vjiiiii=(v,x,I,O,W,Z,v1,m1)=>(o.dynCall_vjiiiii=n2.ta)(v,x,I,O,W,Z,v1,m1),o.dynCall_vjiffii=(v,x,I,O,W,Z,v1,m1)=>(o.dynCall_vjiffii=n2.ua)(v,x,I,O,W,Z,v1,m1),o.dynCall_vjiiii=(v,x,I,O,W,Z,v1)=>(o.dynCall_vjiiii=n2.va)(v,x,I,O,W,Z,v1),o.dynCall_viijii=(v,x,I,O,W,Z,v1)=>(o.dynCall_viijii=n2.wa)(v,x,I,O,W,Z,v1),o.dynCall_iiiiij=(v,x,I,O,W,Z,v1)=>(o.dynCall_iiiiij=n2.xa)(v,x,I,O,W,Z,v1),o.dynCall_iiiiijj=(v,x,I,O,W,Z,v1,m1,V1)=>(o.dynCall_iiiiijj=n2.ya)(v,x,I,O,W,Z,v1,m1,V1),o.dynCall_iiiiiijj=(v,x,I,O,W,Z,v1,m1,V1,Z1)=>(o.dynCall_iiiiiijj=n2.za)(v,x,I,O,W,Z,v1,m1,V1,Z1);function h5(v,x){var I=le();try{return $1.get(v)(x)}catch(O){if(ae(I),O!==O+0)throw O;oe(1,0)}}function d5(v,x,I,O,W,Z){var v1=le();try{return $1.get(v)(x,I,O,W,Z)}catch(m1){if(ae(v1),m1!==m1+0)throw m1;oe(1,0)}}function p5(v,x){var I=le();try{$1.get(v)(x)}catch(O){if(ae(I),O!==O+0)throw O;oe(1,0)}}function m5(v,x,I,O){var W=le();try{$1.get(v)(x,I,O)}catch(Z){if(ae(W),Z!==Z+0)throw Z;oe(1,0)}}function _5(v,x,I){var O=le();try{return $1.get(v)(x,I)}catch(W){if(ae(O),W!==W+0)throw W;oe(1,0)}}function g5(v,x,I){var O=le();try{$1.get(v)(x,I)}catch(W){if(ae(O),W!==W+0)throw W;oe(1,0)}}function v5(v){var x=le();try{$1.get(v)()}catch(I){if(ae(x),I!==I+0)throw I;oe(1,0)}}function y5(v,x,I,O){var W=le();try{return $1.get(v)(x,I,O)}catch(Z){if(ae(W),Z!==Z+0)throw Z;oe(1,0)}}function x5(v,x,I,O,W){var Z=le();try{$1.get(v)(x,I,O,W)}catch(v1){if(ae(Z),v1!==v1+0)throw v1;oe(1,0)}}var Wn;r1=function v(){Wn||Da(),Wn||(r1=v)};function Da(){function v(){if(!Wn&&(Wn=!0,o.calledRun=!0,!p)){var x;if(c1(X),a(o),(x=o.onRuntimeInitialized)===null||x===void 0||x.call(o),o.postRun)for(typeof o.postRun=="function"&&(o.postRun=[o.postRun]);o.postRun.length;){var I=o.postRun.shift();K.unshift(I)}c1(K)}}if(!(0<z)){if(o.preRun)for(typeof o.preRun=="function"&&(o.preRun=[o.preRun]);o.preRun.length;)a1();c1(B),0<z||(o.setStatus?(o.setStatus("Running..."),setTimeout(()=>{setTimeout(()=>o.setStatus(""),1),v()},1)):v())}}if(o.preInit)for(typeof o.preInit=="function"&&(o.preInit=[o.preInit]);0<o.preInit.length;)o.preInit.pop()();return Da(),t=u,t}})(),Px=Rx,ir=class{constructor(){throw new Error("RendererLoader is a static class and cannot be instantiated.")}static async _tryLoad(n){return await Px({locateFile:()=>n})}static async _loadWithBackup(){return this._ModulePromise||(this._ModulePromise=this._tryLoad(this._wasmURL).catch(async n=>{let e=`https://unpkg.com/${l5}@${a5}/dist/dotlottie-player.wasm`;console.warn(`Primary WASM load failed from ${this._wasmURL}. Error: ${n.message}`),console.warn(`Attempting to load WASM from backup URL: ${e}`);try{return await this._tryLoad(e)}catch(t){throw console.error(`Primary WASM URL failed: ${n.message}`),console.error(`Backup WASM URL failed: ${t.message}`),new Error("WASM loading failed from all sources.")}})),this._ModulePromise}static async load(){return this._loadWithBackup()}static setWasmUrl(n){n!==this._wasmURL&&(this._wasmURL=n,this._ModulePromise=null)}};Q1(ir,"_ModulePromise",null),Q1(ir,"_wasmURL",`https://cdn.jsdelivr.net/npm/${l5}@${a5}/dist/dotlottie-player.wasm`);var c5=class{constructor(){Q1(this,"_eventListeners",new Map)}addEventListener(n,e){let t=this._eventListeners.get(n);t||(t=new Set,this._eventListeners.set(n,t)),t.add(e)}removeEventListener(n,e){let t=this._eventListeners.get(n);t&&(e?(t.delete(e),t.size===0&&this._eventListeners.delete(n)):this._eventListeners.delete(n))}dispatch(n){this._eventListeners.get(n.type)?.forEach(e=>e(n))}removeAllEventListeners(){this._eventListeners.clear()}},K3=class{static _initializeObserver(){if(this._observer)return;let n=e=>{e.forEach(t=>{let i=this._observedCanvases.get(t.target);i&&(t.isIntersecting?i.unfreeze():i.freeze())})};this._observer=new IntersectionObserver(n,{threshold:0})}static observe(n,e){this._initializeObserver(),!this._observedCanvases.has(n)&&(this._observedCanvases.set(n,e),this._observer?.observe(n))}static unobserve(n){this._observer?.unobserve(n),this._observedCanvases.delete(n),this._observedCanvases.size===0&&(this._observer?.disconnect(),this._observer=null)}};Q1(K3,"_observer",null),Q1(K3,"_observedCanvases",new Map);var Z3=class{static _initializeObserver(){if(this._observer)return;let n=e=>{e.forEach(t=>{let i=this._observedCanvases.get(t.target);if(!i)return;let[r,s]=i;clearTimeout(s);let o=setTimeout(()=>{r.resize()},100);this._observedCanvases.set(t.target,[r,o])})};this._observer=new ResizeObserver(n)}static observe(n,e){this._initializeObserver(),!this._observedCanvases.has(n)&&(this._observedCanvases.set(n,[e,0]),this._observer?.observe(n))}static unobserve(n){let e=this._observedCanvases.get(n);if(e){let t=e[1];t&&clearTimeout(t)}this._observer?.unobserve(n),this._observedCanvases.delete(n),!this._observedCanvases.size&&this._observer&&(this._observer.disconnect(),this._observer=null)}};Q1(Z3,"_observer",null),Q1(Z3,"_observedCanvases",new Map);function Lx(n){return/^#([\da-f]{6}|[\da-f]{8})$/iu.test(n)}function Ix(n){if(!Lx(n))return 0;let e=n.replace("#","");return e=e.length===6?`${e}ff`:e,parseInt(e,16)}function el(n){if(n.byteLength<4)return!1;let e=new Uint8Array(n.slice(0,Es.byteLength));for(let t=0;t<Es.length;t+=1)if(Es[t]!==e[t])return!1;return!0}function tl(n){return wx.every(e=>Object.prototype.hasOwnProperty.call(n,e))}function nl(n){if(typeof n=="string")try{return tl(JSON.parse(n))}catch{return!1}else return tl(n)}function Nt(){return 1+((Y2?window.devicePixelRatio:1)-1)*Ax}function I0(n){let e=n.getBoundingClientRect(),t=window.innerHeight||document.documentElement.clientHeight,i=window.innerWidth||document.documentElement.clientWidth;return!(e.bottom<0||e.top>t||e.right<0||e.left>i)}function V3(n){let e=n.target;if(e instanceof HTMLCanvasElement){let t=e.getBoundingClientRect();if(t.width===0||t.height===0||e.width===0||e.height===0)return null;let i=e.width/t.width,r=e.height/t.height,s=(n.clientX-t.left)*i,o=(n.clientY-t.top)*r;return!Number.isFinite(s)||!Number.isFinite(o)||Number.isNaN(s)||Number.isNaN(o)?null:{x:s,y:o}}return null}function u5(n){let e=n.replace("OpenUrl: ",""),t=e.indexOf(" | Target: "),i,r;t===-1?(i=e,r="_blank"):(i=e.substring(0,t),r=e.substring(t+11)),window.open(i,r)}var bs=(n,e)=>n==="reverse"?e.Mode.Reverse:n==="bounce"?e.Mode.Bounce:n==="reverse-bounce"?e.Mode.ReverseBounce:e.Mode.Forward,Dx=(n,e)=>n==="contain"?e.Fit.Contain:n==="cover"?e.Fit.Cover:n==="fill"?e.Fit.Fill:n==="fit-height"?e.Fit.FitHeight:n==="fit-width"?e.Fit.FitWidth:e.Fit.None,Ux=(n,e)=>{let t=new e.VectorFloat;return t.push_back(n[0]),t.push_back(n[1]),t},Ts=(n,e)=>{let t=new e.VectorFloat;return n.length!==2||(t.push_back(n[0]),t.push_back(n[1])),t},ws=(n,e)=>n?{align:Ux(n.align??[.5,.5],e),fit:Dx(n.fit??"contain",e)}:e.createDefaultLayout(),f5=class l2{constructor(e){Q1(this,"_canvas"),Q1(this,"_context",null),Q1(this,"_eventManager"),Q1(this,"_animationFrameId",null),Q1(this,"_frameManager"),Q1(this,"_dotLottieCore",null),Q1(this,"_stateMachineId",""),Q1(this,"_stateMachineConfig",null),Q1(this,"_isStateMachineRunning",!1),Q1(this,"_stateMachineObserverHandle",null),Q1(this,"_stateMachineInternalMessageObserver",null),Q1(this,"_dotLottieObserverHandle",null),Q1(this,"_renderConfig",{}),Q1(this,"_isFrozen",!1),Q1(this,"_backgroundColor",null),Q1(this,"_boundOnClick",null),Q1(this,"_boundOnPointerUp",null),Q1(this,"_boundOnPointerDown",null),Q1(this,"_boundOnPointerMove",null),Q1(this,"_boundOnPointerEnter",null),Q1(this,"_boundOnPointerLeave",null),this._canvas=e.canvas,this._eventManager=new c5,this._frameManager=new Tx,this._renderConfig={...e.renderConfig,devicePixelRatio:e.renderConfig?.devicePixelRatio||Nt(),freezeOnOffscreen:e.renderConfig?.freezeOnOffscreen??!0},ir.load().then(t=>{l2._wasmModule=t;let i=new t.CallbackObserver;i.setOnLoad(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"load"})},0)}),i.setOnLoadError(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"loadError",error:new Error("failed to load")})},0)}),i.setOnPlay(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"play"})},0)}),i.setOnPause(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"pause"})},0)}),i.setOnStop(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"stop"})},0)}),i.setOnLoop(r=>{setTimeout(()=>{this._eventManager.dispatch({type:"loop",loopCount:r})},0)}),i.setOnComplete(()=>{setTimeout(()=>{this._eventManager.dispatch({type:"complete"})},0)}),i.setOnFrame(r=>{setTimeout(()=>{this._eventManager.dispatch({type:"frame",currentFrame:r})},0)}),i.setOnRender(r=>{setTimeout(()=>{this._eventManager.dispatch({type:"render",currentFrame:r})},0)}),this._dotLottieCore=new t.DotLottiePlayer({animationId:e.animationId??"",themeId:e.themeId??"",stateMachineId:"",autoplay:e.autoplay??!1,backgroundColor:0,loopAnimation:e.loop??!1,loopCount:e.loopCount??0,mode:bs(e.mode??"forward",t),segment:Ts(e.segment??[],t),speed:e.speed??1,useFrameInterpolation:e.useFrameInterpolation??!0,marker:e.marker??"",layout:ws(e.layout,t)}),this._stateMachineId=e.stateMachineId??"",this._stateMachineConfig=e.stateMachineConfig??null,this._dotLottieObserverHandle=this._dotLottieCore.subscribe(i),this._eventManager.dispatch({type:"ready"}),e.data?this._loadFromData(e.data):e.src&&this._loadFromSrc(e.src),e.backgroundColor&&this.setBackgroundColor(e.backgroundColor)}).catch(t=>{this._eventManager.dispatch({type:"loadError",error:new Error(`Failed to load wasm module: ${t}`)})})}_dispatchError(e){console.error(e),this._eventManager.dispatch({type:"loadError",error:new Error(e)})}async _fetchData(e){let t=await fetch(e);if(!t.ok)throw new Error(`Failed to fetch animation data from URL: ${e}. ${t.status}: ${t.statusText}`);let i=await t.arrayBuffer();return el(i)?i:new TextDecoder().decode(i)}_loadFromData(e){if(this._dotLottieCore===null)return;let t=this._canvas.width,i=this._canvas.height,r=!1;if(typeof e=="string"){if(!nl(e)){this._dispatchError("Invalid Lottie JSON string: The provided string does not conform to the Lottie JSON format.");return}r=this._dotLottieCore.loadAnimationData(e,t,i)}else if(e instanceof ArrayBuffer){if(!el(e)){this._dispatchError("Invalid dotLottie ArrayBuffer: The provided ArrayBuffer does not conform to the dotLottie format.");return}r=this._dotLottieCore.loadDotLottieData(e,t,i)}else if(typeof e=="object"){if(!nl(e)){this._dispatchError("Invalid Lottie JSON object: The provided object does not conform to the Lottie JSON format.");return}r=this._dotLottieCore.loadAnimationData(JSON.stringify(e),t,i)}else{this._dispatchError(`Unsupported data type for animation data. Expected: 
          - string (Lottie JSON),
          - ArrayBuffer (dotLottie),
          - object (Lottie JSON). 
          Received: ${typeof e}`);return}r&&(this._renderConfig.quality!==void 0&&this._dotLottieCore.setQuality(this._renderConfig.quality),Y2&&this.resize(),setTimeout(()=>{this._eventManager.dispatch({type:"frame",currentFrame:this.currentFrame})},0),this._dotLottieCore.render(),this._draw(),this._stateMachineId?this.stateMachineLoad(this._stateMachineId)&&this.stateMachineStart()&&this._startAnimationLoop():this._dotLottieCore.isPlaying()&&this._startAnimationLoop(),Y2&&this._canvas instanceof HTMLCanvasElement&&(this._renderConfig.freezeOnOffscreen&&(K3.observe(this._canvas,this),I0(this._canvas)||this.freeze()),this._renderConfig.autoResize&&Z3.observe(this._canvas,this)))}_loadFromSrc(e){this._fetchData(e).then(t=>this._loadFromData(t)).catch(t=>this._dispatchError(`Failed to load animation data from URL: ${e}. ${t}`))}get buffer(){return this._dotLottieCore?this._dotLottieCore.buffer():null}get activeAnimationId(){return this._dotLottieCore?.activeAnimationId()}get activeThemeId(){return this._dotLottieCore?.activeThemeId()}get layout(){let e=this._dotLottieCore?.config().layout;if(e)return{align:[e.align.get(0),e.align.get(1)],fit:(()=>{switch(e.fit){case l2._wasmModule?.Fit.Contain:return"contain";case l2._wasmModule?.Fit.Cover:return"cover";case l2._wasmModule?.Fit.Fill:return"fill";case l2._wasmModule?.Fit.FitHeight:return"fit-height";case l2._wasmModule?.Fit.FitWidth:return"fit-width";case l2._wasmModule?.Fit.None:return"none";default:return"contain"}})()}}get marker(){return this._dotLottieCore?.config().marker}get manifest(){try{let e=this._dotLottieCore?.manifestString();if(this._dotLottieCore===null||!e)return null;let t=JSON.parse(e);return Object.keys(t).length===0?null:t}catch{return null}}get renderConfig(){return this._renderConfig}get segment(){let e=this._dotLottieCore?.config().segment;if(e&&e.size()===2)return[e.get(0),e.get(1)]}get loop(){return this._dotLottieCore?.config().loopAnimation??!1}get mode(){let e=this._dotLottieCore?.config().mode;return e===l2._wasmModule?.Mode.Reverse?"reverse":e===l2._wasmModule?.Mode.Bounce?"bounce":e===l2._wasmModule?.Mode.ReverseBounce?"reverse-bounce":"forward"}get isFrozen(){return this._isFrozen}get isStateMachineRunning(){return this._isStateMachineRunning}get backgroundColor(){return this._backgroundColor??""}get autoplay(){return this._dotLottieCore?.config().autoplay??!1}get useFrameInterpolation(){return this._dotLottieCore?.config().useFrameInterpolation??!1}get speed(){return this._dotLottieCore?.config().speed??0}get isReady(){return this._dotLottieCore!==null}get isLoaded(){return this._dotLottieCore?.isLoaded()??!1}get isPlaying(){return this._dotLottieCore?.isPlaying()??!1}get isPaused(){return this._dotLottieCore?.isPaused()??!1}get isStopped(){return this._dotLottieCore?.isStopped()??!1}get currentFrame(){return this._dotLottieCore?Math.round(this._dotLottieCore.currentFrame()*100)/100:0}get loopCount(){return this._dotLottieCore?.loopCount()??0}get totalFrames(){return this._dotLottieCore?.totalFrames()??0}get duration(){return this._dotLottieCore?.duration()??0}get segmentDuration(){return this._dotLottieCore?.segmentDuration()??0}get canvas(){return this._canvas}load(e){this._dotLottieCore===null||l2._wasmModule===null||(this._stopAnimationLoop(),Y2&&this._canvas instanceof HTMLCanvasElement&&(K3.unobserve(this._canvas),Z3.unobserve(this._canvas),this._cleanupStateMachineListeners()),this._isFrozen=!1,this._dotLottieCore.setConfig({animationId:e.animationId??"",themeId:e.themeId??"",stateMachineId:"",autoplay:e.autoplay??!1,backgroundColor:0,loopAnimation:e.loop??!1,loopCount:e.loopCount??0,mode:bs(e.mode??"forward",l2._wasmModule),segment:Ts(e.segment??[],l2._wasmModule),speed:e.speed??1,useFrameInterpolation:e.useFrameInterpolation??!0,marker:e.marker??"",layout:ws(e.layout,l2._wasmModule)}),e.data?this._loadFromData(e.data):e.src&&this._loadFromSrc(e.src),this.setBackgroundColor(e.backgroundColor??""))}_draw(){if(this._dotLottieCore!==null&&(!this._context&&"getContext"in this._canvas&&typeof this._canvas.getContext=="function"&&(this._context=this._canvas.getContext("2d")),this._context)){let e=this._dotLottieCore.buffer(),t=this._canvas.width*this._canvas.height*Cx;if(e.byteLength!==t){console.warn(`Buffer size mismatch: got ${e.byteLength}, expected ${t}`);return}let i=null,r=new Uint8ClampedArray(e,0,e.byteLength);typeof ImageData>"u"?(i=this._context.createImageData(this._canvas.width,this._canvas.height),i.data.set(r)):i=new ImageData(r,this._canvas.width,this._canvas.height),this._context.putImageData(i,0,0)}}_stopAnimationLoop(){this._animationFrameId!==null&&(this._frameManager.cancelAnimationFrame(this._animationFrameId),this._animationFrameId=null)}_startAnimationLoop(){this._animationFrameId===null&&this._dotLottieCore&&!this._isFrozen&&(this._dotLottieCore.isPlaying()||this._isStateMachineRunning)&&(this._animationFrameId=this._frameManager.requestAnimationFrame(this._animationLoop.bind(this)))}_animationLoop(){if(this._dotLottieCore===null){this._stopAnimationLoop();return}if(!this._dotLottieCore.isPlaying()&&!this._isStateMachineRunning){this._stopAnimationLoop();return}try{this._dotLottieCore.tick()&&this._draw(),this._animationFrameId=this._frameManager.requestAnimationFrame(this._animationLoop.bind(this))}catch(e){console.error("Error in animation frame:",e),this._eventManager.dispatch({type:"renderError",error:e}),e instanceof WebAssembly.RuntimeError&&this.destroy()}}play(){this._dotLottieCore===null||!this.isLoaded||(this._stopAnimationLoop(),(this._dotLottieCore.play()||this._dotLottieCore.isPlaying())&&(this._isFrozen=!1,this._startAnimationLoop()),Y2&&this._canvas instanceof HTMLCanvasElement&&this._renderConfig.freezeOnOffscreen&&!I0(this._canvas)&&this.freeze())}pause(){this._dotLottieCore!==null&&(this._dotLottieCore.pause(),this._stopAnimationLoop())}stop(){if(this._dotLottieCore===null)return;let e=this._dotLottieCore.stop();this._stopAnimationLoop(),e&&(this._eventManager.dispatch({type:"frame",currentFrame:this.currentFrame}),this._dotLottieCore.render(),this._draw())}setFrame(e){this._dotLottieCore!==null&&this._dotLottieCore.seek(e)&&this._dotLottieCore.render()&&this._draw()}setSpeed(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),speed:e})}setBackgroundColor(e){this._dotLottieCore!==null&&(Y2&&this._canvas instanceof HTMLCanvasElement?this._canvas.style.backgroundColor=e:this._dotLottieCore.setConfig({...this._dotLottieCore.config(),backgroundColor:Ix(e)}),this._backgroundColor=e)}setLoop(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),loopAnimation:e})}setLoopCount(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),loopCount:e})}setUseFrameInterpolation(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),useFrameInterpolation:e})}addEventListener(e,t){this._eventManager.addEventListener(e,t)}removeEventListener(e,t){this._eventManager.removeEventListener(e,t)}destroy(){this._stopAnimationLoop(),this._isStateMachineRunning=!1,Y2&&this._canvas instanceof HTMLCanvasElement&&(K3.unobserve(this._canvas),Z3.unobserve(this._canvas)),this._stateMachineObserverHandle&&(this._dotLottieCore?.stateMachineUnsubscribe(this._stateMachineObserverHandle),this._stateMachineObserverHandle.delete(),this._stateMachineObserverHandle=null),this._stateMachineInternalMessageObserver&&(this._dotLottieCore?.stateMachineInternalUnsubscribe(this._stateMachineInternalMessageObserver),this._stateMachineInternalMessageObserver.delete(),this._stateMachineInternalMessageObserver=null),this._dotLottieObserverHandle&&(this._dotLottieCore?.unsubscribe(this._dotLottieObserverHandle),this._dotLottieObserverHandle.delete(),this._dotLottieObserverHandle=null),this._dotLottieCore?.delete(),this._dotLottieCore=null,this._context=null,this._eventManager.dispatch({type:"destroy"}),this._eventManager.removeAllEventListeners(),this._cleanupStateMachineListeners()}freeze(){this._animationFrameId!==null&&(this._stopAnimationLoop(),this._isFrozen=!0,this._eventManager.dispatch({type:"freeze"}))}unfreeze(){this._animationFrameId===null&&(this._isFrozen=!1,this._eventManager.dispatch({type:"unfreeze"}),this._startAnimationLoop())}resize(){if(!(!this._dotLottieCore||!this.isLoaded)){if(Y2&&this._canvas instanceof HTMLCanvasElement){let e=this._renderConfig.devicePixelRatio||window.devicePixelRatio||1,{height:t,width:i}=this._canvas.getBoundingClientRect();t!==0&&i!==0&&(this._canvas.width=i*e,this._canvas.height=t*e)}this._dotLottieCore.resize(this._canvas.width,this._canvas.height)&&this._draw()}}setTransform(e){if(!this._dotLottieCore||!l2._wasmModule)return!1;let t=new l2._wasmModule.VectorFloat;for(let r of e)t.push_back(r);let i=this._dotLottieCore.setTransform(t);return i&&this._dotLottieCore.render()&&this._draw(),i}getTransform(){if(!this._dotLottieCore)return;let e=[0,0,0,0,0,0,0,0,0],t=this._dotLottieCore.getTransform();for(let i=0;i<t.size();i+=1)e[i]=t.get(i);return e}setSegment(e,t){this._dotLottieCore===null||l2._wasmModule===null||this._dotLottieCore.setConfig({...this._dotLottieCore.config(),segment:Ts([e,t],l2._wasmModule)})}setMode(e){this._dotLottieCore===null||l2._wasmModule===null||this._dotLottieCore.setConfig({...this._dotLottieCore.config(),mode:bs(e,l2._wasmModule)})}setRenderConfig(e){let{devicePixelRatio:t,freezeOnOffscreen:i,quality:r,...s}=e;this._renderConfig={...this._renderConfig,...s,devicePixelRatio:t||Nt(),freezeOnOffscreen:i??!0,...r!==void 0&&{quality:r}},r!==void 0&&this._dotLottieCore&&this._dotLottieCore.setQuality(r),Y2&&this._canvas instanceof HTMLCanvasElement&&(this._renderConfig.autoResize?Z3.observe(this._canvas,this):Z3.unobserve(this._canvas),this._renderConfig.freezeOnOffscreen?(K3.observe(this._canvas,this),I0(this._canvas)||this.freeze()):(K3.unobserve(this._canvas),this._isFrozen&&this.unfreeze()))}loadAnimation(e){this._dotLottieCore===null||this._dotLottieCore.activeAnimationId()===e||this._dotLottieCore.loadAnimation(e,this._canvas.width,this._canvas.height)&&(this._renderConfig.quality!==void 0&&this._dotLottieCore.setQuality(this._renderConfig.quality),this.resize())}setMarker(e){this._dotLottieCore!==null&&this._dotLottieCore.setConfig({...this._dotLottieCore.config(),marker:e})}markers(){let e=this._dotLottieCore?.markers();if(e){let t=[];for(let i=0;i<e.size();i+=1){let r=e.get(i);t.push({name:r.name,time:r.time,duration:r.duration})}return t}return[]}setTheme(e){if(this._dotLottieCore===null)return!1;let t=this._dotLottieCore.setTheme(e);return t&&(this._dotLottieCore.render(),this._draw()),t}resetTheme(){if(this._dotLottieCore===null)return!1;let e=this._dotLottieCore.resetTheme();return e&&(this._dotLottieCore.render(),this._draw()),e}setThemeData(e){if(this._dotLottieCore===null)return!1;let t=this._dotLottieCore.setThemeData(e);return t&&(this._dotLottieCore.render(),this._draw()),t}setSlots(e){this._dotLottieCore!==null&&this._dotLottieCore.setSlots(e)&&(this._dotLottieCore.render(),this._draw())}setLayout(e){this._dotLottieCore===null||l2._wasmModule===null||this._dotLottieCore.setConfig({...this._dotLottieCore.config(),layout:ws(e,l2._wasmModule)})}setViewport(e,t,i,r){return this._dotLottieCore===null?!1:this._dotLottieCore.setViewport(e,t,i,r)}static setWasmUrl(e){ir.setWasmUrl(e)}tween(e,t){if(!l2._wasmModule)return!1;let i=[0,0,1,1],r=new l2._wasmModule.VectorFloat;for(let s of i)r.push_back(s);return this._dotLottieCore?.tween(e,t,r)??!1}tweenToMarker(e,t){if(!l2._wasmModule)return!1;let i=[0,0,1,1],r=new l2._wasmModule.VectorFloat;for(let s of i)r.push_back(s);return this._dotLottieCore?.tweenToMarker(e,t,r)??!1}animationSize(){let e=this._dotLottieCore?.animationSize().get(0)??0,t=this._dotLottieCore?.animationSize().get(1)??0;return{width:e,height:t}}getLayerBoundingBox(e){let t=this._dotLottieCore?.getLayerBounds(e);if(!t||t.size()!==8)return;let i=[];for(let r=0;r<8;r+=1)i.push(t.get(r));return i}static transformThemeToLottieSlots(e,t){return l2._wasmModule?.transformThemeToLottieSlots(e,t)??""}_setupStateMachineObservers(){if(!this._dotLottieCore||!l2._wasmModule)return;let e=new l2._wasmModule.CallbackStateMachineObserver;e.setOnStart(()=>{setTimeout(()=>{this._isStateMachineRunning=!0,this._eventManager.dispatch({type:"stateMachineStart"}),this._startAnimationLoop()},0)}),e.setOnStop(()=>{setTimeout(()=>{this._isStateMachineRunning=!1,this._eventManager.dispatch({type:"stateMachineStop"}),this._dotLottieCore?.isPlaying()||this._stopAnimationLoop()},0)}),e.setOnCustomEvent(i=>{this._eventManager.dispatch({type:"stateMachineCustomEvent",eventName:i})}),e.setOnBooleanInputValueChange((i,r,s)=>{this._eventManager.dispatch({type:"stateMachineBooleanInputValueChange",inputName:i,newValue:s,oldValue:r})}),e.setOnNumericInputValueChange((i,r,s)=>{this._eventManager.dispatch({type:"stateMachineNumericInputValueChange",inputName:i,newValue:s,oldValue:r})}),e.setOnStringInputValueChange((i,r,s)=>{this._eventManager.dispatch({type:"stateMachineStringInputValueChange",inputName:i,newValue:s,oldValue:r})}),e.setOnInputFired(i=>{this._eventManager.dispatch({type:"stateMachineInputFired",inputName:i})}),e.setOnTransition((i,r)=>{this._eventManager.dispatch({type:"stateMachineTransition",fromState:i,toState:r})}),e.setOnStateEntered(i=>{this._eventManager.dispatch({type:"stateMachineStateEntered",state:i})}),e.setOnStateExit(i=>{this._eventManager.dispatch({type:"stateMachineStateExit",state:i})}),e.setOnError(i=>{this._eventManager.dispatch({type:"stateMachineError",error:i})});let t=new l2._wasmModule.CallbackStateMachineInternalObserver;t.setOnMessage(i=>{Y2?i.startsWith("OpenUrl: ")&&u5(i):this._eventManager.dispatch({type:"stateMachineInternalMessage",message:i})}),this._stateMachineObserverHandle=this._dotLottieCore.stateMachineSubscribe(e),this._stateMachineInternalMessageObserver=this._dotLottieCore.stateMachineInternalSubscribe(t)}_cleanupStateMachineObservers(){this._stateMachineObserverHandle&&(this._dotLottieCore?.stateMachineUnsubscribe(this._stateMachineObserverHandle),this._stateMachineObserverHandle.delete(),this._stateMachineObserverHandle=null),this._stateMachineInternalMessageObserver&&(this._dotLottieCore?.stateMachineInternalUnsubscribe(this._stateMachineInternalMessageObserver),this._stateMachineInternalMessageObserver.delete(),this._stateMachineInternalMessageObserver=null)}stateMachineLoad(e){if(!this._dotLottieCore||!l2._wasmModule)return!1;this._cleanupStateMachineObservers();let t=this._dotLottieCore.stateMachineLoad(e);return t&&this._setupStateMachineObservers(),t}stateMachineLoadData(e){if(!this._dotLottieCore||!l2._wasmModule)return!1;this._cleanupStateMachineObservers();let t=this._dotLottieCore.stateMachineLoadData(e);return t&&this._setupStateMachineObservers(),t}stateMachineSetConfig(e){this._stateMachineConfig=e}stateMachineStart(){if(l2._wasmModule===null||this._dotLottieCore===null)return!1;let e=l2._wasmModule.createDefaultOpenUrlPolicy();if(this._stateMachineConfig){let i=this._stateMachineConfig.openUrlPolicy;if(i&&typeof i.requireUserInteraction=="boolean"&&(e.requireUserInteraction=i.requireUserInteraction),i?.whitelist){e.whitelist=new l2._wasmModule.VectorString;for(let r of i.whitelist)e.whitelist.push_back(r)}}let t=this._dotLottieCore.stateMachineStart(e);return t&&(this._isStateMachineRunning=!0,this._setupStateMachineListeners(),this._startAnimationLoop()),t}stateMachineStop(){if(!this._dotLottieCore)return!1;let e=this._dotLottieCore.stateMachineStop();return e&&(this._cleanupStateMachineObservers(),this._isStateMachineRunning=!1,this._cleanupStateMachineListeners(),this._dotLottieCore.isPlaying()||this._stopAnimationLoop()),e}stateMachineGetStatus(){return this._dotLottieCore?.stateMachineStatus()??""}stateMachineGetCurrentState(){return this._dotLottieCore?.stateMachineCurrentState()??""}stateMachineGetActiveId(){return this._dotLottieCore?.activeStateMachineId()??""}stateMachineOverrideState(e,t=!1){return this._dotLottieCore?.stateMachineOverrideCurrentState(e,t)??!1}stateMachineGet(e){return this._dotLottieCore?.getStateMachine(e)??""}stateMachineGetListeners(){if(!this._dotLottieCore)return[];let e=this._dotLottieCore.stateMachineFrameworkSetup(),t=[];for(let i=0;i<e.size();i+=1)t.push(e.get(i));return t}stateMachineSetBooleanInput(e,t){return this._dotLottieCore?.stateMachineSetBooleanInput(e,t)??!1}stateMachineSetNumericInput(e,t){return this._dotLottieCore?.stateMachineSetNumericInput(e,t)??!1}stateMachineSetStringInput(e,t){return this._dotLottieCore?.stateMachineSetStringInput(e,t)??!1}stateMachineGetBooleanInput(e){return this._dotLottieCore?.stateMachineGetBooleanInput(e)}stateMachineGetNumericInput(e){return this._dotLottieCore?.stateMachineGetNumericInput(e)}stateMachineGetStringInput(e){return this._dotLottieCore?.stateMachineGetStringInput(e)}stateMachineGetInputs(){if(!this._dotLottieCore)return[];let e=this._dotLottieCore.stateMachineGetInputs(),t=[];for(let i=0;i<e.size();i+=1)t.push(e.get(i));return t}stateMachineFireEvent(e){this._dotLottieCore?.stateMachineFireEvent(e)}stateMachinePostClickEvent(e,t){this._dotLottieCore?.stateMachinePostClickEvent(e,t)}stateMachinePostPointerUpEvent(e,t){this._dotLottieCore?.stateMachinePostPointerUpEvent(e,t)}stateMachinePostPointerDownEvent(e,t){this._dotLottieCore?.stateMachinePostPointerDownEvent(e,t)}stateMachinePostPointerMoveEvent(e,t){this._dotLottieCore?.stateMachinePostPointerMoveEvent(e,t)}stateMachinePostPointerEnterEvent(e,t){this._dotLottieCore?.stateMachinePostPointerEnterEvent(e,t)}stateMachinePostPointerExitEvent(e,t){this._dotLottieCore?.stateMachinePostPointerExitEvent(e,t)}_onClick(e){let t=V3(e);t&&this.stateMachinePostClickEvent(t.x,t.y)}_onPointerUp(e){let t=V3(e);t&&this.stateMachinePostPointerUpEvent(t.x,t.y)}_onPointerDown(e){let t=V3(e);t&&this.stateMachinePostPointerDownEvent(t.x,t.y)}_onPointerMove(e){let t=V3(e);t&&this.stateMachinePostPointerMoveEvent(t.x,t.y)}_onPointerEnter(e){let t=V3(e);t&&this.stateMachinePostPointerEnterEvent(t.x,t.y)}_onPointerLeave(e){let t=V3(e);t&&this.stateMachinePostPointerExitEvent(t.x,t.y)}_setupStateMachineListeners(){if(Y2&&this._canvas instanceof HTMLCanvasElement&&this._dotLottieCore!==null&&this.isLoaded){let e=this.stateMachineGetListeners();this._cleanupStateMachineListeners(),e.includes("Click")&&(this._boundOnClick=this._onClick.bind(this),this._canvas.addEventListener("click",this._boundOnClick)),e.includes("PointerUp")&&(this._boundOnPointerUp=this._onPointerUp.bind(this),this._canvas.addEventListener("pointerup",this._boundOnPointerUp)),e.includes("PointerDown")&&(this._boundOnPointerDown=this._onPointerDown.bind(this),this._canvas.addEventListener("pointerdown",this._boundOnPointerDown)),e.includes("PointerMove")&&(this._boundOnPointerMove=this._onPointerMove.bind(this),this._canvas.addEventListener("pointermove",this._boundOnPointerMove)),e.includes("PointerEnter")&&(this._boundOnPointerEnter=this._onPointerEnter.bind(this),this._canvas.addEventListener("pointerenter",this._boundOnPointerEnter)),e.includes("PointerExit")&&(this._boundOnPointerLeave=this._onPointerLeave.bind(this),this._canvas.addEventListener("pointerleave",this._boundOnPointerLeave))}}_cleanupStateMachineListeners(){Y2&&this._canvas instanceof HTMLCanvasElement&&(this._boundOnClick&&(this._canvas.removeEventListener("click",this._boundOnClick),this._boundOnClick=null),this._boundOnPointerUp&&(this._canvas.removeEventListener("pointerup",this._boundOnPointerUp),this._boundOnPointerUp=null),this._boundOnPointerDown&&(this._canvas.removeEventListener("pointerdown",this._boundOnPointerDown),this._boundOnPointerDown=null),this._boundOnPointerMove&&(this._canvas.removeEventListener("pointermove",this._boundOnPointerMove),this._boundOnPointerMove=null),this._boundOnPointerEnter&&(this._canvas.removeEventListener("pointerenter",this._boundOnPointerEnter),this._boundOnPointerEnter=null),this._boundOnPointerLeave&&(this._canvas.removeEventListener("pointerleave",this._boundOnPointerLeave),this._boundOnPointerLeave=null))}};Q1(f5,"_wasmModule",null);var Ox=f5,Fx=class{constructor(){if(typeof Worker>"u")throw new Error("Worker is not supported in this environment.");let n=new Blob([new Uint8Array([34,117,115,101,32,115,116,114,105,99,116,34,59,10,40,40,41,32,61,62,32,123,10,32,32,118,97,114,32,95,95,100,101,102,80,114,111,112,32,61,32,79,98,106,101,99,116,46,100,101,102,105,110,101,80,114,111,112,101,114,116,121,59,10,32,32,118,97,114,32,95,95,100,101,102,78,111,114,109,97,108,80,114,111,112,32,61,32,40,111,98,106,44,32,107,101,121,44,32,118,97,108,117,101,41,32,61,62,32,107,101,121,32,105,110,32,111,98,106,32,63,32,95,95,100,101,102,80,114,111,112,40,111,98,106,44,32,107,101,121,44,32,123,32,101,110,117,109,101,114,97,98,108,101,58,32,116,114,117,101,44,32,99,111,110,102,105,103,117,114,97,98,108,101,58,32,116,114,117,101,44,32,119,114,105,116,97,98,108,101,58,32,116,114,117,101,44,32,118,97,108,117,101,32,125,41,32,58,32,111,98,106,91,107,101,121,93,32,61,32,118,97,108,117,101,59,10,32,32,118,97,114,32,95,95,112,117,98,108,105,99,70,105,101,108,100,32,61,32,40,111,98,106,44,32,107,101,121,44,32,118,97,108,117,101,41,32,61,62,32,95,95,100,101,102,78,111,114,109,97,108,80,114,111,112,40,111,98,106,44,32,116,121,112,101,111,102,32,107,101,121,32,33,61,61,32,34,115,121,109,98,111,108,34,32,63,32,107,101,121,32,43,32,34,34,32,58,32,107,101,121,44,32,118,97,108,117,101,41,59,10,10,32,32,47,47,32,115,114,99,47,97,110,105,109,97,116,105,111,110,45,102,114,97,109,101,45,109,97,110,97,103,101,114,46,116,115,10,32,32,118,97,114,32,87,101,98,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,32,123,10,32,32,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,78,111,100,101,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,108,97,115,116,72,97,110,100,108,101,73,100,34,44,32,48,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,108,97,115,116,73,109,109,101,100,105,97,116,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,62,61,32,78,117,109,98,101,114,46,77,65,88,95,83,65,70,69,95,73,78,84,69,71,69,82,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,61,32,48,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,32,43,61,32,49,59,10,32,32,32,32,32,32,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,32,61,32,115,101,116,73,109,109,101,100,105,97,116,101,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,40,68,97,116,101,46,110,111,119,40,41,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,108,97,115,116,72,97,110,100,108,101,73,100,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,95,105,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,41,32,123,10,32,32,32,32,32,32,32,32,99,108,101,97,114,73,109,109,101,100,105,97,116,101,40,116,104,105,115,46,95,108,97,115,116,73,109,109,101,100,105,97,116,101,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,65,110,105,109,97,116,105,111,110,70,114,97,109,101,77,97,110,97,103,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,114,97,116,101,103,121,34,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,32,61,32,116,121,112,101,111,102,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,32,61,61,61,32,34,102,117,110,99,116,105,111,110,34,32,63,32,110,101,119,32,87,101,98,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,40,41,32,58,32,110,101,119,32,78,111,100,101,65,110,105,109,97,116,105,111,110,70,114,97,109,101,83,116,114,97,116,101,103,121,40,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,99,97,108,108,98,97,99,107,41,59,10,32,32,32,32,125,10,32,32,32,32,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,114,97,116,101,103,121,46,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,105,100,41,59,10,32,32,32,32,125,10,32,32,125,59,10,10,32,32,47,47,32,115,114,99,47,99,111,110,115,116,97,110,116,115,46,116,115,10,32,32,118,97,114,32,73,83,95,66,82,79,87,83,69,82,32,61,32,116,121,112,101,111,102,32,119,105,110,100,111,119,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,32,38,38,32,116,121,112,101,111,102,32,119,105,110,100,111,119,46,100,111,99,117,109,101,110,116,32,33,61,61,32,34,117,110,100,101,102,105,110,101,100,34,59,10,32,32,118,97,114,32,90,73,80,95,83,73,71,78,65,84,85,82,69,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,91,56,48,44,32,55,53,44,32,51,44,32,52,93,41,59,10,32,32,118,97,114,32,76,79,84,84,73,69,95,74,83,79,78,95,77,65,78,68,65,84,79,82,89,95,70,73,69,76,68,83,32,61,32,91,34,118,34,44,32,34,105,112,34,44,32,34,111,112,34,44,32,34,108,97,121,101,114,115,34,44,32,34,102,114,34,44,32,34,119,34,44,32,34,104,34,93,59,10,32,32,118,97,114,32,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,32,61,32,34,48,46,53,53,46,48,34,59,10,32,32,118,97,114,32,80,65,67,75,65,71,69,95,78,65,77,69,32,61,32,34,64,108,111,116,116,105,101,102,105,108,101,115,47,100,111,116,108,111,116,116,105,101,45,119,101,98,34,59,10,32,32,118,97,114,32,68,69,70,65,85,76,84,95,68,80,82,95,70,65,67,84,79,82,32,61,32,48,46,55,53,59,10,32,32,118,97,114,32,66,89,84,69,83,95,80,69,82,95,80,73,88,69,76,32,61,32,52,59,10,10,32,32,47,47,32,115,114,99,47,99,111,114,101,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,106,115,10,32,32,118,97,114,32,99,114,101,97,116,101,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,77,111,100,117,108,101,32,61,32,40,40,41,32,61,62,32,123,10,32,32,32,32,118,97,114,32,95,115,99,114,105,112,116,78,97,109,101,32,61,32,116,121,112,101,111,102,32,100,111,99,117,109,101,110,116,32,33,61,32,34,117,110,100,101,102,105,110,101,100,34,32,63,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,63,46,115,114,99,32,58,32,118,111,105,100,32,48,59,10,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,109,111,100,117,108,101,65,114,103,32,61,32,123,125,41,32,123,10,32,32,32,32,32,32,118,97,114,32,109,111,100,117,108,101,82,116,110,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,95,100,101,102,105,110,101,80,114,111,112,101,114,116,121,40,101,44,32,114,44,32,116,50,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,40,114,32,61,32,95,116,111,80,114,111,112,101,114,116,121,75,101,121,40,114,41,41,32,105,110,32,101,32,63,32,79,98,106,101,99,116,46,100,101,102,105,110,101,80,114,111,112,101,114,116,121,40,101,44,32,114,44,32,123,32,118,97,108,117,101,58,32,116,50,44,32,101,110,117,109,101,114,97,98,108,101,58,32,116,114,117,101,44,32,99,111,110,102,105,103,117,114,97,98,108,101,58,32,116,114,117,101,44,32,119,114,105,116,97,98,108,101,58,32,116,114,117,101,32,125,41,32,58,32,101,91,114,93,32,61,32,116,50,44,32,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,95,116,111,80,114,111,112,101,114,116,121,75,101,121,40,116,50,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,105,32,61,32,95,116,111,80,114,105,109,105,116,105,118,101,40,116,50,44,32,34,115,116,114,105,110,103,34,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,115,121,109,98,111,108,34,32,61,61,32,116,121,112,101,111,102,32,105,32,63,32,105,32,58,32,105,32,43,32,34,34,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,95,116,111,80,114,105,109,105,116,105,118,101,40,116,50,44,32,114,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,34,111,98,106,101,99,116,34,32,33,61,32,116,121,112,101,111,102,32,116,50,32,124,124,32,33,116,50,41,32,114,101,116,117,114,110,32,116,50,59,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,116,50,91,83,121,109,98,111,108,46,116,111,80,114,105,109,105,116,105,118,101,93,59,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,33,61,61,32,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,105,32,61,32,101,46,99,97,108,108,40,116,50,44,32,114,32,124,124,32,34,100,101,102,97,117,108,116,34,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,34,111,98,106,101,99,116,34,32,33,61,32,116,121,112,101,111,102,32,105,41,32,114,101,116,117,114,110,32,105,59,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,34,64,64,116,111,80,114,105,109,105,116,105,118,101,32,109,117,115,116,32,114,101,116,117,114,110,32,97,32,112,114,105,109,105,116,105,118,101,32,118,97,108,117,101,46,34,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,40,34,115,116,114,105,110,103,34,32,61,61,61,32,114,32,63,32,83,116,114,105,110,103,32,58,32,78,117,109,98,101,114,41,40,116,50,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,104,32,61,32,109,111,100,117,108,101,65,114,103,44,32,97,97,44,32,98,97,44,32,99,97,32,61,32,110,101,119,32,80,114,111,109,105,115,101,40,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,98,97,32,61,32,98,59,10,32,32,32,32,32,32,125,41,44,32,102,97,32,61,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,123,125,44,32,104,41,44,32,104,97,32,61,32,34,46,47,116,104,105,115,46,112,114,111,103,114,97,109,34,44,32,112,32,61,32,34,34,44,32,105,97,59,10,32,32,32,32,32,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,100,111,99,117,109,101,110,116,32,38,38,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,32,38,38,32,40,112,32,61,32,100,111,99,117,109,101,110,116,46,99,117,114,114,101,110,116,83,99,114,105,112,116,46,115,114,99,41,59,10,32,32,32,32,32,32,95,115,99,114,105,112,116,78,97,109,101,32,38,38,32,40,112,32,61,32,95,115,99,114,105,112,116,78,97,109,101,41,59,10,32,32,32,32,32,32,112,46,115,116,97,114,116,115,87,105,116,104,40,34,98,108,111,98,58,34,41,32,63,32,112,32,61,32,34,34,32,58,32,112,32,61,32,112,46,115,117,98,115,116,114,40,48,44,32,112,46,114,101,112,108,97,99,101,40,47,91,63,35,93,46,42,47,44,32,34,34,41,46,108,97,115,116,73,110,100,101,120,79,102,40,34,47,34,41,32,43,32,49,41,59,10,32,32,32,32,32,32,105,97,32,61,32,97,115,121,110,99,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,97,119,97,105,116,32,102,101,116,99,104,40,97,44,32,123,32,99,114,101,100,101,110,116,105,97,108,115,58,32,34,115,97,109,101,45,111,114,105,103,105,110,34,32,125,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,97,46,111,107,41,32,114,101,116,117,114,110,32,97,46,97,114,114,97,121,66,117,102,102,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,69,114,114,111,114,40,97,46,115,116,97,116,117,115,32,43,32,34,32,58,32,34,32,43,32,97,46,117,114,108,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,118,97,114,32,116,32,61,32,104,46,112,114,105,110,116,69,114,114,32,124,124,32,99,111,110,115,111,108,101,46,101,114,114,111,114,46,98,105,110,100,40,99,111,110,115,111,108,101,41,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,104,44,32,102,97,41,59,10,32,32,32,32,32,32,102,97,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,104,46,116,104,105,115,80,114,111,103,114,97,109,32,38,38,32,40,104,97,32,61,32,104,46,116,104,105,115,80,114,111,103,114,97,109,41,59,10,32,32,32,32,32,32,118,97,114,32,106,97,32,61,32,104,46,119,97,115,109,66,105,110,97,114,121,44,32,107,97,44,32,108,97,32,61,32,102,97,108,115,101,44,32,109,97,44,32,117,44,32,120,44,32,121,44,32,122,44,32,67,44,32,68,44,32,110,97,44,32,111,97,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,112,97,40,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,107,97,46,98,117,102,102,101,114,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,56,32,61,32,117,32,61,32,110,101,119,32,73,110,116,56,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,49,54,32,61,32,121,32,61,32,110,101,119,32,73,110,116,49,54,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,85,56,32,61,32,120,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,85,49,54,32,61,32,122,32,61,32,110,101,119,32,85,105,110,116,49,54,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,51,50,32,61,32,67,32,61,32,110,101,119,32,73,110,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,85,51,50,32,61,32,68,32,61,32,110,101,119,32,85,105,110,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,70,51,50,32,61,32,110,97,32,61,32,110,101,119,32,70,108,111,97,116,51,50,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,104,46,72,69,65,80,70,54,52,32,61,32,111,97,32,61,32,110,101,119,32,70,108,111,97,116,54,52,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,113,97,32,61,32,91,93,44,32,114,97,32,61,32,91,93,44,32,115,97,32,61,32,91,93,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,116,97,40,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,104,46,112,114,101,82,117,110,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,113,97,46,117,110,115,104,105,102,116,40,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,70,32,61,32,48,44,32,71,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,117,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,95,104,36,111,110,65,98,111,114,116,59,10,32,32,32,32,32,32,32,32,40,95,104,36,111,110,65,98,111,114,116,32,61,32,104,46,111,110,65,98,111,114,116,41,32,61,61,61,32,110,117,108,108,32,124,124,32,95,104,36,111,110,65,98,111,114,116,32,61,61,61,32,118,111,105,100,32,48,32,124,124,32,95,104,36,111,110,65,98,111,114,116,46,99,97,108,108,40,104,44,32,97,41,59,10,32,32,32,32,32,32,32,32,97,32,61,32,34,65,98,111,114,116,101,100,40,34,32,43,32,97,32,43,32,34,41,34,59,10,32,32,32,32,32,32,32,32,116,40,97,41,59,10,32,32,32,32,32,32,32,32,108,97,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,97,32,61,32,110,101,119,32,87,101,98,65,115,115,101,109,98,108,121,46,82,117,110,116,105,109,101,69,114,114,111,114,40,97,32,43,32,34,46,32,66,117,105,108,100,32,119,105,116,104,32,45,115,65,83,83,69,82,84,73,79,78,83,32,102,111,114,32,109,111,114,101,32,105,110,102,111,46,34,41,59,10,32,32,32,32,32,32,32,32,98,97,40,97,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,97,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,118,97,32,61,32,40,97,41,32,61,62,32,97,46,115,116,97,114,116,115,87,105,116,104,40,34,100,97,116,97,58,97,112,112,108,105,99,97,116,105,111,110,47,111,99,116,101,116,45,115,116,114,101,97,109,59,98,97,115,101,54,52,44,34,41,44,32,119,97,59,10,32,32,32,32,32,32,97,115,121,110,99,32,102,117,110,99,116,105,111,110,32,120,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,106,97,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,97,119,97,105,116,32,105,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,123,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,97,32,61,61,32,119,97,32,38,38,32,106,97,41,32,97,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,106,97,41,59,10,32,32,32,32,32,32,32,32,101,108,115,101,32,116,104,114,111,119,32,34,98,111,116,104,32,97,115,121,110,99,32,97,110,100,32,115,121,110,99,32,102,101,116,99,104,105,110,103,32,111,102,32,116,104,101,32,119,97,115,109,32,102,97,105,108,101,100,34,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,97,115,121,110,99,32,102,117,110,99,116,105,111,110,32,121,97,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,119,97,105,116,32,120,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,119,97,105,116,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,40,99,44,32,98,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,40,96,102,97,105,108,101,100,32,116,111,32,97,115,121,110,99,104,114,111,110,111,117,115,108,121,32,112,114,101,112,97,114,101,32,119,97,115,109,58,32,36,123,100,125,96,41,44,32,117,97,40,100,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,97,115,121,110,99,32,102,117,110,99,116,105,111,110,32,122,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,119,97,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,106,97,32,38,38,32,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,83,116,114,101,97,109,105,110,103,32,38,38,32,33,118,97,40,98,41,32,38,38,32,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,102,101,116,99,104,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,102,101,116,99,104,40,98,44,32,123,32,99,114,101,100,101,110,116,105,97,108,115,58,32,34,115,97,109,101,45,111,114,105,103,105,110,34,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,119,97,105,116,32,87,101,98,65,115,115,101,109,98,108,121,46,105,110,115,116,97,110,116,105,97,116,101,83,116,114,101,97,109,105,110,103,40,99,44,32,97,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,40,96,119,97,115,109,32,115,116,114,101,97,109,105,110,103,32,99,111,109,112,105,108,101,32,102,97,105,108,101,100,58,32,36,123,100,125,96,41,44,32,116,40,34,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,65,114,114,97,121,66,117,102,102,101,114,32,105,110,115,116,97,110,116,105,97,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,121,97,40,98,44,32,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,108,97,115,115,32,65,97,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,95,100,101,102,105,110,101,80,114,111,112,101,114,116,121,40,116,104,105,115,44,32,34,110,97,109,101,34,44,32,34,69,120,105,116,83,116,97,116,117,115,34,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,109,101,115,115,97,103,101,32,61,32,96,80,114,111,103,114,97,109,32,116,101,114,109,105,110,97,116,101,100,32,119,105,116,104,32,101,120,105,116,40,36,123,97,125,41,96,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,117,115,32,61,32,97,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,66,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,48,32,60,32,97,46,108,101,110,103,116,104,59,32,41,32,97,46,115,104,105,102,116,40,41,40,104,41,59,10,32,32,32,32,32,32,125,44,32,67,97,32,61,32,104,46,110,111,69,120,105,116,82,117,110,116,105,109,101,32,124,124,32,116,114,117,101,44,32,68,97,32,61,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,84,101,120,116,68,101,99,111,100,101,114,32,63,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,41,32,58,32,118,111,105,100,32,48,44,32,69,97,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,108,101,116,32,97,32,61,32,97,114,103,117,109,101,110,116,115,46,108,101,110,103,116,104,32,62,32,48,32,38,38,32,97,114,103,117,109,101,110,116,115,91,48,93,32,33,61,61,32,118,111,105,100,32,48,32,63,32,97,114,103,117,109,101,110,116,115,91,48,93,32,58,32,48,59,10,32,32,32,32,32,32,32,32,108,101,116,32,98,32,61,32,97,114,103,117,109,101,110,116,115,46,108,101,110,103,116,104,32,62,32,49,32,38,38,32,97,114,103,117,109,101,110,116,115,91,49,93,32,33,61,61,32,118,111,105,100,32,48,32,63,32,97,114,103,117,109,101,110,116,115,91,49,93,32,58,32,78,97,78,59,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,120,44,32,100,32,61,32,97,32,43,32,98,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,61,32,97,59,32,99,91,98,93,32,38,38,32,33,40,98,32,62,61,32,100,41,59,32,41,32,43,43,98,59,10,32,32,32,32,32,32,32,32,105,102,32,40,49,54,32,60,32,98,32,45,32,97,32,38,38,32,99,46,98,117,102,102,101,114,32,38,38,32,68,97,41,32,114,101,116,117,114,110,32,68,97,46,100,101,99,111,100,101,40,99,46,115,117,98,97,114,114,97,121,40,97,44,32,98,41,41,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,100,32,61,32,34,34,59,32,97,32,60,32,98,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,99,91,97,43,43,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,38,32,49,50,56,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,49,57,50,32,61,61,32,40,101,32,38,32,50,50,52,41,41,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,40,101,32,38,32,51,49,41,32,60,60,32,54,32,124,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,50,50,52,32,61,61,32,40,101,32,38,32,50,52,48,41,32,63,32,40,101,32,38,32,49,53,41,32,60,60,32,49,50,32,124,32,102,32,60,60,32,54,32,124,32,107,32,58,32,40,101,32,38,32,55,41,32,60,60,32,49,56,32,124,32,102,32,60,60,32,49,50,32,124,32,107,32,60,60,32,54,32,124,32,99,91,97,43,43,93,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,54,53,53,51,54,32,62,32,101,32,63,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,32,58,32,40,101,32,45,61,32,54,53,53,51,54,44,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,53,53,50,57,54,32,124,32,101,32,62,62,32,49,48,44,32,53,54,51,50,48,32,124,32,101,32,38,32,49,48,50,51,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,99,108,97,115,115,32,70,97,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,67,97,32,61,32,97,32,45,32,50,52,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,71,97,32,61,32,48,44,32,72,97,32,61,32,48,44,32,72,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,120,59,10,32,32,32,32,32,32,32,32,105,102,32,40,48,32,60,32,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,98,32,43,32,99,32,45,32,49,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,53,53,50,57,54,32,60,61,32,102,32,38,38,32,53,55,51,52,51,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,43,43,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,32,61,32,54,53,53,51,54,32,43,32,40,40,102,32,38,32,49,48,50,51,41,32,60,60,32,49,48,41,32,124,32,107,32,38,32,49,48,50,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,49,50,55,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,48,52,55,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,49,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,57,50,32,124,32,102,32,62,62,32,54,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,54,53,53,51,53,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,50,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,50,50,52,32,124,32,102,32,62,62,32,49,50,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,51,32,62,61,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,50,52,48,32,124,32,102,32,62,62,32,49,56,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,62,62,32,49,50,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,62,62,32,54,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,91,98,43,43,93,32,61,32,49,50,56,32,124,32,102,32,38,32,54,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,100,91,98,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,73,97,32,61,32,123,125,44,32,74,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,97,46,108,101,110,103,116,104,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,97,46,112,111,112,40,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,112,111,112,40,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,73,40,97,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,68,91,97,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,74,32,61,32,123,125,44,32,75,32,61,32,123,125,44,32,75,97,32,61,32,123,125,44,32,76,44,32,78,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,103,32,61,32,99,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,46,108,101,110,103,116,104,32,33,61,61,32,97,46,108,101,110,103,116,104,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,77,105,115,109,97,116,99,104,101,100,32,116,121,112,101,32,99,111,110,118,101,114,116,101,114,32,99,111,117,110,116,34,41,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,108,32,61,32,48,59,32,108,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,108,41,32,77,40,97,91,108,93,44,32,103,91,108,93,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,97,46,102,111,114,69,97,99,104,40,40,103,41,32,61,62,32,75,97,91,103,93,32,61,32,98,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,65,114,114,97,121,40,98,46,108,101,110,103,116,104,41,44,32,102,32,61,32,91,93,44,32,107,32,61,32,48,59,10,32,32,32,32,32,32,32,32,98,46,102,111,114,69,97,99,104,40,40,103,44,32,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,75,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,103,41,32,63,32,101,91,108,93,32,61,32,75,91,103,93,32,58,32,40,102,46,112,117,115,104,40,103,41,44,32,74,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,103,41,32,124,124,32,40,74,91,103,93,32,61,32,91,93,41,44,32,74,91,103,93,46,112,117,115,104,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,101,91,108,93,32,61,32,75,91,103,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,43,43,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,61,61,32,102,46,108,101,110,103,116,104,32,38,38,32,100,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,125,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,48,32,61,61,61,32,102,46,108,101,110,103,116,104,32,38,38,32,100,40,101,41,59,10,32,32,32,32,32,32,125,44,32,76,97,44,32,79,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,34,34,59,32,120,91,97,93,59,32,41,32,98,32,43,61,32,76,97,91,120,91,97,43,43,93,93,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,80,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,77,97,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,108,101,116,32,99,32,61,32,97,114,103,117,109,101,110,116,115,46,108,101,110,103,116,104,32,62,32,50,32,38,38,32,97,114,103,117,109,101,110,116,115,91,50,93,32,33,61,61,32,118,111,105,100,32,48,32,63,32,97,114,103,117,109,101,110,116,115,91,50,93,32,58,32,123,125,59,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,46,110,97,109,101,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,116,121,112,101,32,34,36,123,100,125,34,32,109,117,115,116,32,104,97,118,101,32,97,32,112,111,115,105,116,105,118,101,32,105,110,116,101,103,101,114,32,116,121,112,101,105,100,32,112,111,105,110,116,101,114,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,75,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,99,46,104,98,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,116,121,112,101,32,39,36,123,100,125,39,32,116,119,105,99,101,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,75,91,97,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,75,97,91,97,93,59,10,32,32,32,32,32,32,32,32,74,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,32,38,38,32,40,98,32,61,32,74,91,97,93,44,32,100,101,108,101,116,101,32,74,91,97,93,44,32,98,46,102,111,114,69,97,99,104,40,40,101,41,32,61,62,32,101,40,41,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,77,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,108,101,116,32,99,32,61,32,97,114,103,117,109,101,110,116,115,46,108,101,110,103,116,104,32,62,32,50,32,38,38,32,97,114,103,117,109,101,110,116,115,91,50,93,32,33,61,61,32,118,111,105,100,32,48,32,63,32,97,114,103,117,109,101,110,116,115,91,50,93,32,58,32,123,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,77,97,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,79,97,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,97,46,65,97,46,68,97,46,66,97,46,110,97,109,101,32,43,32,34,32,105,110,115,116,97,110,99,101,32,97,108,114,101,97,100,121,32,100,101,108,101,116,101,100,34,41,59,10,32,32,32,32,32,32,125,44,32,80,97,32,61,32,102,97,108,115,101,44,32,81,97,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,125,44,32,82,97,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,98,32,61,61,61,32,99,41,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,46,71,97,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,97,32,61,32,82,97,40,97,44,32,98,44,32,99,46,71,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,32,61,61,61,32,97,32,63,32,110,117,108,108,32,58,32,99,46,36,97,40,97,41,59,10,32,32,32,32,32,32,125,44,32,83,97,32,61,32,123,125,44,32,84,97,32,61,32,123,125,44,32,85,97,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,98,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,112,116,114,32,115,104,111,117,108,100,32,110,111,116,32,98,101,32,117,110,100,101,102,105,110,101,100,34,41,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,97,46,71,97,59,32,41,32,98,32,61,32,97,46,81,97,40,98,41,44,32,97,32,61,32,97,46,71,97,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,84,97,91,98,93,59,10,32,32,32,32,32,32,125,44,32,86,97,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,68,97,32,124,124,32,33,98,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,109,97,107,101,67,108,97,115,115,72,97,110,100,108,101,32,114,101,113,117,105,114,101,115,32,112,116,114,32,97,110,100,32,112,116,114,84,121,112,101,34,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,33,98,46,72,97,32,33,61,61,32,33,33,98,46,70,97,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,66,111,116,104,32,115,109,97,114,116,80,116,114,84,121,112,101,32,97,110,100,32,115,109,97,114,116,80,116,114,32,109,117,115,116,32,98,101,32,115,112,101,99,105,102,105,101,100,34,41,59,10,32,32,32,32,32,32,32,32,98,46,99,111,117,110,116,32,61,32,123,32,118,97,108,117,101,58,32,49,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,81,40,79,98,106,101,99,116,46,99,114,101,97,116,101,40,97,44,32,123,32,65,97,58,32,123,32,118,97,108,117,101,58,32,98,44,32,119,114,105,116,97,98,108,101,58,32,116,114,117,101,32,125,32,125,41,41,59,10,32,32,32,32,32,32,125,44,32,81,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,34,117,110,100,101,102,105,110,101,100,34,32,61,61,61,32,116,121,112,101,111,102,32,70,105,110,97,108,105,122,97,116,105,111,110,82,101,103,105,115,116,114,121,41,32,114,101,116,117,114,110,32,81,32,61,32,40,98,41,32,61,62,32,98,44,32,97,59,10,32,32,32,32,32,32,32,32,80,97,32,61,32,110,101,119,32,70,105,110,97,108,105,122,97,116,105,111,110,82,101,103,105,115,116,114,121,40,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,45,45,98,46,99,111,117,110,116,46,118,97,108,117,101,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,61,32,98,46,99,111,117,110,116,46,118,97,108,117,101,32,38,38,32,40,98,46,70,97,32,63,32,98,46,72,97,46,75,97,40,98,46,70,97,41,32,58,32,98,46,68,97,46,66,97,46,75,97,40,98,46,67,97,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,81,32,61,32,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,98,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,99,46,70,97,32,38,38,32,80,97,46,114,101,103,105,115,116,101,114,40,98,44,32,123,32,65,97,58,32,99,32,125,44,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,81,97,32,61,32,40,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,80,97,46,117,110,114,101,103,105,115,116,101,114,40,98,41,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,81,40,97,41,59,10,32,32,32,32,32,32,125,44,32,87,97,32,61,32,91,93,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,88,97,40,41,32,123,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,89,97,32,61,32,40,97,44,32,98,41,32,61,62,32,79,98,106,101,99,116,46,100,101,102,105,110,101,80,114,111,112,101,114,116,121,40,98,44,32,34,110,97,109,101,34,44,32,123,32,118,97,108,117,101,58,32,97,32,125,41,44,32,90,97,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,97,91,98,93,46,69,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,95,108,101,110,32,61,32,97,114,103,117,109,101,110,116,115,46,108,101,110,103,116,104,44,32,101,32,61,32,110,101,119,32,65,114,114,97,121,40,95,108,101,110,41,44,32,95,107,101,121,32,61,32,48,59,32,95,107,101,121,32,60,32,95,108,101,110,59,32,95,107,101,121,43,43,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,91,95,107,101,121,93,32,61,32,97,114,103,117,109,101,110,116,115,91,95,107,101,121,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,97,91,98,93,46,69,97,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,101,46,108,101,110,103,116,104,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,70,117,110,99,116,105,111,110,32,39,36,123,99,125,39,32,99,97,108,108,101,100,32,119,105,116,104,32,97,110,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,40,36,123,101,46,108,101,110,103,116,104,125,41,32,45,32,101,120,112,101,99,116,115,32,111,110,101,32,111,102,32,40,36,123,97,91,98,93,46,69,97,125,41,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,91,98,93,46,69,97,91,101,46,108,101,110,103,116,104,93,46,97,112,112,108,121,40,116,104,105,115,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,46,69,97,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,46,69,97,91,100,46,78,97,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,36,97,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,104,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,32,124,124,32,118,111,105,100,32,48,32,33,61,61,32,104,91,97,93,46,69,97,32,38,38,32,118,111,105,100,32,48,32,33,61,61,32,104,91,97,93,46,69,97,91,99,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,112,117,98,108,105,99,32,110,97,109,101,32,39,36,123,97,125,39,32,116,119,105,99,101,96,41,59,10,32,32,32,32,32,32,32,32,32,32,90,97,40,104,44,32,97,44,32,97,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,104,91,97,93,46,69,97,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,99,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,109,117,108,116,105,112,108,101,32,111,118,101,114,108,111,97,100,115,32,111,102,32,97,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,116,104,101,32,115,97,109,101,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,32,40,36,123,99,125,41,33,96,41,59,10,32,32,32,32,32,32,32,32,32,32,104,91,97,93,46,69,97,91,99,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,104,91,97,93,32,61,32,98,44,32,104,91,97,93,46,78,97,32,61,32,99,59,10,32,32,32,32,32,32,125,44,32,97,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,97,46,114,101,112,108,97,99,101,40,47,91,94,97,45,122,65,45,90,48,45,57,95,93,47,103,44,32,34,36,34,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,48,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,52,56,32,60,61,32,98,32,38,38,32,53,55,32,62,61,32,98,32,63,32,96,95,36,123,97,125,96,32,58,32,97,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,98,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,97,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,99,111,110,115,116,114,117,99,116,111,114,32,61,32,98,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,77,97,32,61,32,99,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,75,97,32,61,32,100,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,71,97,32,61,32,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,98,98,32,61,32,102,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,81,97,32,61,32,107,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,36,97,32,61,32,103,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,106,98,32,61,32,91,93,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,99,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,98,32,33,61,61,32,99,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,81,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,69,120,112,101,99,116,101,100,32,110,117,108,108,32,111,114,32,105,110,115,116,97,110,99,101,32,111,102,32,36,123,99,46,110,97,109,101,125,44,32,103,111,116,32,97,110,32,105,110,115,116,97,110,99,101,32,111,102,32,36,123,98,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,98,46,81,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,46,71,97,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,84,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,101,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,98,40,98,46,65,97,46,67,97,44,32,98,46,65,97,46,68,97,46,66,97,44,32,116,104,105,115,46,66,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,102,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,84,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,83,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,116,104,105,115,46,85,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,97,32,38,38,32,97,46,112,117,115,104,40,116,104,105,115,46,75,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,32,124,124,32,33,98,46,65,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,101,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,82,97,32,38,38,32,98,46,65,97,46,68,97,46,82,97,41,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,65,97,46,72,97,32,63,32,98,46,65,97,46,72,97,46,110,97,109,101,32,58,32,98,46,65,97,46,68,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,99,32,61,32,99,98,40,98,46,65,97,46,67,97,44,32,98,46,65,97,46,68,97,46,66,97,44,32,116,104,105,115,46,66,97,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,83,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,98,46,65,97,46,70,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,80,97,115,115,105,110,103,32,114,97,119,32,112,111,105,110,116,101,114,32,116,111,32,115,109,97,114,116,32,112,111,105,110,116,101,114,32,105,115,32,105,108,108,101,103,97,108,34,41,59,10,32,32,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,116,104,105,115,46,111,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,48,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,46,65,97,46,72,97,32,61,61,61,32,116,104,105,115,41,32,99,32,61,32,98,46,65,97,46,70,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,65,97,46,72,97,32,63,32,98,46,65,97,46,72,97,46,110,97,109,101,32,58,32,98,46,65,97,46,68,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,32,61,32,98,46,65,97,46,70,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,46,65,97,46,72,97,32,61,61,61,32,116,104,105,115,41,32,99,32,61,32,98,46,65,97,46,70,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,32,61,32,116,104,105,115,46,107,98,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,98,40,40,41,32,61,62,32,100,91,34,100,101,108,101,116,101,34,93,40,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,97,32,38,38,32,97,46,112,117,115,104,40,116,104,105,115,46,75,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,34,85,110,115,117,112,112,111,114,116,105,110,103,32,115,104,97,114,105,110,103,32,112,111,108,105,99,121,34,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,104,98,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,84,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,110,117,108,108,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,34,36,123,101,98,40,98,41,125,34,32,97,115,32,97,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,98,46,65,97,46,67,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,100,101,108,101,116,101,100,32,111,98,106,101,99,116,32,97,115,32,97,32,112,111,105,110,116,101,114,32,111,102,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,98,46,65,97,46,68,97,46,82,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,99,111,110,118,101,114,116,32,97,114,103,117,109,101,110,116,32,111,102,32,116,121,112,101,32,36,123,98,46,65,97,46,68,97,46,110,97,109,101,125,32,116,111,32,112,97,114,97,109,101,116,101,114,32,116,121,112,101,32,36,123,116,104,105,115,46,110,97,109,101,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,98,40,98,46,65,97,46,67,97,44,32,98,46,65,97,46,68,97,46,66,97,44,32,116,104,105,115,46,66,97,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,105,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,44,32,109,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,97,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,66,97,32,61,32,98,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,84,97,32,61,32,99,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,82,97,32,61,32,100,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,83,97,32,61,32,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,105,98,32,61,32,102,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,111,98,32,61,32,107,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,89,97,32,61,32,103,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,85,97,32,61,32,108,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,107,98,32,61,32,110,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,75,97,32,61,32,109,59,10,32,32,32,32,32,32,32,32,101,32,124,124,32,118,111,105,100,32,48,32,33,61,61,32,98,46,71,97,32,63,32,116,104,105,115,46,116,111,87,105,114,101,84,121,112,101,32,61,32,102,98,32,58,32,40,116,104,105,115,46,116,111,87,105,114,101,84,121,112,101,32,61,32,100,32,63,32,100,98,32,58,32,104,98,44,32,116,104,105,115,46,74,97,32,61,32,110,117,108,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,106,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,104,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,40,97,41,41,32,116,104,114,111,119,32,110,101,119,32,76,40,34,82,101,112,108,97,99,105,110,103,32,110,111,110,101,120,105,115,116,101,110,116,32,112,117,98,108,105,99,32,115,121,109,98,111,108,34,41,59,10,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,33,61,61,32,104,91,97,93,46,69,97,32,38,38,32,118,111,105,100,32,48,32,33,61,61,32,99,32,63,32,104,91,97,93,46,69,97,91,99,93,32,61,32,98,32,58,32,40,104,91,97,93,32,61,32,98,44,32,104,91,97,93,46,78,97,32,61,32,99,41,59,10,32,32,32,32,32,32,125,44,32,82,44,32,107,98,32,61,32,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,108,101,116,32,99,32,61,32,97,114,103,117,109,101,110,116,115,46,108,101,110,103,116,104,32,62,32,50,32,38,38,32,97,114,103,117,109,101,110,116,115,91,50,93,32,33,61,61,32,118,111,105,100,32,48,32,63,32,97,114,103,117,109,101,110,116,115,91,50,93,32,58,32,91,93,59,10,32,32,32,32,32,32,32,32,97,46,105,110,99,108,117,100,101,115,40,34,106,34,41,32,63,32,40,97,32,61,32,97,46,114,101,112,108,97,99,101,40,47,112,47,103,44,32,34,105,34,41,44,32,98,32,61,32,40,48,44,32,104,91,34,100,121,110,67,97,108,108,95,34,32,43,32,97,93,41,40,98,44,32,46,46,46,99,41,41,32,58,32,98,32,61,32,82,46,103,101,116,40,98,41,40,46,46,46,99,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,108,98,32,61,32,40,97,44,32,98,41,32,61,62,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,95,108,101,110,50,32,61,32,97,114,103,117,109,101,110,116,115,46,108,101,110,103,116,104,44,32,99,32,61,32,110,101,119,32,65,114,114,97,121,40,95,108,101,110,50,41,44,32,95,107,101,121,50,32,61,32,48,59,32,95,107,101,121,50,32,60,32,95,108,101,110,50,59,32,95,107,101,121,50,43,43,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,91,95,107,101,121,50,93,32,61,32,97,114,103,117,109,101,110,116,115,91,95,107,101,121,50,93,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,107,98,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,125,44,32,83,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,46,105,110,99,108,117,100,101,115,40,34,106,34,41,32,63,32,108,98,40,97,44,32,98,41,32,58,32,82,46,103,101,116,40,98,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,34,102,117,110,99,116,105,111,110,34,32,33,61,32,116,121,112,101,111,102,32,99,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,32,112,111,105,110,116,101,114,32,119,105,116,104,32,115,105,103,110,97,116,117,114,101,32,36,123,97,125,58,32,36,123,98,125,96,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,109,98,44,32,111,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,110,98,40,97,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,84,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,112,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,99,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,101,91,102,93,32,124,124,32,75,91,102,93,32,124,124,32,40,75,97,91,102,93,32,63,32,75,97,91,102,93,46,102,111,114,69,97,99,104,40,99,41,32,58,32,40,100,46,112,117,115,104,40,102,41,44,32,101,91,102,93,32,61,32,116,114,117,101,41,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,91,93,44,32,101,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,98,46,102,111,114,69,97,99,104,40,99,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,109,98,40,96,36,123,97,125,58,32,96,32,43,32,100,46,109,97,112,40,111,98,41,46,106,111,105,110,40,91,34,44,32,34,93,41,41,59,10,32,32,32,32,32,32,125,44,32,113,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,91,93,44,32,100,32,61,32,48,59,32,100,32,60,32,97,59,32,100,43,43,41,32,99,46,112,117,115,104,40,68,91,98,32,43,32,52,32,42,32,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,114,98,40,97,41,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,49,59,32,98,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,98,41,32,105,102,32,40,110,117,108,108,32,33,61,61,32,97,91,98,93,32,38,38,32,118,111,105,100,32,48,32,61,61,61,32,97,91,98,93,46,74,97,41,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,115,98,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,105,102,32,40,50,32,62,32,102,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,97,114,103,84,121,112,101,115,32,97,114,114,97,121,32,115,105,122,101,32,109,105,115,109,97,116,99,104,33,32,77,117,115,116,32,97,116,32,108,101,97,115,116,32,103,101,116,32,114,101,116,117,114,110,32,118,97,108,117,101,32,97,110,100,32,39,116,104,105,115,39,32,116,121,112,101,115,33,34,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,110,117,108,108,32,33,61,61,32,98,91,49,93,32,38,38,32,110,117,108,108,32,33,61,61,32,99,44,32,103,32,61,32,114,98,40,98,41,44,32,108,32,61,32,34,118,111,105,100,34,32,33,61,61,32,98,91,48,93,46,110,97,109,101,44,32,110,32,61,32,102,32,45,32,50,44,32,109,32,61,32,65,114,114,97,121,40,110,41,44,32,113,32,61,32,91,93,44,32,114,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,89,97,40,97,44,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,95,108,101,110,51,32,61,32,97,114,103,117,109,101,110,116,115,46,108,101,110,103,116,104,44,32,65,32,61,32,110,101,119,32,65,114,114,97,121,40,95,108,101,110,51,41,44,32,95,107,101,121,51,32,61,32,48,59,32,95,107,101,121,51,32,60,32,95,108,101,110,51,59,32,95,107,101,121,51,43,43,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,65,91,95,107,101,121,51,93,32,61,32,97,114,103,117,109,101,110,116,115,91,95,107,101,121,51,93,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,114,46,108,101,110,103,116,104,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,113,46,108,101,110,103,116,104,32,61,32,107,32,63,32,50,32,58,32,49,59,10,32,32,32,32,32,32,32,32,32,32,113,91,48,93,32,61,32,101,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,118,32,61,32,98,91,49,93,46,116,111,87,105,114,101,84,121,112,101,40,114,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,113,91,49,93,32,61,32,118,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,119,32,61,32,48,59,32,119,32,60,32,110,59,32,43,43,119,41,32,109,91,119,93,32,61,32,98,91,119,32,43,32,50,93,46,116,111,87,105,114,101,84,121,112,101,40,114,44,32,65,91,119,93,41,44,32,113,46,112,117,115,104,40,109,91,119,93,41,59,10,32,32,32,32,32,32,32,32,32,32,65,32,61,32,100,40,46,46,46,113,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,41,32,74,97,40,114,41,59,10,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,119,32,61,32,107,32,63,32,49,32,58,32,50,59,32,119,32,60,32,98,46,108,101,110,103,116,104,59,32,119,43,43,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,69,32,61,32,49,32,61,61,61,32,119,32,63,32,118,32,58,32,109,91,119,32,45,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,98,91,119,93,46,74,97,32,38,38,32,98,91,119,93,46,74,97,40,69,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,32,61,32,108,32,63,32,98,91,48,93,46,102,114,111,109,87,105,114,101,84,121,112,101,40,65,41,32,58,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,118,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,116,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,97,32,61,32,97,46,116,114,105,109,40,41,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,32,61,32,97,46,105,110,100,101,120,79,102,40,34,40,34,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,45,49,32,33,61,61,32,98,32,63,32,97,46,115,117,98,115,116,114,40,48,44,32,98,41,32,58,32,97,59,10,32,32,32,32,32,32,125,44,32,118,98,32,61,32,91,93,44,32,85,32,61,32,91,93,44,32,119,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,57,32,60,32,97,32,38,38,32,48,32,61,61,61,32,45,45,85,91,97,32,43,32,49,93,32,38,38,32,40,85,91,97,93,32,61,32,118,111,105,100,32,48,44,32,118,98,46,112,117,115,104,40,97,41,41,59,10,32,32,32,32,32,32,125,44,32,86,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,67,97,110,110,111,116,32,117,115,101,32,100,101,108,101,116,101,100,32,118,97,108,46,32,104,97,110,100,108,101,32,61,32,34,32,43,32,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,85,91,97,93,59,10,32,32,32,32,32,32,125,44,32,103,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,118,111,105,100,32,48,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,50,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,110,117,108,108,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,52,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,116,114,117,101,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,54,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,102,97,108,115,101,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,56,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,32,61,32,118,98,46,112,111,112,40,41,32,124,124,32,85,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,32,32,85,91,98,93,32,61,32,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,85,91,98,32,43,32,49,93,32,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,120,98,32,61,32,123,10,32,32,32,32,32,32,32,32,110,97,109,101,58,32,34,101,109,115,99,114,105,112,116,101,110,58,58,118,97,108,34,44,10,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,119,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,97,44,32,98,41,32,61,62,32,103,98,40,98,41,44,10,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,125,44,32,121,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,117,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,120,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,121,91,100,32,62,62,32,49,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,122,91,100,32,62,62,32,49,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,67,91,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,68,91,100,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,122,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,75,91,97,93,59,10,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,99,41,32,116,104,114,111,119,32,97,32,61,32,96,36,123,98,125,32,104,97,115,32,117,110,107,110,111,119,110,32,116,121,112,101,32,36,123,111,98,40,97,41,125,96,44,32,110,101,119,32,80,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,101,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,110,117,108,108,32,61,61,61,32,97,41,32,114,101,116,117,114,110,32,34,110,117,108,108,34,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,116,121,112,101,111,102,32,97,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,111,98,106,101,99,116,34,32,61,61,61,32,98,32,124,124,32,34,97,114,114,97,121,34,32,61,61,61,32,98,32,124,124,32,34,102,117,110,99,116,105,111,110,34,32,61,61,61,32,98,32,63,32,97,46,116,111,83,116,114,105,110,103,40,41,32,58,32,34,34,32,43,32,97,59,10,32,32,32,32,32,32,125,44,32,65,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,110,97,91,99,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,56,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,111,97,91,99,32,62,62,32,51,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,102,108,111,97,116,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,66,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,49,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,117,91,100,93,32,58,32,40,100,41,32,61,62,32,120,91,100,93,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,50,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,121,91,100,32,62,62,32,49,93,32,58,32,40,100,41,32,61,62,32,122,91,100,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,52,58,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,32,63,32,40,100,41,32,61,62,32,67,91,100,32,62,62,32,50,93,32,58,32,40,100,41,32,61,62,32,68,91,100,32,62,62,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,32,119,105,100,116,104,32,40,36,123,98,125,41,58,32,36,123,97,125,96,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,67,98,32,61,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,123,32,111,112,116,105,111,110,97,108,58,32,116,114,117,101,32,125,44,32,120,98,41,44,32,68,98,32,61,32,34,117,110,100,101,102,105,110,101,100,34,32,33,61,32,116,121,112,101,111,102,32,84,101,120,116,68,101,99,111,100,101,114,32,63,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,34,117,116,102,45,49,54,108,101,34,41,32,58,32,118,111,105,100,32,48,44,32,69,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,32,62,62,32,49,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,100,32,61,32,99,32,43,32,98,32,47,32,50,59,32,33,40,99,32,62,61,32,100,41,32,38,38,32,122,91,99,93,59,32,41,32,43,43,99,59,10,32,32,32,32,32,32,32,32,99,32,60,60,61,32,49,59,10,32,32,32,32,32,32,32,32,105,102,32,40,51,50,32,60,32,99,32,45,32,97,32,38,38,32,68,98,41,32,114,101,116,117,114,110,32,68,98,46,100,101,99,111,100,101,40,120,46,115,117,98,97,114,114,97,121,40,97,44,32,99,41,41,59,10,32,32,32,32,32,32,32,32,99,32,61,32,34,34,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,100,32,61,32,48,59,32,33,40,100,32,62,61,32,98,32,47,32,50,41,59,32,43,43,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,121,91,97,32,43,32,50,32,42,32,100,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,32,101,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,99,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,70,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,95,99,59,10,32,32,32,32,32,32,32,32,40,95,99,32,61,32,99,41,32,33,61,61,32,110,117,108,108,32,38,38,32,95,99,32,33,61,61,32,118,111,105,100,32,48,32,63,32,95,99,32,58,32,99,32,61,32,50,49,52,55,52,56,51,54,52,55,59,10,32,32,32,32,32,32,32,32,105,102,32,40,50,32,62,32,99,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,99,32,45,61,32,50,59,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,59,10,32,32,32,32,32,32,32,32,99,32,61,32,99,32,60,32,50,32,42,32,97,46,108,101,110,103,116,104,32,63,32,99,32,47,32,50,32,58,32,97,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,99,59,32,43,43,101,41,32,121,91,98,32,62,62,32,49,93,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,44,32,98,32,43,61,32,50,59,10,32,32,32,32,32,32,32,32,121,91,98,32,62,62,32,49,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,45,32,100,59,10,32,32,32,32,32,32,125,44,32,71,98,32,61,32,40,97,41,32,61,62,32,50,32,42,32,97,46,108,101,110,103,116,104,44,32,72,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,48,44,32,100,32,61,32,34,34,59,32,33,40,99,32,62,61,32,98,32,47,32,52,41,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,67,91,97,32,43,32,52,32,42,32,99,32,62,62,32,50,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,32,101,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,32,32,43,43,99,59,10,32,32,32,32,32,32,32,32,32,32,54,53,53,51,54,32,60,61,32,101,32,63,32,40,101,32,45,61,32,54,53,53,51,54,44,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,53,53,50,57,54,32,124,32,101,32,62,62,32,49,48,44,32,53,54,51,50,48,32,124,32,101,32,38,32,49,48,50,51,41,41,32,58,32,100,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,125,44,32,73,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,95,99,50,59,10,32,32,32,32,32,32,32,32,40,95,99,50,32,61,32,99,41,32,33,61,61,32,110,117,108,108,32,38,38,32,95,99,50,32,33,61,61,32,118,111,105,100,32,48,32,63,32,95,99,50,32,58,32,99,32,61,32,50,49,52,55,52,56,51,54,52,55,59,10,32,32,32,32,32,32,32,32,105,102,32,40,52,32,62,32,99,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,59,10,32,32,32,32,32,32,32,32,99,32,61,32,100,32,43,32,99,32,45,32,52,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,101,32,61,32,48,59,32,101,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,53,53,50,57,54,32,60,61,32,102,32,38,38,32,53,55,51,52,51,32,62,61,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,43,43,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,102,32,61,32,54,53,53,51,54,32,43,32,40,40,102,32,38,32,49,48,50,51,41,32,60,60,32,49,48,41,32,124,32,107,32,38,32,49,48,50,51,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,98,32,43,61,32,52,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,98,32,43,32,52,32,62,32,99,41,32,98,114,101,97,107,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,45,32,100,59,10,32,32,32,32,32,32,125,44,32,74,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,98,32,61,32,48,44,32,99,32,61,32,48,59,32,99,32,60,32,97,46,108,101,110,103,116,104,59,32,43,43,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,46,99,104,97,114,67,111,100,101,65,116,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,53,53,50,57,54,32,60,61,32,100,32,38,38,32,53,55,51,52,51,32,62,61,32,100,32,38,38,32,43,43,99,59,10,32,32,32,32,32,32,32,32,32,32,98,32,43,61,32,52,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,75,98,32,61,32,48,44,32,76,98,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,97,32,61,32,97,46,116,111,87,105,114,101,84,121,112,101,40,100,44,32,99,41,59,10,32,32,32,32,32,32,32,32,100,46,108,101,110,103,116,104,32,38,38,32,40,68,91,98,32,62,62,32,50,93,32,61,32,103,98,40,100,41,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,125,44,32,77,98,32,61,32,91,93,44,32,78,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,77,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,77,98,46,112,117,115,104,40,97,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,59,10,32,32,32,32,32,32,125,44,32,79,98,32,61,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,65,114,114,97,121,40,97,41,44,32,100,32,61,32,48,59,32,100,32,60,32,97,59,32,43,43,100,41,32,99,91,100,93,32,61,32,122,98,40,68,91,98,32,43,32,52,32,42,32,100,32,62,62,32,50,93,44,32,34,112,97,114,97,109,101,116,101,114,32,34,32,43,32,100,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,44,32,80,98,32,61,32,82,101,102,108,101,99,116,46,99,111,110,115,116,114,117,99,116,44,32,81,98,32,61,32,123,125,44,32,82,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,40,97,32,105,110,115,116,97,110,99,101,111,102,32,65,97,32,124,124,32,34,117,110,119,105,110,100,34,32,61,61,32,97,41,41,32,116,104,114,111,119,32,97,59,10,32,32,32,32,32,32,125,44,32,83,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,95,104,36,111,110,69,120,105,116,59,10,32,32,32,32,32,32,32,32,109,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,67,97,32,124,124,32,48,32,60,32,75,98,32,124,124,32,40,40,95,104,36,111,110,69,120,105,116,32,61,32,104,46,111,110,69,120,105,116,41,32,33,61,61,32,110,117,108,108,32,38,38,32,95,104,36,111,110,69,120,105,116,32,33,61,61,32,118,111,105,100,32,48,32,38,38,32,95,104,36,111,110,69,120,105,116,46,99,97,108,108,40,104,44,32,97,41,44,32,108,97,32,61,32,116,114,117,101,41,59,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,65,97,40,97,41,59,10,32,32,32,32,32,32,125,44,32,84,98,32,61,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,108,97,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,97,40,41,44,32,33,40,67,97,32,124,124,32,48,32,60,32,75,98,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,97,32,61,32,97,32,61,32,109,97,44,32,83,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,82,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,82,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,85,98,32,61,32,123,125,44,32,87,98,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,86,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,85,83,69,82,58,32,34,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,76,79,71,78,65,77,69,58,32,34,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,65,84,72,58,32,34,47,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,87,68,58,32,34,47,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,72,79,77,69,58,32,34,47,104,111,109,101,47,119,101,98,95,117,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,76,65,78,71,58,32,40,34,111,98,106,101,99,116,34,32,61,61,32,116,121,112,101,111,102,32,110,97,118,105,103,97,116,111,114,32,38,38,32,110,97,118,105,103,97,116,111,114,46,108,97,110,103,117,97,103,101,115,32,38,38,32,110,97,118,105,103,97,116,111,114,46,108,97,110,103,117,97,103,101,115,91,48,93,32,124,124,32,34,67,34,41,46,114,101,112,108,97,99,101,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,45,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,95,34,10,32,32,32,32,32,32,32,32,32,32,32,32,41,32,43,32,34,46,85,84,70,45,56,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,95,58,32,104,97,32,124,124,32,34,46,47,116,104,105,115,46,112,114,111,103,114,97,109,34,10,32,32,32,32,32,32,32,32,32,32,125,44,32,98,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,105,110,32,85,98,41,32,118,111,105,100,32,48,32,61,61,61,32,85,98,91,98,93,32,63,32,100,101,108,101,116,101,32,97,91,98,93,32,58,32,97,91,98,93,32,61,32,85,98,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,98,32,105,110,32,97,41,32,99,46,112,117,115,104,40,96,36,123,98,125,61,36,123,97,91,98,93,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,86,98,32,61,32,99,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,86,98,59,10,32,32,32,32,32,32,125,44,32,86,98,44,32,88,98,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,34,111,98,106,101,99,116,34,32,61,61,32,116,121,112,101,111,102,32,99,114,121,112,116,111,32,38,38,32,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,99,114,121,112,116,111,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,41,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,40,97,41,32,61,62,32,99,114,121,112,116,111,46,103,101,116,82,97,110,100,111,109,86,97,108,117,101,115,40,97,41,59,10,32,32,32,32,32,32,32,32,117,97,40,34,105,110,105,116,82,97,110,100,111,109,68,101,118,105,99,101,34,41,59,10,32,32,32,32,32,32,125,44,32,89,98,32,61,32,40,97,41,32,61,62,32,40,89,98,32,61,32,88,98,40,41,41,40,97,41,59,10,32,32,32,32,32,32,76,32,61,32,104,46,73,110,116,101,114,110,97,108,69,114,114,111,114,32,61,32,99,108,97,115,115,32,101,120,116,101,110,100,115,32,69,114,114,111,114,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,115,117,112,101,114,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,34,73,110,116,101,114,110,97,108,69,114,114,111,114,34,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,90,98,32,61,32,65,114,114,97,121,40,50,53,54,41,44,32,36,98,32,61,32,48,59,32,50,53,54,32,62,32,36,98,59,32,43,43,36,98,41,32,90,98,91,36,98,93,32,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,36,98,41,59,10,32,32,32,32,32,32,76,97,32,61,32,90,98,59,10,32,32,32,32,32,32,80,32,61,32,104,46,66,105,110,100,105,110,103,69,114,114,111,114,32,61,32,99,108,97,115,115,32,101,120,116,101,110,100,115,32,69,114,114,111,114,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,115,117,112,101,114,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,34,66,105,110,100,105,110,103,69,114,114,111,114,34,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,88,97,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,105,115,65,108,105,97,115,79,102,58,32,102,117,110,99,116,105,111,110,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,40,116,104,105,115,32,105,110,115,116,97,110,99,101,111,102,32,88,97,32,38,38,32,97,32,105,110,115,116,97,110,99,101,111,102,32,88,97,41,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,116,104,105,115,46,65,97,46,68,97,46,66,97,44,32,99,32,61,32,116,104,105,115,46,65,97,46,67,97,59,10,32,32,32,32,32,32,32,32,32,32,97,46,65,97,32,61,32,97,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,97,46,65,97,46,68,97,46,66,97,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,97,32,61,32,97,46,65,97,46,67,97,59,32,98,46,71,97,59,32,41,32,99,32,61,32,98,46,81,97,40,99,41,44,32,98,32,61,32,98,46,71,97,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,59,32,100,46,71,97,59,32,41,32,97,32,61,32,100,46,81,97,40,97,41,44,32,100,32,61,32,100,46,71,97,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,98,32,61,61,61,32,100,32,38,38,32,99,32,61,61,61,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,99,108,111,110,101,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,67,97,32,124,124,32,79,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,65,97,46,80,97,41,32,114,101,116,117,114,110,32,116,104,105,115,46,65,97,46,99,111,117,110,116,46,118,97,108,117,101,32,43,61,32,49,44,32,116,104,105,115,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,81,44,32,98,32,61,32,79,98,106,101,99,116,44,32,99,32,61,32,98,46,99,114,101,97,116,101,44,32,100,32,61,32,79,98,106,101,99,116,46,103,101,116,80,114,111,116,111,116,121,112,101,79,102,40,116,104,105,115,41,44,32,101,32,61,32,116,104,105,115,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,97,40,10,32,32,32,32,32,32,32,32,32,32,32,32,99,46,99,97,108,108,40,98,44,32,100,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,65,97,58,32,123,32,118,97,108,117,101,58,32,123,32,99,111,117,110,116,58,32,101,46,99,111,117,110,116,44,32,79,97,58,32,101,46,79,97,44,32,80,97,58,32,101,46,80,97,44,32,67,97,58,32,101,46,67,97,44,32,68,97,58,32,101,46,68,97,44,32,70,97,58,32,101,46,70,97,44,32,72,97,58,32,101,46,72,97,32,125,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,65,97,46,99,111,117,110,116,46,118,97,108,117,101,32,43,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,97,46,65,97,46,79,97,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,91,34,100,101,108,101,116,101,34,93,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,67,97,32,124,124,32,79,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,65,97,46,79,97,32,38,38,32,33,116,104,105,115,46,65,97,46,80,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,79,98,106,101,99,116,32,97,108,114,101,97,100,121,32,115,99,104,101,100,117,108,101,100,32,102,111,114,32,100,101,108,101,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,81,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,97,32,61,32,116,104,105,115,46,65,97,59,10,32,32,32,32,32,32,32,32,32,32,45,45,97,46,99,111,117,110,116,46,118,97,108,117,101,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,61,32,97,46,99,111,117,110,116,46,118,97,108,117,101,32,38,38,32,40,97,46,70,97,32,63,32,97,46,72,97,46,75,97,40,97,46,70,97,41,32,58,32,97,46,68,97,46,66,97,46,75,97,40,97,46,67,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,80,97,32,124,124,32,40,116,104,105,115,46,65,97,46,70,97,32,61,32,118,111,105,100,32,48,44,32,116,104,105,115,46,65,97,46,67,97,32,61,32,118,111,105,100,32,48,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,105,115,68,101,108,101,116,101,100,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,33,116,104,105,115,46,65,97,46,67,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,100,101,108,101,116,101,76,97,116,101,114,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,67,97,32,124,124,32,79,97,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,65,97,46,79,97,32,38,38,32,33,116,104,105,115,46,65,97,46,80,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,79,98,106,101,99,116,32,97,108,114,101,97,100,121,32,115,99,104,101,100,117,108,101,100,32,102,111,114,32,100,101,108,101,116,105,111,110,34,41,59,10,32,32,32,32,32,32,32,32,32,32,87,97,46,112,117,115,104,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,65,97,46,79,97,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,79,98,106,101,99,116,46,97,115,115,105,103,110,40,105,98,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,99,98,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,89,97,32,38,38,32,40,97,32,61,32,116,104,105,115,46,89,97,40,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,87,97,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,95,116,104,105,115,36,75,97,59,10,32,32,32,32,32,32,32,32,32,32,40,95,116,104,105,115,36,75,97,32,61,32,116,104,105,115,46,75,97,41,32,61,61,61,32,110,117,108,108,32,124,124,32,95,116,104,105,115,36,75,97,32,61,61,61,32,118,111,105,100,32,48,32,124,124,32,95,116,104,105,115,36,75,97,46,99,97,108,108,40,116,104,105,115,44,32,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,98,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,83,97,32,63,32,86,97,40,116,104,105,115,46,66,97,46,77,97,44,32,123,32,68,97,58,32,116,104,105,115,46,105,98,44,32,67,97,58,32,99,44,32,72,97,58,32,116,104,105,115,44,32,70,97,58,32,97,32,125,41,32,58,32,86,97,40,116,104,105,115,46,66,97,46,77,97,44,32,123,32,68,97,58,32,116,104,105,115,44,32,67,97,58,32,97,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,116,104,105,115,46,99,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,99,41,32,114,101,116,117,114,110,32,116,104,105,115,46,87,97,40,97,41,44,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,85,97,40,116,104,105,115,46,66,97,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,33,61,61,32,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,61,32,100,46,65,97,46,99,111,117,110,116,46,118,97,108,117,101,41,32,114,101,116,117,114,110,32,100,46,65,97,46,67,97,32,61,32,99,44,32,100,46,65,97,46,70,97,32,61,32,97,44,32,100,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,100,46,99,108,111,110,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,87,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,116,104,105,115,46,66,97,46,98,98,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,83,97,91,100,93,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,100,41,32,114,101,116,117,114,110,32,98,46,99,97,108,108,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,116,104,105,115,46,82,97,32,63,32,100,46,90,97,32,58,32,100,46,112,111,105,110,116,101,114,84,121,112,101,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,82,97,40,99,44,32,116,104,105,115,46,66,97,44,32,100,46,66,97,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,32,61,61,61,32,101,32,63,32,98,46,99,97,108,108,40,116,104,105,115,41,32,58,32,116,104,105,115,46,83,97,32,63,32,86,97,40,100,46,66,97,46,77,97,44,32,123,32,68,97,58,32,100,44,32,67,97,58,32,101,44,32,72,97,58,32,116,104,105,115,44,32,70,97,58,32,97,32,125,41,32,58,32,86,97,40,100,46,66,97,46,77,97,44,32,123,32,68,97,58,32,100,44,32,67,97,58,32,101,32,125,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,109,98,32,61,32,104,46,85,110,98,111,117,110,100,84,121,112,101,69,114,114,111,114,32,61,32,40,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,89,97,40,98,44,32,102,117,110,99,116,105,111,110,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,110,97,109,101,32,61,32,98,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,109,101,115,115,97,103,101,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,69,114,114,111,114,40,100,41,46,115,116,97,99,107,59,10,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,33,61,61,32,100,32,38,38,32,40,116,104,105,115,46,115,116,97,99,107,32,61,32,116,104,105,115,46,116,111,83,116,114,105,110,103,40,41,32,43,32,34,92,110,34,32,43,32,100,46,114,101,112,108,97,99,101,40,47,94,69,114,114,111,114,40,58,91,94,92,110,93,42,41,63,92,110,47,44,32,34,34,41,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,97,46,112,114,111,116,111,116,121,112,101,41,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,46,99,111,110,115,116,114,117,99,116,111,114,32,61,32,99,59,10,32,32,32,32,32,32,32,32,99,46,112,114,111,116,111,116,121,112,101,46,116,111,83,116,114,105,110,103,32,61,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,32,61,61,61,32,116,104,105,115,46,109,101,115,115,97,103,101,32,63,32,116,104,105,115,46,110,97,109,101,32,58,32,96,36,123,116,104,105,115,46,110,97,109,101,125,58,32,36,123,116,104,105,115,46,109,101,115,115,97,103,101,125,96,59,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,125,41,40,69,114,114,111,114,44,32,34,85,110,98,111,117,110,100,84,121,112,101,69,114,114,111,114,34,41,59,10,32,32,32,32,32,32,85,46,112,117,115,104,40,48,44,32,49,44,32,118,111,105,100,32,48,44,32,49,44,32,110,117,108,108,44,32,49,44,32,116,114,117,101,44,32,49,44,32,102,97,108,115,101,44,32,49,41,59,10,32,32,32,32,32,32,104,46,99,111,117,110,116,95,101,109,118,97,108,95,104,97,110,100,108,101,115,32,61,32,40,41,32,61,62,32,85,46,108,101,110,103,116,104,32,47,32,50,32,45,32,53,32,45,32,118,98,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,118,97,114,32,108,99,32,61,32,123,10,32,32,32,32,32,32,32,32,99,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,117,97,40,10,32,32,32,32,32,32,32,32,32,32,96,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,36,123,97,32,63,32,69,97,40,97,41,32,58,32,34,34,125,44,32,97,116,58,32,96,32,43,32,91,98,32,63,32,98,32,63,32,69,97,40,98,41,32,58,32,34,34,32,58,32,34,117,110,107,110,111,119,110,32,102,105,108,101,110,97,109,101,34,44,32,99,44,32,100,32,63,32,100,32,63,32,69,97,40,100,41,32,58,32,34,34,32,58,32,34,117,110,107,110,111,119,110,32,102,117,110,99,116,105,111,110,34,93,10,32,32,32,32,32,32,32,32,41,44,10,32,32,32,32,32,32,32,32,106,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,110,101,119,32,70,97,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,67,97,32,43,32,49,54,32,62,62,32,50,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,67,97,32,43,32,52,32,62,62,32,50,93,32,61,32,98,59,10,32,32,32,32,32,32,32,32,32,32,68,91,100,46,67,97,32,43,32,56,32,62,62,32,50,93,32,61,32,99,59,10,32,32,32,32,32,32,32,32,32,32,71,97,32,61,32,97,59,10,32,32,32,32,32,32,32,32,32,32,72,97,43,43,59,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,71,97,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,80,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,77,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,78,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,82,58,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,79,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,84,58,32,40,41,32,61,62,32,117,97,40,34,34,41,44,10,32,32,32,32,32,32,32,32,119,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,73,97,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,73,97,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,98,46,85,97,44,32,100,32,61,32,98,46,75,97,44,32,101,32,61,32,98,46,88,97,44,32,102,32,61,32,101,46,109,97,112,40,40,107,41,32,61,62,32,107,46,103,98,41,46,99,111,110,99,97,116,40,101,46,109,97,112,40,40,107,41,32,61,62,32,107,46,109,98,41,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,93,44,32,102,44,32,40,107,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,103,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,46,102,111,114,69,97,99,104,40,40,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,109,32,61,32,107,91,110,93,44,32,113,32,61,32,108,46,101,98,44,32,114,32,61,32,108,46,102,98,44,32,65,32,61,32,107,91,110,32,43,32,101,46,108,101,110,103,116,104,93,44,32,118,32,61,32,108,46,108,98,44,32,119,32,61,32,108,46,110,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,91,108,46,97,98,93,32,61,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,58,32,40,69,41,32,61,62,32,109,46,102,114,111,109,87,105,114,101,84,121,112,101,40,113,40,114,44,32,69,41,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,119,114,105,116,101,58,32,40,69,44,32,100,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,66,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,40,119,44,32,69,44,32,65,46,116,111,87,105,114,101,84,121,112,101,40,66,44,32,100,97,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,74,97,40,66,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,46,110,97,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,110,32,61,32,123,125,44,32,109,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,109,32,105,110,32,103,41,32,110,91,109,93,32,61,32,103,91,109,93,46,114,101,97,100,40,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,40,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,109,32,105,110,32,103,41,32,105,102,32,40,33,40,109,32,105,110,32,110,41,41,32,116,104,114,111,119,32,110,101,119,32,84,121,112,101,69,114,114,111,114,40,96,77,105,115,115,105,110,103,32,102,105,101,108,100,58,32,34,36,123,109,125,34,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,113,32,61,32,99,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,109,32,105,110,32,103,41,32,103,91,109,93,46,119,114,105,116,101,40,113,44,32,110,91,109,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,108,32,38,38,32,108,46,112,117,115,104,40,100,44,32,113,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,113,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,100,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,70,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,95,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,33,33,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,101,44,32,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,32,63,32,99,32,58,32,100,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,102,117,110,99,116,105,111,110,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,102,114,111,109,87,105,114,101,84,121,112,101,40,120,91,101,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,109,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,44,32,109,44,32,113,44,32,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,109,32,61,32,79,40,109,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,83,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,103,32,38,38,32,40,103,32,61,32,83,40,107,44,32,103,41,41,59,10,32,32,32,32,32,32,32,32,32,32,110,32,38,38,32,40,110,32,61,32,83,40,108,44,32,110,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,32,61,32,83,40,113,44,32,114,41,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,65,32,61,32,97,98,40,109,41,59,10,32,32,32,32,32,32,32,32,32,32,36,97,40,65,44,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,111,110,115,116,114,117,99,116,32,36,123,109,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,91,100,93,41,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,44,32,98,44,32,99,93,44,32,100,32,63,32,91,100,93,32,58,32,91,93,44,32,40,118,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,32,61,32,118,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,119,32,61,32,118,46,66,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,69,32,61,32,119,46,77,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,69,32,61,32,88,97,46,112,114,111,116,111,116,121,112,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,32,61,32,89,97,40,109,44,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,79,98,106,101,99,116,46,103,101,116,80,114,111,116,111,116,121,112,101,79,102,40,116,104,105,115,41,32,33,61,61,32,100,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,34,85,115,101,32,39,110,101,119,39,32,116,111,32,99,111,110,115,116,114,117,99,116,32,34,32,43,32,109,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,66,46,76,97,41,32,116,104,114,111,119,32,110,101,119,32,80,40,109,32,43,32,34,32,104,97,115,32,110,111,32,97,99,99,101,115,115,105,98,108,101,32,99,111,110,115,116,114,117,99,116,111,114,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,95,108,101,110,52,32,61,32,97,114,103,117,109,101,110,116,115,46,108,101,110,103,116,104,44,32,78,97,32,61,32,110,101,119,32,65,114,114,97,121,40,95,108,101,110,52,41,44,32,95,107,101,121,52,32,61,32,48,59,32,95,107,101,121,52,32,60,32,95,108,101,110,52,59,32,95,107,101,121,52,43,43,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,78,97,91,95,107,101,121,52,93,32,61,32,97,114,103,117,109,101,110,116,115,91,95,107,101,121,52,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,117,98,32,61,32,66,46,76,97,91,78,97,46,108,101,110,103,116,104,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,61,61,61,32,117,98,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,84,114,105,101,100,32,116,111,32,105,110,118,111,107,101,32,99,116,111,114,32,111,102,32,36,123,109,125,32,119,105,116,104,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,40,36,123,78,97,46,108,101,110,103,116,104,125,41,32,45,32,101,120,112,101,99,116,101,100,32,40,36,123,79,98,106,101,99,116,46,107,101,121,115,40,66,46,76,97,41,46,116,111,83,116,114,105,110,103,40,41,125,41,32,112,97,114,97,109,101,116,101,114,115,32,105,110,115,116,101,97,100,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,117,98,46,97,112,112,108,121,40,116,104,105,115,44,32,78,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,97,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,69,44,32,123,32,99,111,110,115,116,114,117,99,116,111,114,58,32,123,32,118,97,108,117,101,58,32,118,32,125,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,46,112,114,111,116,111,116,121,112,101,32,61,32,100,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,66,32,61,32,110,101,119,32,98,98,40,109,44,32,118,44,32,100,97,44,32,114,44,32,119,44,32,102,44,32,103,44,32,110,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,66,46,71,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,95,101,97,36,86,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,95,101,97,36,86,97,32,61,32,40,101,97,32,61,32,66,46,71,97,41,46,86,97,41,32,33,61,61,32,110,117,108,108,32,38,38,32,95,101,97,36,86,97,32,33,61,61,32,118,111,105,100,32,48,32,63,32,95,101,97,36,86,97,32,58,32,101,97,46,86,97,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,66,46,71,97,46,86,97,46,112,117,115,104,40,66,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,119,32,61,32,110,101,119,32,105,98,40,109,44,32,66,44,32,116,114,117,101,44,32,102,97,108,115,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,97,32,61,32,110,101,119,32,105,98,40,109,32,43,32,34,42,34,44,32,66,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,69,32,61,32,110,101,119,32,105,98,40,109,32,43,32,34,32,99,111,110,115,116,42,34,44,32,66,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,83,97,91,97,93,32,61,32,123,32,112,111,105,110,116,101,114,84,121,112,101,58,32,101,97,44,32,90,97,58,32,69,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,106,98,40,65,44,32,118,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,119,44,32,101,97,44,32,69,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,114,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,113,98,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,83,40,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,91,97,93,44,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,103,32,61,32,103,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,96,99,111,110,115,116,114,117,99,116,111,114,32,36,123,103,46,110,97,109,101,125,96,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,103,46,66,97,46,76,97,32,38,38,32,40,103,46,66,97,46,76,97,32,61,32,91,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,118,111,105,100,32,48,32,33,61,61,32,103,46,66,97,46,76,97,91,98,32,45,32,49,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,96,67,97,110,110,111,116,32,114,101,103,105,115,116,101,114,32,109,117,108,116,105,112,108,101,32,99,111,110,115,116,114,117,99,116,111,114,115,32,119,105,116,104,32,105,100,101,110,116,105,99,97,108,32,110,117,109,98,101,114,32,111,102,32,112,97,114,97,109,101,116,101,114,115,32,40,36,123,98,32,45,32,49,125,41,32,102,111,114,32,99,108,97,115,115,32,39,36,123,103,46,110,97,109,101,125,39,33,32,79,118,101,114,108,111,97,100,32,114,101,115,111,108,117,116,105,111,110,32,105,115,32,99,117,114,114,101,110,116,108,121,32,111,110,108,121,32,112,101,114,102,111,114,109,101,100,32,117,115,105,110,103,32,116,104,101,32,112,97,114,97,109,101,116,101,114,32,99,111,117,110,116,44,32,110,111,116,32,97,99,116,117,97,108,32,116,121,112,101,32,105,110,102,111,33,96,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,103,46,66,97,46,76,97,91,98,32,45,32,49,93,32,61,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,111,110,115,116,114,117,99,116,32,36,123,103,46,110,97,109,101,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,107,44,32,40,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,46,115,112,108,105,99,101,40,49,44,32,48,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,46,66,97,46,76,97,91,98,32,45,32,49,93,32,61,32,115,98,40,108,44,32,110,44,32,110,117,108,108,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,100,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,113,98,40,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,116,98,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,83,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,91,97,93,44,32,40,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,109,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,97,108,108,32,36,123,113,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,108,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,110,32,61,32,110,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,113,32,61,32,96,36,123,110,46,110,97,109,101,125,46,36,123,98,125,96,59,10,32,32,32,32,32,32,32,32,32,32,32,32,98,46,115,116,97,114,116,115,87,105,116,104,40,34,64,64,34,41,32,38,38,32,40,98,32,61,32,83,121,109,98,111,108,91,98,46,115,117,98,115,116,114,105,110,103,40,50,41,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,103,32,38,38,32,110,46,66,97,46,106,98,46,112,117,115,104,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,114,32,61,32,110,46,66,97,46,77,97,44,32,65,32,61,32,114,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,65,32,124,124,32,118,111,105,100,32,48,32,61,61,61,32,65,46,69,97,32,38,38,32,65,46,99,108,97,115,115,78,97,109,101,32,33,61,61,32,110,46,110,97,109,101,32,38,38,32,65,46,78,97,32,61,61,61,32,99,32,45,32,50,32,63,32,40,109,46,78,97,32,61,32,99,32,45,32,50,44,32,109,46,99,108,97,115,115,78,97,109,101,32,61,32,110,46,110,97,109,101,44,32,114,91,98,93,32,61,32,109,41,32,58,32,40,90,97,40,114,44,32,98,44,32,113,41,44,32,114,91,98,93,46,69,97,91,99,32,45,32,50,93,32,61,32,109,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,108,44,32,40,118,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,32,61,32,115,98,40,113,44,32,118,44,32,110,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,48,32,61,61,61,32,114,91,98,93,46,69,97,32,63,32,40,118,46,78,97,32,61,32,99,32,45,32,50,44,32,114,91,98,93,32,61,32,118,41,32,58,32,114,91,98,93,46,69,97,91,99,32,45,32,50,93,32,61,32,118,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,89,58,32,40,97,41,32,61,62,32,77,40,97,44,32,120,98,41,44,10,32,32,32,32,32,32,32,32,68,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,101,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,101,46,118,97,108,117,101,115,32,61,32,123,125,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,58,32,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,99,111,110,115,116,114,117,99,116,111,114,46,118,97,108,117,101,115,91,102,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,102,44,32,107,41,32,61,62,32,107,46,118,97,108,117,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,121,98,40,98,44,32,99,44,32,100,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,36,97,40,98,44,32,101,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,108,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,122,98,40,97,44,32,34,101,110,117,109,34,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,100,46,99,111,110,115,116,114,117,99,116,111,114,59,10,32,32,32,32,32,32,32,32,32,32,100,32,61,32,79,98,106,101,99,116,46,99,114,101,97,116,101,40,100,46,99,111,110,115,116,114,117,99,116,111,114,46,112,114,111,116,111,116,121,112,101,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,108,117,101,58,32,123,32,118,97,108,117,101,58,32,99,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,58,32,123,32,118,97,108,117,101,58,32,89,97,40,96,36,123,100,46,110,97,109,101,125,95,36,123,98,125,96,44,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,97,46,118,97,108,117,101,115,91,99,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,97,91,98,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,65,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,100,41,32,61,62,32,100,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,100,44,32,101,41,32,61,62,32,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,65,98,40,98,44,32,99,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,118,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,113,98,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,79,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,116,98,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,83,40,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,36,97,40,10,32,32,32,32,32,32,32,32,32,32,32,32,97,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,98,40,96,67,97,110,110,111,116,32,99,97,108,108,32,36,123,97,125,32,100,117,101,32,116,111,32,117,110,98,111,117,110,100,32,116,121,112,101,115,96,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,98,32,45,32,49,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,93,44,32,107,44,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,106,98,40,97,44,32,115,98,40,97,44,32,91,103,91,48,93,44,32,110,117,108,108,93,46,99,111,110,99,97,116,40,103,46,115,108,105,99,101,40,49,41,41,44,32,110,117,108,108,44,32,101,44,32,102,41,44,32,98,32,45,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,110,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,45,49,32,61,61,61,32,101,32,38,38,32,40,101,32,61,32,52,50,57,52,57,54,55,50,57,53,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,40,103,41,32,61,62,32,103,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,48,32,61,61,61,32,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,51,50,32,45,32,56,32,42,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,40,103,41,32,61,62,32,103,32,60,60,32,102,32,62,62,62,32,102,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,98,46,105,110,99,108,117,100,101,115,40,34,117,110,115,105,103,110,101,100,34,41,32,63,32,102,117,110,99,116,105,111,110,40,103,44,32,108,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,108,32,62,62,62,32,48,59,10,32,32,32,32,32,32,32,32,32,32,125,32,58,32,102,117,110,99,116,105,111,110,40,103,44,32,108,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,108,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,110,97,109,101,58,32,98,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,101,44,32,116,111,87,105,114,101,84,121,112,101,58,32,107,44,32,73,97,58,32,56,44,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,66,98,40,98,44,32,99,44,32,48,32,33,61,61,32,100,41,44,32,74,97,58,32,110,117,108,108,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,103,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,101,40,117,46,98,117,102,102,101,114,44,32,68,91,102,32,43,32,52,32,62,62,32,50,93,44,32,68,91,102,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,91,73,110,116,56,65,114,114,97,121,44,32,85,105,110,116,56,65,114,114,97,121,44,32,73,110,116,49,54,65,114,114,97,121,44,32,85,105,110,116,49,54,65,114,114,97,121,44,32,73,110,116,51,50,65,114,114,97,121,44,32,85,105,110,116,51,50,65,114,114,97,121,44,32,70,108,111,97,116,51,50,65,114,114,97,121,44,32,70,108,111,97,116,54,52,65,114,114,97,121,93,91,98,93,59,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,110,97,109,101,58,32,99,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,100,44,32,73,97,58,32,56,44,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,100,32,125,44,32,123,32,104,98,58,32,116,114,117,101,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,113,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,67,98,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,117,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,44,32,109,44,32,113,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,102,32,61,32,83,40,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,103,32,61,32,83,40,107,44,32,103,41,59,10,32,32,32,32,32,32,32,32,32,32,110,32,61,32,83,40,108,44,32,110,41,59,10,32,32,32,32,32,32,32,32,32,32,113,32,61,32,83,40,109,44,32,113,41,59,10,32,32,32,32,32,32,32,32,32,32,78,40,91,97,93,44,32,91,98,93,44,32,40,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,32,61,32,114,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,110,101,119,32,105,98,40,99,44,32,114,46,66,97,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,114,44,32,100,44,32,102,44,32,103,44,32,110,44,32,113,41,93,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,90,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,98,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,100,32,61,32,68,91,99,32,62,62,32,50,93,44,32,101,32,61,32,99,32,43,32,52,44,32,102,44,32,107,32,61,32,101,44,32,103,32,61,32,48,59,32,103,32,60,61,32,100,59,32,43,43,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,101,32,43,32,103,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,32,61,61,32,100,32,124,124,32,48,32,61,61,32,120,91,108,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,32,107,32,63,32,69,97,40,107,44,32,108,32,45,32,107,41,32,58,32,34,34,44,32,118,111,105,100,32,48,32,61,61,61,32,102,32,63,32,102,32,61,32,107,32,58,32,40,102,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,48,41,44,32,102,32,43,61,32,107,41,44,32,107,32,61,32,108,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,102,117,110,99,116,105,111,110,40,99,44,32,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,32,105,110,115,116,97,110,99,101,111,102,32,65,114,114,97,121,66,117,102,102,101,114,32,38,38,32,40,100,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,100,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,44,32,102,32,61,32,34,115,116,114,105,110,103,34,32,61,61,32,116,121,112,101,111,102,32,100,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,40,102,32,124,124,32,100,32,105,110,115,116,97,110,99,101,111,102,32,85,105,110,116,56,65,114,114,97,121,32,124,124,32,100,32,105,110,115,116,97,110,99,101,111,102,32,85,105,110,116,56,67,108,97,109,112,101,100,65,114,114,97,121,32,124,124,32,100,32,105,110,115,116,97,110,99,101,111,102,32,73,110,116,56,65,114,114,97,121,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,80,40,34,67,97,110,110,111,116,32,112,97,115,115,32,110,111,110,45,115,116,114,105,110,103,32,116,111,32,115,116,100,58,58,115,116,114,105,110,103,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,107,32,61,32,101,32,61,32,48,59,32,107,32,60,32,100,46,108,101,110,103,116,104,59,32,43,43,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,103,32,61,32,100,46,99,104,97,114,67,111,100,101,65,116,40,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,49,50,55,32,62,61,32,103,32,63,32,101,43,43,32,58,32,50,48,52,55,32,62,61,32,103,32,63,32,101,32,43,61,32,50,32,58,32,53,53,50,57,54,32,60,61,32,103,32,38,38,32,53,55,51,52,51,32,62,61,32,103,32,63,32,40,101,32,43,61,32,52,44,32,43,43,107,41,32,58,32,101,32,43,61,32,51,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,101,32,61,32,100,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,32,97,99,40,52,32,43,32,101,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,32,61,32,107,32,43,32,52,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,91,107,32,62,62,32,50,93,32,61,32,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,41,32,72,40,100,44,32,103,44,32,101,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,40,102,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,102,32,61,32,48,59,32,102,32,60,32,101,59,32,43,43,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,108,32,61,32,100,46,99,104,97,114,67,111,100,101,65,116,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,53,53,32,60,32,108,41,32,116,104,114,111,119,32,84,40,103,41,44,32,110,101,119,32,80,40,34,83,116,114,105,110,103,32,104,97,115,32,85,84,70,45,49,54,32,99,111,100,101,32,117,110,105,116,115,32,116,104,97,116,32,100,111,32,110,111,116,32,102,105,116,32,105,110,32,56,32,98,105,116,115,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,120,91,103,32,43,32,102,93,32,61,32,108,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,102,111,114,32,40,102,32,61,32,48,59,32,102,32,60,32,101,59,32,43,43,102,41,32,120,91,103,32,43,32,102,93,32,61,32,100,91,102,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,99,32,38,38,32,99,46,112,117,115,104,40,84,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,107,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,121,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,32,61,32,79,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,32,61,61,61,32,98,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,69,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,70,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,71,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,40,103,41,32,61,62,32,122,91,103,32,62,62,32,49,93,59,10,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,52,32,61,61,61,32,98,32,38,38,32,40,100,32,61,32,72,98,44,32,101,32,61,32,73,98,44,32,102,32,61,32,74,98,44,32,107,32,61,32,40,103,41,32,61,62,32,68,91,103,32,62,62,32,50,93,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,103,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,108,32,61,32,68,91,103,32,62,62,32,50,93,44,32,110,44,32,109,32,61,32,103,32,43,32,52,44,32,113,32,61,32,48,59,32,113,32,60,61,32,108,59,32,43,43,113,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,114,32,61,32,103,32,43,32,52,32,43,32,113,32,42,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,113,32,61,61,32,108,32,124,124,32,48,32,61,61,32,107,40,114,41,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,32,61,32,100,40,109,44,32,114,32,45,32,109,41,44,32,118,111,105,100,32,48,32,61,61,61,32,110,32,63,32,110,32,61,32,109,32,58,32,40,110,32,43,61,32,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,48,41,44,32,110,32,43,61,32,109,41,44,32,109,32,61,32,114,32,43,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,111,87,105,114,101,84,121,112,101,58,32,40,103,44,32,108,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,34,115,116,114,105,110,103,34,32,33,61,32,116,121,112,101,111,102,32,108,41,32,116,104,114,111,119,32,110,101,119,32,80,40,96,67,97,110,110,111,116,32,112,97,115,115,32,110,111,110,45,115,116,114,105,110,103,32,116,111,32,67,43,43,32,115,116,114,105,110,103,32,116,121,112,101,32,36,123,99,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,110,32,61,32,102,40,108,41,44,32,109,32,61,32,97,99,40,52,32,43,32,110,32,43,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,91,109,32,62,62,32,50,93,32,61,32,110,32,47,32,98,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,40,108,44,32,109,32,43,32,52,44,32,110,32,43,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,117,108,108,32,33,61,61,32,103,32,38,38,32,103,46,112,117,115,104,40,84,44,32,109,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,109,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,73,97,58,32,56,44,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,58,32,73,44,10,32,32,32,32,32,32,32,32,32,32,32,32,74,97,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,84,40,103,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,120,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,73,97,91,97,93,32,61,32,123,32,110,97,109,101,58,32,79,40,98,41,44,32,85,97,58,32,83,40,99,44,32,100,41,44,32,75,97,58,32,83,40,101,44,32,102,41,44,32,88,97,58,32,91,93,32,125,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,105,58,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,73,97,91,97,93,46,88,97,46,112,117,115,104,40,123,32,97,98,58,32,79,40,98,41,44,32,103,98,58,32,99,44,32,101,98,58,32,83,40,100,44,32,101,41,44,32,102,98,58,32,102,44,32,109,98,58,32,107,44,32,108,98,58,32,83,40,103,44,32,108,41,44,32,110,98,58,32,110,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,36,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,79,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,77,40,97,44,32,123,32,112,98,58,32,116,114,117,101,44,32,110,97,109,101,58,32,98,44,32,73,97,58,32,48,44,32,102,114,111,109,87,105,114,101,84,121,112,101,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,125,44,32,116,111,87,105,114,101,84,121,112,101,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,125,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,75,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,67,97,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,75,98,32,61,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,73,58,32,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,73,110,102,105,110,105,116,121,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,67,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,122,98,40,98,44,32,34,101,109,118,97,108,58,58,97,115,34,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,76,98,40,98,44,32,99,44,32,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,112,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,77,98,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,86,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,40,110,117,108,108,44,32,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,87,58,32,119,98,44,10,32,32,32,32,32,32,32,32,69,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,86,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,32,61,61,32,98,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,111,58,32,40,97,44,32,98,44,32,99,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,79,98,40,97,44,32,98,41,44,32,101,32,61,32,100,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,97,45,45,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,65,114,114,97,121,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,96,109,101,116,104,111,100,67,97,108,108,101,114,60,40,36,123,100,46,109,97,112,40,40,107,41,32,61,62,32,107,46,110,97,109,101,41,46,106,111,105,110,40,34,44,32,34,41,125,41,32,61,62,32,36,123,101,46,110,97,109,101,125,62,96,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,78,98,40,10,32,32,32,32,32,32,32,32,32,32,32,32,89,97,40,98,44,32,40,107,44,32,103,44,32,108,44,32,110,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,109,32,61,32,48,44,32,113,32,61,32,48,59,32,113,32,60,32,97,59,32,43,43,113,41,32,102,91,113,93,32,61,32,100,91,113,93,46,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,40,110,32,43,32,109,41,44,32,109,32,43,61,32,100,91,113,93,46,73,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,32,61,32,49,32,61,61,61,32,99,32,63,32,80,98,40,103,44,32,102,41,32,58,32,103,46,97,112,112,108,121,40,107,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,76,98,40,101,44,32,108,44,32,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,122,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,57,32,60,32,97,32,38,38,32,40,85,91,97,32,43,32,49,93,32,43,61,32,49,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,99,97,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,86,40,97,41,59,10,32,32,32,32,32,32,32,32,32,32,74,97,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,119,98,40,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,116,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,122,98,40,97,44,32,34,95,101,109,118,97,108,95,116,97,107,101,95,118,97,108,117,101,34,41,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,97,46,114,101,97,100,86,97,108,117,101,70,114,111,109,80,111,105,110,116,101,114,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,103,98,40,97,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,71,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,81,98,91,97,93,32,38,38,32,40,99,108,101,97,114,84,105,109,101,111,117,116,40,81,98,91,97,93,46,105,100,41,44,32,100,101,108,101,116,101,32,81,98,91,97,93,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,98,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,100,101,108,101,116,101,32,81,98,91,97,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,84,98,40,40,41,32,61,62,32,98,99,40,97,44,32,112,101,114,102,111,114,109,97,110,99,101,46,110,111,119,40,41,41,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,98,41,59,10,32,32,32,32,32,32,32,32,32,32,81,98,91,97,93,32,61,32,123,32,105,100,58,32,99,44,32,113,98,58,32,98,32,125,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,72,58,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,40,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,68,97,116,101,40,41,41,46,103,101,116,70,117,108,108,89,101,97,114,40,41,44,32,102,32,61,32,110,101,119,32,68,97,116,101,40,101,44,32,48,44,32,49,41,46,103,101,116,84,105,109,101,122,111,110,101,79,102,102,115,101,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,61,32,110,101,119,32,68,97,116,101,40,101,44,32,54,44,32,49,41,46,103,101,116,84,105,109,101,122,111,110,101,79,102,102,115,101,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,97,32,62,62,32,50,93,32,61,32,54,48,32,42,32,77,97,116,104,46,109,97,120,40,102,44,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,67,91,98,32,62,62,32,50,93,32,61,32,78,117,109,98,101,114,40,102,32,33,61,32,101,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,40,107,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,103,32,61,32,77,97,116,104,46,97,98,115,40,107,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,96,85,84,67,36,123,48,32,60,61,32,107,32,63,32,34,45,34,32,58,32,34,43,34,125,36,123,83,116,114,105,110,103,40,77,97,116,104,46,102,108,111,111,114,40,103,32,47,32,54,48,41,41,46,112,97,100,83,116,97,114,116,40,50,44,32,34,48,34,41,125,36,123,83,116,114,105,110,103,40,103,32,37,32,54,48,41,46,112,97,100,83,116,97,114,116,40,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,50,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,48,34,10,32,32,32,32,32,32,32,32,32,32,32,32,41,125,96,59,10,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,97,32,61,32,98,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,98,32,61,32,98,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,101,32,60,32,102,32,63,32,40,72,40,97,44,32,99,44,32,49,55,41,44,32,72,40,98,44,32,100,44,32,49,55,41,41,32,58,32,40,72,40,97,44,32,100,44,32,49,55,41,44,32,72,40,98,44,32,99,44,32,49,55,41,41,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,98,97,58,32,40,41,32,61,62,32,112,101,114,102,111,114,109,97,110,99,101,46,110,111,119,40,41,44,10,32,32,32,32,32,32,32,32,74,58,32,40,97,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,120,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,97,32,62,62,62,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,50,49,52,55,52,56,51,54,52,56,32,60,32,97,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,118,97,114,32,99,32,61,32,49,59,32,52,32,62,61,32,99,59,32,99,32,42,61,32,50,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,98,32,42,32,40,49,32,43,32,48,46,50,32,47,32,99,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,77,97,116,104,46,109,105,110,40,100,44,32,97,32,43,32,49,48,48,54,54,51,50,57,54,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,32,61,32,40,77,97,116,104,46,109,105,110,40,50,49,52,55,52,56,51,54,52,56,44,32,54,53,53,51,54,32,42,32,77,97,116,104,46,99,101,105,108,40,77,97,116,104,46,109,97,120,40,97,44,32,100,41,32,47,32,54,53,53,51,54,41,41,32,45,32,107,97,46,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,32,43,32,54,53,53,51,53,41,32,47,32,54,53,53,51,54,32,124,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,107,97,46,103,114,111,119,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,114,101,97,107,32,97,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,41,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,86,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,87,98,40,41,46,102,111,114,69,97,99,104,40,40,100,44,32,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,98,32,43,32,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,101,32,61,32,68,91,97,32,43,32,52,32,42,32,101,32,62,62,32,50,93,32,61,32,102,59,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,102,32,61,32,48,59,32,102,32,60,32,100,46,108,101,110,103,116,104,59,32,43,43,102,41,32,117,91,101,43,43,93,32,61,32,100,46,99,104,97,114,67,111,100,101,65,116,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,117,91,101,93,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,32,43,61,32,100,46,108,101,110,103,116,104,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,88,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,87,98,40,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,97,32,62,62,32,50,93,32,61,32,99,46,108,101,110,103,116,104,59,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,48,59,10,32,32,32,32,32,32,32,32,32,32,99,46,102,111,114,69,97,99,104,40,40,101,41,32,61,62,32,100,32,43,61,32,101,46,108,101,110,103,116,104,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,68,91,98,32,62,62,32,50,93,32,61,32,100,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,83,58,32,40,41,32,61,62,32,53,50,44,10,32,32,32,32,32,32,32,32,81,58,32,40,41,32,61,62,32,53,50,44,10,32,32,32,32,32,32,32,32,107,58,32,99,99,44,10,32,32,32,32,32,32,32,32,102,58,32,100,99,44,10,32,32,32,32,32,32,32,32,101,58,32,101,99,44,10,32,32,32,32,32,32,32,32,66,58,32,102,99,44,10,32,32,32,32,32,32,32,32,97,97,58,32,103,99,44,10,32,32,32,32,32,32,32,32,97,58,32,104,99,44,10,32,32,32,32,32,32,32,32,98,58,32,105,99,44,10,32,32,32,32,32,32,32,32,104,58,32,106,99,44,10,32,32,32,32,32,32,32,32,115,58,32,107,99,44,10,32,32,32,32,32,32,32,32,85,58,32,83,98,44,10,32,32,32,32,32,32,32,32,76,58,32,40,97,44,32,98,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,89,98,40,120,46,115,117,98,97,114,114,97,121,40,97,44,32,97,32,43,32,98,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,87,59,10,32,32,32,32,32,32,40,97,115,121,110,99,32,102,117,110,99,116,105,111,110,40,95,104,36,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,50,44,32,95,119,97,41,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,97,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,95,104,36,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,59,10,32,32,32,32,32,32,32,32,32,32,87,32,61,32,100,46,101,120,112,111,114,116,115,59,10,32,32,32,32,32,32,32,32,32,32,107,97,32,61,32,87,46,100,97,59,10,32,32,32,32,32,32,32,32,32,32,112,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,82,32,61,32,87,46,103,97,59,10,32,32,32,32,32,32,32,32,32,32,114,97,46,117,110,115,104,105,102,116,40,87,46,101,97,41,59,10,32,32,32,32,32,32,32,32,32,32,70,45,45,59,10,32,32,32,32,32,32,32,32,32,32,40,95,104,36,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,32,61,32,104,46,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,99,105,101,115,41,32,61,61,61,32,110,117,108,108,32,124,124,32,95,104,36,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,32,61,61,61,32,118,111,105,100,32,48,32,124,124,32,95,104,36,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,46,99,97,108,108,40,104,44,32,70,41,59,10,32,32,32,32,32,32,32,32,32,32,48,32,61,61,32,70,32,38,38,32,71,32,38,38,32,40,100,32,61,32,71,44,32,71,32,61,32,110,117,108,108,44,32,100,40,41,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,87,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,70,43,43,59,10,32,32,32,32,32,32,32,32,40,95,104,36,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,50,32,61,32,104,46,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,99,105,101,115,41,32,61,61,61,32,110,117,108,108,32,124,124,32,95,104,36,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,50,32,61,61,61,32,118,111,105,100,32,48,32,124,124,32,95,104,36,109,111,110,105,116,111,114,82,117,110,68,101,112,101,110,100,101,110,50,46,99,97,108,108,40,104,44,32,70,41,59,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,123,32,97,58,32,108,99,32,125,59,10,32,32,32,32,32,32,32,32,105,102,32,40,104,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,41,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,104,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,40,98,44,32,97,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,40,96,77,111,100,117,108,101,46,105,110,115,116,97,110,116,105,97,116,101,87,97,115,109,32,99,97,108,108,98,97,99,107,32,102,97,105,108,101,100,32,119,105,116,104,32,101,114,114,111,114,58,32,36,123,100,125,96,41,44,32,98,97,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,40,95,119,97,32,61,32,119,97,41,32,33,61,61,32,110,117,108,108,32,38,38,32,95,119,97,32,33,61,61,32,118,111,105,100,32,48,32,63,32,95,119,97,32,58,32,119,97,32,61,32,118,97,40,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,41,32,63,32,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,32,58,32,104,46,108,111,99,97,116,101,70,105,108,101,32,63,32,104,46,108,111,99,97,116,101,70,105,108,101,40,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,44,32,112,41,32,58,32,112,32,43,32,34,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,46,119,97,115,109,34,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,97,119,97,105,116,32,122,97,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,97,40,99,46,105,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,99,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,98,97,40,100,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,40,41,59,10,32,32,32,32,32,32,118,97,114,32,97,99,32,61,32,40,97,41,32,61,62,32,40,97,99,32,61,32,87,46,102,97,41,40,97,41,44,32,84,32,61,32,40,97,41,32,61,62,32,40,84,32,61,32,87,46,104,97,41,40,97,41,44,32,110,98,32,61,32,40,97,41,32,61,62,32,40,110,98,32,61,32,87,46,105,97,41,40,97,41,44,32,98,99,32,61,32,40,97,44,32,98,41,32,61,62,32,40,98,99,32,61,32,87,46,106,97,41,40,97,44,32,98,41,44,32,88,32,61,32,40,97,44,32,98,41,32,61,62,32,40,88,32,61,32,87,46,107,97,41,40,97,44,32,98,41,44,32,89,32,61,32,40,97,41,32,61,62,32,40,89,32,61,32,87,46,108,97,41,40,97,41,44,32,90,32,61,32,40,41,32,61,62,32,40,90,32,61,32,87,46,109,97,41,40,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,106,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,106,105,105,105,32,61,32,87,46,110,97,41,40,97,44,32,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,106,105,105,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,106,105,105,32,61,32,87,46,111,97,41,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,32,61,32,87,46,112,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,102,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,102,105,105,32,61,32,87,46,113,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,32,61,32,87,46,114,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,32,61,32,40,97,44,32,98,44,32,99,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,32,61,32,87,46,115,97,41,40,97,44,32,98,44,32,99,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,105,32,61,32,87,46,116,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,102,102,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,102,102,105,105,32,61,32,87,46,117,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,106,105,105,105,105,32,61,32,87,46,118,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,118,105,105,106,105,105,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,118,105,105,106,105,105,32,61,32,87,46,119,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,32,61,32,87,46,120,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,106,106,32,61,32,87,46,121,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,41,59,10,32,32,32,32,32,32,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,105,106,106,32,61,32,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,41,32,61,62,32,40,104,46,100,121,110,67,97,108,108,95,105,105,105,105,105,105,106,106,32,61,32,87,46,122,97,41,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,44,32,107,44,32,103,44,32,108,44,32,110,41,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,99,99,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,32,33,61,61,32,100,32,43,32,48,41,32,116,104,114,111,119,32,100,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,102,99,40,97,44,32,98,44,32,99,44,32,100,44,32,101,44,32,102,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,107,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,44,32,101,44,32,102,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,107,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,103,32,33,61,61,32,103,32,43,32,48,41,32,116,104,114,111,119,32,103,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,104,99,40,97,44,32,98,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,99,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,99,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,100,32,33,61,61,32,100,32,43,32,48,41,32,116,104,114,111,119,32,100,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,106,99,40,97,44,32,98,44,32,99,44,32,100,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,32,33,61,61,32,102,32,43,32,48,41,32,116,104,114,111,119,32,102,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,100,99,40,97,44,32,98,44,32,99,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,33,61,61,32,101,32,43,32,48,41,32,116,104,114,111,119,32,101,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,105,99,40,97,44,32,98,44,32,99,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,100,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,44,32,99,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,100,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,32,33,61,61,32,101,32,43,32,48,41,32,116,104,114,111,119,32,101,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,103,99,40,97,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,99,32,33,61,61,32,99,32,43,32,48,41,32,116,104,114,111,119,32,99,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,101,99,40,97,44,32,98,44,32,99,44,32,100,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,101,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,102,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,101,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,102,32,33,61,61,32,102,32,43,32,48,41,32,116,104,114,111,119,32,102,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,107,99,40,97,44,32,98,44,32,99,44,32,100,44,32,101,41,32,123,10,32,32,32,32,32,32,32,32,118,97,114,32,102,32,61,32,90,40,41,59,10,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,82,46,103,101,116,40,97,41,40,98,44,32,99,44,32,100,44,32,101,41,59,10,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,89,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,107,32,33,61,61,32,107,32,43,32,48,41,32,116,104,114,111,119,32,107,59,10,32,32,32,32,32,32,32,32,32,32,88,40,49,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,118,97,114,32,109,99,59,10,32,32,32,32,32,32,71,32,61,32,102,117,110,99,116,105,111,110,32,110,99,40,41,32,123,10,32,32,32,32,32,32,32,32,109,99,32,124,124,32,111,99,40,41,59,10,32,32,32,32,32,32,32,32,109,99,32,124,124,32,40,71,32,61,32,110,99,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,111,99,40,41,32,123,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,97,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,109,99,32,38,38,32,40,109,99,32,61,32,116,114,117,101,44,32,104,46,99,97,108,108,101,100,82,117,110,32,61,32,116,114,117,101,44,32,33,108,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,95,104,36,111,110,82,117,110,116,105,109,101,73,110,105,116,105,97,108,105,122,59,10,32,32,32,32,32,32,32,32,32,32,32,32,66,97,40,114,97,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,97,40,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,40,95,104,36,111,110,82,117,110,116,105,109,101,73,110,105,116,105,97,108,105,122,32,61,32,104,46,111,110,82,117,110,116,105,109,101,73,110,105,116,105,97,108,105,122,101,100,41,32,61,61,61,32,110,117,108,108,32,124,124,32,95,104,36,111,110,82,117,110,116,105,109,101,73,110,105,116,105,97,108,105,122,32,61,61,61,32,118,111,105,100,32,48,32,124,124,32,95,104,36,111,110,82,117,110,116,105,109,101,73,110,105,116,105,97,108,105,122,46,99,97,108,108,40,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,104,46,112,111,115,116,82,117,110,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,104,46,112,111,115,116,82,117,110,32,38,38,32,40,104,46,112,111,115,116,82,117,110,32,61,32,91,104,46,112,111,115,116,82,117,110,93,41,59,32,104,46,112,111,115,116,82,117,110,46,108,101,110,103,116,104,59,32,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,32,98,32,61,32,104,46,112,111,115,116,82,117,110,46,115,104,105,102,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,97,46,117,110,115,104,105,102,116,40,98,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,66,97,40,115,97,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,33,40,48,32,60,32,70,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,104,46,112,114,101,82,117,110,41,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,104,46,112,114,101,82,117,110,32,38,38,32,40,104,46,112,114,101,82,117,110,32,61,32,91,104,46,112,114,101,82,117,110,93,41,59,32,104,46,112,114,101,82,117,110,46,108,101,110,103,116,104,59,32,41,32,116,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,66,97,40,113,97,41,59,10,32,32,32,32,32,32,32,32,32,32,48,32,60,32,70,32,124,124,32,40,104,46,115,101,116,83,116,97,116,117,115,32,63,32,40,104,46,115,101,116,83,116,97,116,117,115,40,34,82,117,110,110,105,110,103,46,46,46,34,41,44,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,104,46,115,101,116,83,116,97,116,117,115,40,34,34,41,44,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,49,41,41,32,58,32,97,40,41,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,104,46,112,114,101,73,110,105,116,41,10,32,32,32,32,32,32,32,32,102,111,114,32,40,34,102,117,110,99,116,105,111,110,34,32,61,61,32,116,121,112,101,111,102,32,104,46,112,114,101,73,110,105,116,32,38,38,32,40,104,46,112,114,101,73,110,105,116,32,61,32,91,104,46,112,114,101,73,110,105,116,93,41,59,32,48,32,60,32,104,46,112,114,101,73,110,105,116,46,108,101,110,103,116,104,59,32,41,32,104,46,112,114,101,73,110,105,116,46,112,111,112,40,41,40,41,59,10,32,32,32,32,32,32,111,99,40,41,59,10,32,32,32,32,32,32,109,111,100,117,108,101,82,116,110,32,61,32,99,97,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,82,116,110,59,10,32,32,32,32,125,59,10,32,32,125,41,40,41,59,10,32,32,118,97,114,32,100,111,116,108,111,116,116,105,101,95,112,108,97,121,101,114,95,100,101,102,97,117,108,116,32,61,32,99,114,101,97,116,101,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,77,111,100,117,108,101,59,10,10,32,32,47,47,32,115,114,99,47,99,111,114,101,47,100,111,116,108,111,116,116,105,101,45,119,97,115,109,45,108,111,97,100,101,114,46,116,115,10,32,32,118,97,114,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,34,82,101,110,100,101,114,101,114,76,111,97,100,101,114,32,105,115,32,97,32,115,116,97,116,105,99,32,99,108,97,115,115,32,97,110,100,32,99,97,110,110,111,116,32,98,101,32,105,110,115,116,97,110,116,105,97,116,101,100,46,34,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,97,115,121,110,99,32,95,116,114,121,76,111,97,100,40,117,114,108,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,117,108,101,32,61,32,97,119,97,105,116,32,100,111,116,108,111,116,116,105,101,95,112,108,97,121,101,114,95,100,101,102,97,117,108,116,40,123,32,108,111,99,97,116,101,70,105,108,101,58,32,40,41,32,61,62,32,117,114,108,32,125,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,84,114,105,101,115,32,116,111,32,108,111,97,100,32,116,104,101,32,87,65,83,77,32,109,111,100,117,108,101,32,102,114,111,109,32,116,104,101,32,112,114,105,109,97,114,121,32,85,82,76,44,32,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,97,32,98,97,99,107,117,112,32,85,82,76,32,105,102,32,110,101,99,101,115,115,97,114,121,46,10,32,32,32,32,32,42,32,84,104,114,111,119,115,32,97,110,32,101,114,114,111,114,32,105,102,32,98,111,116,104,32,85,82,76,115,32,102,97,105,108,32,116,111,32,108,111,97,100,32,116,104,101,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,80,114,111,109,105,115,101,60,77,111,100,117,108,101,62,32,45,32,65,32,112,114,111,109,105,115,101,32,116,104,97,116,32,114,101,115,111,108,118,101,115,32,116,111,32,116,104,101,32,108,111,97,100,101,100,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,97,115,121,110,99,32,95,108,111,97,100,87,105,116,104,66,97,99,107,117,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,32,61,32,116,104,105,115,46,95,116,114,121,76,111,97,100,40,116,104,105,115,46,95,119,97,115,109,85,82,76,41,46,99,97,116,99,104,40,97,115,121,110,99,32,40,105,110,105,116,105,97,108,69,114,114,111,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,97,99,107,117,112,85,114,108,32,61,32,96,104,116,116,112,115,58,47,47,117,110,112,107,103,46,99,111,109,47,36,123,80,65,67,75,65,71,69,95,78,65,77,69,125,64,36,123,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,125,47,100,105,115,116,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,119,97,115,109,96,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,119,97,114,110,40,96,80,114,105,109,97,114,121,32,87,65,83,77,32,108,111,97,100,32,102,97,105,108,101,100,32,102,114,111,109,32,36,123,116,104,105,115,46,95,119,97,115,109,85,82,76,125,46,32,69,114,114,111,114,58,32,36,123,105,110,105,116,105,97,108,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,119,97,114,110,40,96,65,116,116,101,109,112,116,105,110,103,32,116,111,32,108,111,97,100,32,87,65,83,77,32,102,114,111,109,32,98,97,99,107,117,112,32,85,82,76,58,32,36,123,98,97,99,107,117,112,85,114,108,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,97,119,97,105,116,32,116,104,105,115,46,95,116,114,121,76,111,97,100,40,98,97,99,107,117,112,85,114,108,41,59,10,32,32,32,32,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,98,97,99,107,117,112,69,114,114,111,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,96,80,114,105,109,97,114,121,32,87,65,83,77,32,85,82,76,32,102,97,105,108,101,100,58,32,36,123,105,110,105,116,105,97,108,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,96,66,97,99,107,117,112,32,87,65,83,77,32,85,82,76,32,102,97,105,108,101,100,58,32,36,123,98,97,99,107,117,112,69,114,114,111,114,46,109,101,115,115,97,103,101,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,34,87,65,83,77,32,108,111,97,100,105,110,103,32,102,97,105,108,101,100,32,102,114,111,109,32,97,108,108,32,115,111,117,114,99,101,115,46,34,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,80,117,98,108,105,99,32,109,101,116,104,111,100,32,116,111,32,108,111,97,100,32,116,104,101,32,87,101,98,65,115,115,101,109,98,108,121,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,32,85,116,105,108,105,122,101,115,32,97,32,112,114,105,109,97,114,121,32,97,110,100,32,98,97,99,107,117,112,32,85,82,76,32,102,111,114,32,114,111,98,117,115,116,110,101,115,115,46,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,80,114,111,109,105,115,101,60,77,111,100,117,108,101,62,32,45,32,65,32,112,114,111,109,105,115,101,32,116,104,97,116,32,114,101,115,111,108,118,101,115,32,116,111,32,116,104,101,32,108,111,97,100,101,100,32,109,111,100,117,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,97,115,121,110,99,32,108,111,97,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,108,111,97,100,87,105,116,104,66,97,99,107,117,112,40,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,83,101,116,115,32,97,32,110,101,119,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,32,97,110,100,32,105,110,118,97,108,105,100,97,116,101,115,32,116,104,101,32,99,117,114,114,101,110,116,32,109,111,100,117,108,101,32,112,114,111,109,105,115,101,46,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,114,105,110,103,32,45,32,32,84,104,101,32,110,101,119,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,105,99,32,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,32,123,10,32,32,32,32,32,32,105,102,32,40,117,114,108,32,61,61,61,32,116,104,105,115,46,95,119,97,115,109,85,82,76,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,119,97,115,109,85,82,76,32,61,32,117,114,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,77,111,100,117,108,101,80,114,111,109,105,115,101,32,61,32,110,117,108,108,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,47,47,32,101,115,108,105,110,116,45,100,105,115,97,98,108,101,45,110,101,120,116,45,108,105,110,101,32,64,116,121,112,101,115,99,114,105,112,116,45,101,115,108,105,110,116,47,110,97,109,105,110,103,45,99,111,110,118,101,110,116,105,111,110,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,44,32,34,95,77,111,100,117,108,101,80,114,111,109,105,115,101,34,44,32,110,117,108,108,41,59,10,32,32,47,47,32,85,82,76,32,102,111,114,32,116,104,101,32,87,65,83,77,32,102,105,108,101,44,32,99,111,110,115,116,114,117,99,116,101,100,32,117,115,105,110,103,32,112,97,99,107,97,103,101,32,105,110,102,111,114,109,97,116,105,111,110,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,44,32,34,95,119,97,115,109,85,82,76,34,44,32,96,104,116,116,112,115,58,47,47,99,100,110,46,106,115,100,101,108,105,118,114,46,110,101,116,47,110,112,109,47,36,123,80,65,67,75,65,71,69,95,78,65,77,69,125,64,36,123,80,65,67,75,65,71,69,95,86,69,82,83,73,79,78,125,47,100,105,115,116,47,100,111,116,108,111,116,116,105,101,45,112,108,97,121,101,114,46,119,97,115,109,96,41,59,10,10,32,32,47,47,32,115,114,99,47,101,118,101,110,116,45,109,97,110,97,103,101,114,46,116,115,10,32,32,118,97,114,32,69,118,101,110,116,77,97,110,97,103,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,32,32,32,32,125,10,32,32,32,32,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,108,101,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,116,121,112,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,108,105,115,116,101,110,101,114,115,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,32,61,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,83,101,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,115,101,116,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,115,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,97,100,100,40,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,116,121,112,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,108,105,115,116,101,110,101,114,115,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,115,105,122,101,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,116,121,112,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,100,101,108,101,116,101,40,116,121,112,101,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,100,105,115,112,97,116,99,104,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,103,101,116,40,101,118,101,110,116,46,116,121,112,101,41,59,10,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,63,46,102,111,114,69,97,99,104,40,40,108,105,115,116,101,110,101,114,41,32,61,62,32,108,105,115,116,101,110,101,114,40,101,118,101,110,116,41,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,65,108,108,69,118,101,110,116,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,76,105,115,116,101,110,101,114,115,46,99,108,101,97,114,40,41,59,10,32,32,32,32,125,10,32,32,125,59,10,10,32,32,47,47,32,115,114,99,47,111,102,102,115,99,114,101,101,110,45,111,98,115,101,114,118,101,114,46,116,115,10,32,32,118,97,114,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,115,116,97,116,105,99,32,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,67,97,108,108,98,97,99,107,32,61,32,40,101,110,116,114,105,101,115,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,101,110,116,114,105,101,115,46,102,111,114,69,97,99,104,40,40,101,110,116,114,121,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,103,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,110,116,114,121,46,105,115,73,110,116,101,114,115,101,99,116,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,101,119,32,73,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,40,105,110,116,101,114,115,101,99,116,105,111,110,79,98,115,101,114,118,101,114,67,97,108,108,98,97,99,107,44,32,123,10,32,32,32,32,32,32,32,32,116,104,114,101,115,104,111,108,100,58,32,48,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,111,98,115,101,114,118,101,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,104,97,115,40,99,97,110,118,97,115,41,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,100,101,108,101,116,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,105,122,101,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,100,105,115,99,111,110,110,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,114,34,44,32,110,117,108,108,41,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,10,32,32,47,47,32,115,114,99,47,114,101,115,105,122,101,45,111,98,115,101,114,118,101,114,46,116,115,10,32,32,118,97,114,32,82,69,83,73,90,69,95,68,69,66,79,85,78,67,69,95,84,73,77,69,32,61,32,49,48,48,59,10,32,32,118,97,114,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,32,61,32,99,108,97,115,115,32,123,10,32,32,32,32,115,116,97,116,105,99,32,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,105,122,101,72,97,110,100,108,101,114,32,61,32,40,101,110,116,114,105,101,115,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,101,110,116,114,105,101,115,46,102,111,114,69,97,99,104,40,40,101,110,116,114,121,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,101,108,101,109,101,110,116,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,103,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,101,108,101,109,101,110,116,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,116,105,109,101,111,117,116,93,32,61,32,101,108,101,109,101,110,116,59,10,32,32,32,32,32,32,32,32,32,32,99,108,101,97,114,84,105,109,101,111,117,116,40,116,105,109,101,111,117,116,41,59,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,110,101,119,84,105,109,101,111,117,116,32,61,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,82,69,83,73,90,69,95,68,69,66,79,85,78,67,69,95,84,73,77,69,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,101,110,116,114,121,46,116,97,114,103,101,116,44,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,110,101,119,84,105,109,101,111,117,116,93,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,101,119,32,82,101,115,105,122,101,79,98,115,101,114,118,101,114,40,114,101,115,105,122,101,72,97,110,100,108,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,111,98,115,101,114,118,101,40,99,97,110,118,97,115,44,32,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,105,110,105,116,105,97,108,105,122,101,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,104,97,115,40,99,97,110,118,97,115,41,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,101,116,40,99,97,110,118,97,115,44,32,91,100,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,44,32,48,93,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,101,108,101,109,101,110,116,32,61,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,103,101,116,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,105,102,32,40,101,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,116,105,109,101,111,117,116,73,100,32,61,32,101,108,101,109,101,110,116,91,49,93,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,105,109,101,111,117,116,73,100,41,32,99,108,101,97,114,84,105,109,101,111,117,116,40,116,105,109,101,111,117,116,73,100,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,63,46,117,110,111,98,115,101,114,118,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,100,101,108,101,116,101,40,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,46,115,105,122,101,32,38,38,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,46,100,105,115,99,111,110,110,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,111,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,114,34,44,32,110,117,108,108,41,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,44,32,34,95,111,98,115,101,114,118,101,100,67,97,110,118,97,115,101,115,34,44,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,41,59,10,10,32,32,47,47,32,115,114,99,47,117,116,105,108,115,46,116,115,10,32,32,102,117,110,99,116,105,111,110,32,105,115,72,101,120,67,111,108,111,114,40,99,111,108,111,114,41,32,123,10,32,32,32,32,114,101,116,117,114,110,32,47,94,35,40,91,92,100,97,45,102,93,123,54,125,124,91,92,100,97,45,102,93,123,56,125,41,36,47,105,117,46,116,101,115,116,40,99,111,108,111,114,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,104,101,120,83,116,114,105,110,103,84,111,82,71,66,65,73,110,116,40,99,111,108,111,114,72,101,120,41,32,123,10,32,32,32,32,105,102,32,40,33,105,115,72,101,120,67,111,108,111,114,40,99,111,108,111,114,72,101,120,41,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,125,10,32,32,32,32,108,101,116,32,104,101,120,32,61,32,99,111,108,111,114,72,101,120,46,114,101,112,108,97,99,101,40,34,35,34,44,32,34,34,41,59,10,32,32,32,32,104,101,120,32,61,32,104,101,120,46,108,101,110,103,116,104,32,61,61,61,32,54,32,63,32,96,36,123,104,101,120,125,102,102,96,32,58,32,104,101,120,59,10,32,32,32,32,114,101,116,117,114,110,32,112,97,114,115,101,73,110,116,40,104,101,120,44,32,49,54,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,68,111,116,76,111,116,116,105,101,40,102,105,108,101,68,97,116,97,41,32,123,10,32,32,32,32,105,102,32,40,102,105,108,101,68,97,116,97,46,98,121,116,101,76,101,110,103,116,104,32,60,32,52,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,99,111,110,115,116,32,102,105,108,101,83,105,103,110,97,116,117,114,101,32,61,32,110,101,119,32,85,105,110,116,56,65,114,114,97,121,40,102,105,108,101,68,97,116,97,46,115,108,105,99,101,40,48,44,32,90,73,80,95,83,73,71,78,65,84,85,82,69,46,98,121,116,101,76,101,110,103,116,104,41,41,59,10,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,90,73,80,95,83,73,71,78,65,84,85,82,69,46,108,101,110,103,116,104,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,105,102,32,40,90,73,80,95,83,73,71,78,65,84,85,82,69,91,105,93,32,33,61,61,32,102,105,108,101,83,105,103,110,97,116,117,114,101,91,105,93,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,116,114,117,101,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,106,115,111,110,41,32,123,10,32,32,32,32,114,101,116,117,114,110,32,76,79,84,84,73,69,95,74,83,79,78,95,77,65,78,68,65,84,79,82,89,95,70,73,69,76,68,83,46,101,118,101,114,121,40,40,102,105,101,108,100,41,32,61,62,32,79,98,106,101,99,116,46,112,114,111,116,111,116,121,112,101,46,104,97,115,79,119,110,80,114,111,112,101,114,116,121,46,99,97,108,108,40,106,115,111,110,44,32,102,105,101,108,100,41,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,76,111,116,116,105,101,40,102,105,108,101,68,97,116,97,41,32,123,10,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,102,105,108,101,68,97,116,97,32,61,61,61,32,34,115,116,114,105,110,103,34,41,32,123,10,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,74,83,79,78,46,112,97,114,115,101,40,102,105,108,101,68,97,116,97,41,41,59,10,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,95,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,115,76,111,116,116,105,101,74,83,79,78,40,102,105,108,101,68,97,116,97,41,59,10,32,32,32,32,125,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,32,123,10,32,32,32,32,99,111,110,115,116,32,100,112,114,32,61,32,73,83,95,66,82,79,87,83,69,82,32,63,32,119,105,110,100,111,119,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,58,32,49,59,10,32,32,32,32,114,101,116,117,114,110,32,49,32,43,32,40,100,112,114,32,45,32,49,41,32,42,32,68,69,70,65,85,76,84,95,68,80,82,95,70,65,67,84,79,82,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,101,108,101,109,101,110,116,41,32,123,10,32,32,32,32,99,111,110,115,116,32,114,101,99,116,32,61,32,101,108,101,109,101,110,116,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,99,111,110,115,116,32,118,105,101,119,112,111,114,116,72,101,105,103,104,116,32,61,32,119,105,110,100,111,119,46,105,110,110,101,114,72,101,105,103,104,116,32,124,124,32,100,111,99,117,109,101,110,116,46,100,111,99,117,109,101,110,116,69,108,101,109,101,110,116,46,99,108,105,101,110,116,72,101,105,103,104,116,59,10,32,32,32,32,99,111,110,115,116,32,118,105,101,119,112,111,114,116,87,105,100,116,104,32,61,32,119,105,110,100,111,119,46,105,110,110,101,114,87,105,100,116,104,32,124,124,32,100,111,99,117,109,101,110,116,46,100,111,99,117,109,101,110,116,69,108,101,109,101,110,116,46,99,108,105,101,110,116,87,105,100,116,104,59,10,32,32,32,32,114,101,116,117,114,110,32,33,40,114,101,99,116,46,98,111,116,116,111,109,32,60,32,48,32,124,124,32,114,101,99,116,46,116,111,112,32,62,32,118,105,101,119,112,111,114,116,72,101,105,103,104,116,32,124,124,32,114,101,99,116,46,114,105,103,104,116,32,60,32,48,32,124,124,32,114,101,99,116,46,108,101,102,116,32,62,32,118,105,101,119,112,111,114,116,87,105,100,116,104,41,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,32,123,10,32,32,32,32,99,111,110,115,116,32,99,97,110,118,97,115,32,61,32,101,118,101,110,116,46,116,97,114,103,101,116,59,10,32,32,32,32,105,102,32,40,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,99,116,32,61,32,99,97,110,118,97,115,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,32,32,105,102,32,40,114,101,99,116,46,119,105,100,116,104,32,61,61,61,32,48,32,124,124,32,114,101,99,116,46,104,101,105,103,104,116,32,61,61,61,32,48,32,124,124,32,99,97,110,118,97,115,46,119,105,100,116,104,32,61,61,61,32,48,32,124,124,32,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,115,99,97,108,101,88,32,61,32,99,97,110,118,97,115,46,119,105,100,116,104,32,47,32,114,101,99,116,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,99,97,108,101,89,32,61,32,99,97,110,118,97,115,46,104,101,105,103,104,116,32,47,32,114,101,99,116,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,40,101,118,101,110,116,46,99,108,105,101,110,116,88,32,45,32,114,101,99,116,46,108,101,102,116,41,32,42,32,115,99,97,108,101,88,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,40,101,118,101,110,116,46,99,108,105,101,110,116,89,32,45,32,114,101,99,116,46,116,111,112,41,32,42,32,115,99,97,108,101,89,59,10,32,32,32,32,32,32,105,102,32,40,33,78,117,109,98,101,114,46,105,115,70,105,110,105,116,101,40,120,41,32,124,124,32,33,78,117,109,98,101,114,46,105,115,70,105,110,105,116,101,40,121,41,32,124,124,32,78,117,109,98,101,114,46,105,115,78,97,78,40,120,41,32,124,124,32,78,117,109,98,101,114,46,105,115,78,97,78,40,121,41,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,32,120,44,32,121,32,125,59,10,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,125,10,32,32,102,117,110,99,116,105,111,110,32,104,97,110,100,108,101,79,112,101,110,85,114,108,40,109,101,115,115,97,103,101,41,32,123,10,32,32,32,32,99,111,110,115,116,32,99,111,110,116,101,110,116,32,61,32,109,101,115,115,97,103,101,46,114,101,112,108,97,99,101,40,34,79,112,101,110,85,114,108,58,32,34,44,32,34,34,41,59,10,32,32,32,32,99,111,110,115,116,32,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,32,61,32,99,111,110,116,101,110,116,46,105,110,100,101,120,79,102,40,34,32,124,32,84,97,114,103,101,116,58,32,34,41,59,10,32,32,32,32,108,101,116,32,117,114,108,84,111,79,112,101,110,59,10,32,32,32,32,108,101,116,32,116,97,114,103,101,116,59,10,32,32,32,32,105,102,32,40,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,32,61,61,61,32,45,49,41,32,123,10,32,32,32,32,32,32,117,114,108,84,111,79,112,101,110,32,61,32,99,111,110,116,101,110,116,59,10,32,32,32,32,32,32,116,97,114,103,101,116,32,61,32,34,95,98,108,97,110,107,34,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,117,114,108,84,111,79,112,101,110,32,61,32,99,111,110,116,101,110,116,46,115,117,98,115,116,114,105,110,103,40,48,44,32,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,41,59,10,32,32,32,32,32,32,116,97,114,103,101,116,32,61,32,99,111,110,116,101,110,116,46,115,117,98,115,116,114,105,110,103,40,116,97,114,103,101,116,83,101,112,97,114,97,116,111,114,73,110,100,101,120,32,43,32,34,32,124,32,84,97,114,103,101,116,58,32,34,46,108,101,110,103,116,104,41,59,10,32,32,32,32,125,10,32,32,32,32,119,105,110,100,111,119,46,111,112,101,110,40,117,114,108,84,111,79,112,101,110,44,32,116,97,114,103,101,116,41,59,10,32,32,125,10,10,32,32,47,47,32,115,114,99,47,100,111,116,108,111,116,116,105,101,46,116,115,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,32,61,32,40,109,111,100,101,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,114,101,118,101,114,115,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,82,101,118,101,114,115,101,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,98,111,117,110,99,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,66,111,117,110,99,101,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,34,114,101,118,101,114,115,101,45,98,111,117,110,99,101,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,82,101,118,101,114,115,101,66,111,117,110,99,101,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,77,111,100,101,46,70,111,114,119,97,114,100,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,70,105,116,32,61,32,40,102,105,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,105,102,32,40,102,105,116,32,61,61,61,32,34,99,111,110,116,97,105,110,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,67,111,110,116,97,105,110,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,99,111,118,101,114,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,67,111,118,101,114,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,108,108,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,108,108,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,116,45,104,101,105,103,104,116,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,116,72,101,105,103,104,116,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,105,116,32,61,61,61,32,34,102,105,116,45,119,105,100,116,104,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,70,105,116,87,105,100,116,104,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,70,105,116,46,78,111,110,101,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,65,108,105,103,110,32,61,32,40,97,108,105,103,110,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,99,111,114,101,65,108,105,103,110,32,61,32,110,101,119,32,109,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,99,111,114,101,65,108,105,103,110,46,112,117,115,104,95,98,97,99,107,40,97,108,105,103,110,91,48,93,41,59,10,32,32,32,32,99,111,114,101,65,108,105,103,110,46,112,117,115,104,95,98,97,99,107,40,97,108,105,103,110,91,49,93,41,59,10,32,32,32,32,114,101,116,117,114,110,32,99,111,114,101,65,108,105,103,110,59,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,32,61,32,40,115,101,103,109,101,110,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,99,111,110,115,116,32,99,111,114,101,115,101,103,109,101,110,116,32,61,32,110,101,119,32,109,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,105,102,32,40,115,101,103,109,101,110,116,46,108,101,110,103,116,104,32,33,61,61,32,50,41,32,114,101,116,117,114,110,32,99,111,114,101,115,101,103,109,101,110,116,59,10,32,32,32,32,99,111,114,101,115,101,103,109,101,110,116,46,112,117,115,104,95,98,97,99,107,40,115,101,103,109,101,110,116,91,48,93,41,59,10,32,32,32,32,99,111,114,101,115,101,103,109,101,110,116,46,112,117,115,104,95,98,97,99,107,40,115,101,103,109,101,110,116,91,49,93,41,59,10,32,32,32,32,114,101,116,117,114,110,32,99,111,114,101,115,101,103,109,101,110,116,59,10,32,32,125,59,10,32,32,118,97,114,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,32,61,32,40,108,97,121,111,117,116,44,32,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,105,102,32,40,33,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,111,100,117,108,101,46,99,114,101,97,116,101,68,101,102,97,117,108,116,76,97,121,111,117,116,40,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,97,108,105,103,110,58,32,99,114,101,97,116,101,67,111,114,101,65,108,105,103,110,40,108,97,121,111,117,116,46,97,108,105,103,110,32,63,63,32,91,48,46,53,44,32,48,46,53,93,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,102,105,116,58,32,99,114,101,97,116,101,67,111,114,101,70,105,116,40,108,97,121,111,117,116,46,102,105,116,32,63,63,32,34,99,111,110,116,97,105,110,34,44,32,109,111,100,117,108,101,41,10,32,32,32,32,125,59,10,32,32,125,59,10,32,32,118,97,114,32,95,68,111,116,76,111,116,116,105,101,32,61,32,99,108,97,115,115,32,95,68,111,116,76,111,116,116,105,101,32,123,10,32,32,32,32,99,111,110,115,116,114,117,99,116,111,114,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,99,97,110,118,97,115,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,99,111,110,116,101,120,116,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,101,118,101,110,116,77,97,110,97,103,101,114,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,102,114,97,109,101,77,97,110,97,103,101,114,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,100,111,116,76,111,116,116,105,101,67,111,114,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,34,44,32,34,34,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,34,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,114,101,110,100,101,114,67,111,110,102,105,103,34,44,32,123,125,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,105,115,70,114,111,122,101,110,34,44,32,102,97,108,115,101,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,47,47,32,66,111,117,110,100,32,101,118,101,110,116,32,108,105,115,116,101,110,101,114,115,32,102,111,114,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,67,108,105,99,107,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,116,104,105,115,44,32,34,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,34,44,32,110,117,108,108,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,32,61,32,99,111,110,102,105,103,46,99,97,110,118,97,115,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,32,61,32,110,101,119,32,69,118,101,110,116,77,97,110,97,103,101,114,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,32,61,32,110,101,119,32,65,110,105,109,97,116,105,111,110,70,114,97,109,101,77,97,110,97,103,101,114,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,123,10,32,32,32,32,32,32,32,32,46,46,46,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,58,32,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,63,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,44,10,32,32,32,32,32,32,32,32,47,47,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,105,115,32,116,114,117,101,32,98,121,32,100,101,102,97,117,108,116,32,116,111,32,112,114,101,118,101,110,116,32,117,110,110,101,99,101,115,115,97,114,121,32,114,101,110,100,101,114,105,110,103,32,119,104,101,110,32,116,104,101,32,99,97,110,118,97,115,32,105,115,32,111,102,102,115,99,114,101,101,110,10,32,32,32,32,32,32,32,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,58,32,99,111,110,102,105,103,46,114,101,110,100,101,114,67,111,110,102,105,103,63,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,63,63,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,46,108,111,97,100,40,41,46,116,104,101,110,40,40,109,111,100,117,108,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,32,109,111,100,117,108,101,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,32,61,32,110,101,119,32,109,111,100,117,108,101,46,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,76,111,97,100,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,97,100,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,76,111,97,100,69,114,114,111,114,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,34,102,97,105,108,101,100,32,116,111,32,108,111,97,100,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,80,108,97,121,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,112,108,97,121,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,80,97,117,115,101,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,112,97,117,115,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,111,112,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,115,116,111,112,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,76,111,111,112,40,40,108,111,111,112,67,111,117,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,111,112,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,67,111,109,112,108,101,116,101,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,99,111,109,112,108,101,116,101,34,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,70,114,97,109,101,40,40,99,117,114,114,101,110,116,70,114,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,82,101,110,100,101,114,40,40,99,117,114,114,101,110,116,70,114,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,114,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,32,110,101,119,32,109,111,100,117,108,101,46,68,111,116,76,111,116,116,105,101,80,108,97,121,101,114,40,123,10,32,32,32,32,32,32,32,32,32,32,97,110,105,109,97,116,105,111,110,73,100,58,32,99,111,110,102,105,103,46,97,110,105,109,97,116,105,111,110,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,116,104,101,109,101,73,100,58,32,99,111,110,102,105,103,46,116,104,101,109,101,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,47,47,32,70,73,88,77,69,58,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,105,100,32,105,115,32,110,111,116,32,117,115,101,102,117,108,44,32,115,105,110,99,101,32,116,104,101,32,108,111,97,100,32,97,110,100,32,115,116,97,114,116,32,111,102,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,114,101,113,117,105,114,101,32,116,111,32,98,101,32,99,111,110,116,114,111,108,108,101,100,32,98,121,32,116,104,101,32,102,114,97,109,101,119,111,114,107,10,32,32,32,32,32,32,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,99,111,110,102,105,103,46,97,117,116,111,112,108,97,121,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,48,44,10,32,32,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,99,111,110,102,105,103,46,108,111,111,112,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,58,32,99,111,110,102,105,103,46,108,111,111,112,67,111,117,110,116,32,63,63,32,48,44,10,32,32,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,99,111,110,102,105,103,46,109,111,100,101,32,63,63,32,34,102,111,114,119,97,114,100,34,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,99,111,110,102,105,103,46,115,101,103,109,101,110,116,32,63,63,32,91,93,44,32,109,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,99,111,110,102,105,103,46,115,112,101,101,100,32,63,63,32,49,44,10,32,32,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,99,111,110,102,105,103,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,63,63,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,99,111,110,102,105,103,46,109,97,114,107,101,114,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,99,111,110,102,105,103,46,108,97,121,111,117,116,44,32,109,111,100,117,108,101,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,61,32,99,111,110,102,105,103,46,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,63,63,32,34,34,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,32,61,32,99,111,110,102,105,103,46,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,32,63,63,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,117,98,115,99,114,105,98,101,40,99,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,114,101,97,100,121,34,32,125,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,100,97,116,97,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,99,111,110,102,105,103,46,100,97,116,97,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,99,111,110,102,105,103,46,115,114,99,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,83,114,99,40,99,111,110,102,105,103,46,115,114,99,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,46,99,97,116,99,104,40,40,101,114,114,111,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,119,97,115,109,32,109,111,100,117,108,101,58,32,36,123,101,114,114,111,114,125,96,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,109,101,115,115,97,103,101,41,32,123,10,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,109,101,115,115,97,103,101,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,108,111,97,100,69,114,114,111,114,34,44,32,101,114,114,111,114,58,32,110,101,119,32,69,114,114,111,114,40,109,101,115,115,97,103,101,41,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,97,115,121,110,99,32,95,102,101,116,99,104,68,97,116,97,40,115,114,99,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,97,119,97,105,116,32,102,101,116,99,104,40,115,114,99,41,59,10,32,32,32,32,32,32,105,102,32,40,33,114,101,115,112,111,110,115,101,46,111,107,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,102,101,116,99,104,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,32,102,114,111,109,32,85,82,76,58,32,36,123,115,114,99,125,46,32,36,123,114,101,115,112,111,110,115,101,46,115,116,97,116,117,115,125,58,32,36,123,114,101,115,112,111,110,115,101,46,115,116,97,116,117,115,84,101,120,116,125,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,100,97,116,97,32,61,32,97,119,97,105,116,32,114,101,115,112,111,110,115,101,46,97,114,114,97,121,66,117,102,102,101,114,40,41,59,10,32,32,32,32,32,32,105,102,32,40,105,115,68,111,116,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,100,97,116,97,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,84,101,120,116,68,101,99,111,100,101,114,40,41,46,100,101,99,111,100,101,40,100,97,116,97,41,59,10,32,32,32,32,125,10,32,32,32,32,95,108,111,97,100,70,114,111,109,68,97,116,97,40,100,97,116,97,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,108,101,116,32,108,111,97,100,101,100,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,100,97,116,97,32,61,61,61,32,34,115,116,114,105,110,103,34,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,76,111,116,116,105,101,32,74,83,79,78,32,115,116,114,105,110,103,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,115,116,114,105,110,103,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,76,111,116,116,105,101,32,74,83,79,78,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,68,97,116,97,40,100,97,116,97,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,100,97,116,97,32,105,110,115,116,97,110,99,101,111,102,32,65,114,114,97,121,66,117,102,102,101,114,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,68,111,116,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,100,111,116,76,111,116,116,105,101,32,65,114,114,97,121,66,117,102,102,101,114,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,65,114,114,97,121,66,117,102,102,101,114,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,100,111,116,76,111,116,116,105,101,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,68,111,116,76,111,116,116,105,101,68,97,116,97,40,100,97,116,97,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,116,121,112,101,111,102,32,100,97,116,97,32,61,61,61,32,34,111,98,106,101,99,116,34,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,76,111,116,116,105,101,40,100,97,116,97,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,118,97,108,105,100,32,76,111,116,116,105,101,32,74,83,79,78,32,111,98,106,101,99,116,58,32,84,104,101,32,112,114,111,118,105,100,101,100,32,111,98,106,101,99,116,32,100,111,101,115,32,110,111,116,32,99,111,110,102,111,114,109,32,116,111,32,116,104,101,32,76,111,116,116,105,101,32,74,83,79,78,32,102,111,114,109,97,116,46,34,10,32,32,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,68,97,116,97,40,74,83,79,78,46,115,116,114,105,110,103,105,102,121,40,100,97,116,97,41,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,10,32,32,32,32,32,32,32,32,32,32,96,85,110,115,117,112,112,111,114,116,101,100,32,100,97,116,97,32,116,121,112,101,32,102,111,114,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,46,32,69,120,112,101,99,116,101,100,58,32,10,32,32,32,32,32,32,32,32,32,32,45,32,115,116,114,105,110,103,32,40,76,111,116,116,105,101,32,74,83,79,78,41,44,10,32,32,32,32,32,32,32,32,32,32,45,32,65,114,114,97,121,66,117,102,102,101,114,32,40,100,111,116,76,111,116,116,105,101,41,44,10,32,32,32,32,32,32,32,32,32,32,45,32,111,98,106,101,99,116,32,40,76,111,116,116,105,101,32,74,83,79,78,41,46,32,10,32,32,32,32,32,32,32,32,32,32,82,101,99,101,105,118,101,100,58,32,36,123,116,121,112,101,111,102,32,100,97,116,97,125,96,10,32,32,32,32,32,32,32,32,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,113,117,97,108,105,116,121,32,33,61,61,32,118,111,105,100,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,81,117,97,108,105,116,121,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,113,117,97,108,105,116,121,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,116,104,105,115,46,99,117,114,114,101,110,116,70,114,97,109,101,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,115,109,76,111,97,100,101,100,32,61,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,115,109,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,115,109,83,116,97,114,116,101,100,32,61,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,115,109,83,116,97,114,116,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,116,104,105,115,46,95,99,97,110,118,97,115,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,97,117,116,111,82,101,115,105,122,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,108,111,97,100,70,114,111,109,83,114,99,40,115,114,99,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,102,101,116,99,104,68,97,116,97,40,115,114,99,41,46,116,104,101,110,40,40,100,97,116,97,41,32,61,62,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,100,97,116,97,41,41,46,99,97,116,99,104,40,40,101,114,114,111,114,41,32,61,62,32,116,104,105,115,46,95,100,105,115,112,97,116,99,104,69,114,114,111,114,40,96,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,110,105,109,97,116,105,111,110,32,100,97,116,97,32,102,114,111,109,32,85,82,76,58,32,36,123,115,114,99,125,46,32,36,123,101,114,114,111,114,125,96,41,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,98,117,102,102,101,114,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,98,117,102,102,101,114,40,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,99,116,105,118,101,84,104,101,109,101,73,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,99,116,105,118,101,84,104,101,109,101,73,100,40,41,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,97,121,111,117,116,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,97,121,111,117,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,108,97,121,111,117,116,59,10,32,32,32,32,32,32,105,102,32,40,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,32,32,97,108,105,103,110,58,32,91,108,97,121,111,117,116,46,97,108,105,103,110,46,103,101,116,40,48,41,44,32,108,97,121,111,117,116,46,97,108,105,103,110,46,103,101,116,40,49,41,93,44,10,32,32,32,32,32,32,32,32,32,32,102,105,116,58,32,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,115,119,105,116,99,104,32,40,108,97,121,111,117,116,46,102,105,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,67,111,110,116,97,105,110,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,110,116,97,105,110,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,67,111,118,101,114,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,118,101,114,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,70,105,108,108,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,108,108,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,70,105,116,72,101,105,103,104,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,116,45,104,101,105,103,104,116,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,70,105,116,87,105,100,116,104,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,105,116,45,119,105,100,116,104,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,115,101,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,70,105,116,46,78,111,110,101,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,110,111,110,101,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,116,58,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,99,111,110,116,97,105,110,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,125,41,40,41,10,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,97,114,107,101,114,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,109,97,114,107,101,114,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,109,97,114,107,101,114,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,97,110,105,102,101,115,116,40,41,32,123,10,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,110,105,102,101,115,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,109,97,110,105,102,101,115,116,83,116,114,105,110,103,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,33,109,97,110,105,102,101,115,116,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,110,105,102,101,115,116,74,115,111,110,32,61,32,74,83,79,78,46,112,97,114,115,101,40,109,97,110,105,102,101,115,116,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,79,98,106,101,99,116,46,107,101,121,115,40,109,97,110,105,102,101,115,116,74,115,111,110,41,46,108,101,110,103,116,104,32,61,61,61,32,48,41,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,109,97,110,105,102,101,115,116,74,115,111,110,59,10,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,95,101,114,114,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,114,101,110,100,101,114,67,111,110,102,105,103,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,101,103,109,101,110,116,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,101,103,109,101,110,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,115,101,103,109,101,110,116,59,10,32,32,32,32,32,32,105,102,32,40,115,101,103,109,101,110,116,32,38,38,32,115,101,103,109,101,110,116,46,115,105,122,101,40,41,32,61,61,61,32,50,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,91,115,101,103,109,101,110,116,46,103,101,116,40,48,41,44,32,115,101,103,109,101,110,116,46,103,101,116,40,49,41,93,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,111,111,112,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,108,111,111,112,65,110,105,109,97,116,105,111,110,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,109,111,100,101,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,101,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,109,111,100,101,59,10,32,32,32,32,32,32,105,102,32,40,109,111,100,101,32,61,61,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,77,111,100,101,46,82,101,118,101,114,115,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,114,101,118,101,114,115,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,77,111,100,101,46,66,111,117,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,98,111,117,110,99,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,109,111,100,101,32,61,61,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,77,111,100,101,46,82,101,118,101,114,115,101,66,111,117,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,114,101,118,101,114,115,101,45,98,111,117,110,99,101,34,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,34,102,111,114,119,97,114,100,34,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,70,114,111,122,101,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,97,117,116,111,112,108,97,121,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,97,117,116,111,112,108,97,121,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,112,101,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,99,111,110,102,105,103,40,41,46,115,112,101,101,100,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,82,101,97,100,121,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,33,61,61,32,110,117,108,108,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,76,111,97,100,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,76,111,97,100,101,100,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,80,108,97,121,105,110,103,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,80,108,97,121,105,110,103,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,80,97,117,115,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,80,97,117,115,101,100,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,105,115,83,116,111,112,112,101,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,83,116,111,112,112,101,100,40,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,99,117,114,114,101,110,116,70,114,97,109,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,48,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,77,97,116,104,46,114,111,117,110,100,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,117,114,114,101,110,116,70,114,97,109,101,40,41,32,42,32,49,48,48,41,32,47,32,49,48,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,108,111,111,112,67,111,117,110,116,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,108,111,111,112,67,111,117,110,116,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,116,111,116,97,108,70,114,97,109,101,115,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,116,111,116,97,108,70,114,97,109,101,115,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,100,117,114,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,100,117,114,97,116,105,111,110,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,40,41,32,63,63,32,48,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,32,99,97,110,118,97,115,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,99,97,110,118,97,115,59,10,32,32,32,32,125,10,32,32,32,32,108,111,97,100,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,97,110,105,109,97,116,105,111,110,73,100,58,32,99,111,110,102,105,103,46,97,110,105,109,97,116,105,111,110,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,116,104,101,109,101,73,100,58,32,99,111,110,102,105,103,46,116,104,101,109,101,73,100,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,99,111,110,102,105,103,46,97,117,116,111,112,108,97,121,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,48,44,10,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,99,111,110,102,105,103,46,108,111,111,112,32,63,63,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,58,32,99,111,110,102,105,103,46,108,111,111,112,67,111,117,110,116,32,63,63,32,48,44,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,99,111,110,102,105,103,46,109,111,100,101,32,63,63,32,34,102,111,114,119,97,114,100,34,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,99,111,110,102,105,103,46,115,101,103,109,101,110,116,32,63,63,32,91,93,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,44,10,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,99,111,110,102,105,103,46,115,112,101,101,100,32,63,63,32,49,44,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,99,111,110,102,105,103,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,63,63,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,99,111,110,102,105,103,46,109,97,114,107,101,114,32,63,63,32,34,34,44,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,99,111,110,102,105,103,46,108,97,121,111,117,116,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,105,102,32,40,99,111,110,102,105,103,46,100,97,116,97,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,68,97,116,97,40,99,111,110,102,105,103,46,100,97,116,97,41,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,99,111,110,102,105,103,46,115,114,99,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,108,111,97,100,70,114,111,109,83,114,99,40,99,111,110,102,105,103,46,115,114,99,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,99,111,110,102,105,103,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,63,63,32,34,34,41,59,10,32,32,32,32,125,10,32,32,32,32,95,100,114,97,119,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,99,111,110,116,101,120,116,32,38,38,32,34,103,101,116,67,111,110,116,101,120,116,34,32,105,110,32,116,104,105,115,46,95,99,97,110,118,97,115,32,38,38,32,116,121,112,101,111,102,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,67,111,110,116,101,120,116,32,61,61,61,32,34,102,117,110,99,116,105,111,110,34,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,67,111,110,116,101,120,116,40,34,50,100,34,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,99,111,110,116,101,120,116,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,98,117,102,102,101,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,98,117,102,102,101,114,40,41,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,101,120,112,101,99,116,101,100,76,101,110,103,116,104,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,32,42,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,32,42,32,66,89,84,69,83,95,80,69,82,95,80,73,88,69,76,59,10,32,32,32,32,32,32,32,32,105,102,32,40,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,32,33,61,61,32,101,120,112,101,99,116,101,100,76,101,110,103,116,104,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,119,97,114,110,40,96,66,117,102,102,101,114,32,115,105,122,101,32,109,105,115,109,97,116,99,104,58,32,103,111,116,32,36,123,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,125,44,32,101,120,112,101,99,116,101,100,32,36,123,101,120,112,101,99,116,101,100,76,101,110,103,116,104,125,96,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,108,101,116,32,105,109,97,103,101,68,97,116,97,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,99,108,97,109,112,101,100,66,117,102,102,101,114,32,61,32,110,101,119,32,85,105,110,116,56,67,108,97,109,112,101,100,65,114,114,97,121,40,98,117,102,102,101,114,44,32,48,44,32,98,117,102,102,101,114,46,98,121,116,101,76,101,110,103,116,104,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,73,109,97,103,101,68,97,116,97,32,61,61,61,32,34,117,110,100,101,102,105,110,101,100,34,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,32,61,32,116,104,105,115,46,95,99,111,110,116,101,120,116,46,99,114,101,97,116,101,73,109,97,103,101,68,97,116,97,40,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,46,100,97,116,97,46,115,101,116,40,99,108,97,109,112,101,100,66,117,102,102,101,114,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,105,109,97,103,101,68,97,116,97,32,61,32,110,101,119,32,73,109,97,103,101,68,97,116,97,40,99,108,97,109,112,101,100,66,117,102,102,101,114,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,46,112,117,116,73,109,97,103,101,68,97,116,97,40,105,109,97,103,101,68,97,116,97,44,32,48,44,32,48,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,33,61,61,32,110,117,108,108,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,99,97,110,99,101,108,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,61,61,32,110,117,108,108,32,38,38,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,38,38,32,33,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,38,38,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,32,124,124,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,76,111,111,112,46,98,105,110,100,40,116,104,105,115,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,97,110,105,109,97,116,105,111,110,76,111,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,32,38,38,32,33,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,97,100,118,97,110,99,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,116,105,99,107,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,97,100,118,97,110,99,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,32,116,104,105,115,46,95,102,114,97,109,101,77,97,110,97,103,101,114,46,114,101,113,117,101,115,116,65,110,105,109,97,116,105,111,110,70,114,97,109,101,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,76,111,111,112,46,98,105,110,100,40,116,104,105,115,41,41,59,10,32,32,32,32,32,32,125,32,99,97,116,99,104,32,40,101,114,114,111,114,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,111,108,101,46,101,114,114,111,114,40,34,69,114,114,111,114,32,105,110,32,97,110,105,109,97,116,105,111,110,32,102,114,97,109,101,58,34,44,32,101,114,114,111,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,114,101,110,100,101,114,69,114,114,111,114,34,44,32,101,114,114,111,114,32,125,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,101,114,114,111,114,32,105,110,115,116,97,110,99,101,111,102,32,87,101,98,65,115,115,101,109,98,108,121,46,82,117,110,116,105,109,101,69,114,114,111,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,100,101,115,116,114,111,121,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,112,108,97,121,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,33,116,104,105,115,46,105,115,76,111,97,100,101,100,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,112,108,97,121,105,110,103,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,112,108,97,121,40,41,59,10,32,32,32,32,32,32,105,102,32,40,112,108,97,121,105,110,103,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,32,38,38,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,38,38,32,33,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,116,104,105,115,46,95,99,97,110,118,97,115,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,112,97,117,115,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,112,97,117,115,101,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,111,107,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,111,112,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,105,102,32,40,111,107,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,102,114,97,109,101,34,44,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,116,104,105,115,46,99,117,114,114,101,110,116,70,114,97,109,101,32,125,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,70,114,97,109,101,40,102,114,97,109,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,85,112,100,97,116,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,101,107,40,102,114,97,109,101,41,59,10,32,32,32,32,32,32,105,102,32,40,102,114,97,109,101,85,112,100,97,116,101,100,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,114,101,110,100,101,114,101,100,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,112,101,101,100,40,115,112,101,101,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,115,112,101,101,100,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,99,111,108,111,114,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,115,116,121,108,101,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,99,111,108,111,114,59,10,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,104,101,120,83,116,114,105,110,103,84,111,82,71,66,65,73,110,116,40,99,111,108,111,114,41,10,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,99,111,108,111,114,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,76,111,111,112,40,108,111,111,112,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,108,111,111,112,65,110,105,109,97,116,105,111,110,58,32,108,111,111,112,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,76,111,111,112,67,111,117,110,116,40,108,111,111,112,67,111,117,110,116,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,116,121,112,101,44,32,108,105,115,116,101,110,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,100,101,115,116,114,111,121,40,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,117,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,111,110,116,101,120,116,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,10,32,32,32,32,32,32,32,32,116,121,112,101,58,32,34,100,101,115,116,114,111,121,34,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,114,101,109,111,118,101,65,108,108,69,118,101,110,116,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,125,10,32,32,32,32,102,114,101,101,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,102,114,101,101,122,101,34,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,117,110,102,114,101,101,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,97,110,105,109,97,116,105,111,110,70,114,97,109,101,73,100,32,33,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,105,115,70,114,111,122,101,110,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,117,110,102,114,101,101,122,101,34,32,125,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,115,105,122,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,116,104,105,115,46,105,115,76,111,97,100,101,100,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,100,112,114,32,61,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,119,105,110,100,111,119,46,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,49,59,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,123,32,104,101,105,103,104,116,58,32,99,108,105,101,110,116,72,101,105,103,104,116,44,32,119,105,100,116,104,58,32,99,108,105,101,110,116,87,105,100,116,104,32,125,32,61,32,116,104,105,115,46,95,99,97,110,118,97,115,46,103,101,116,66,111,117,110,100,105,110,103,67,108,105,101,110,116,82,101,99,116,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,99,108,105,101,110,116,72,101,105,103,104,116,32,33,61,61,32,48,32,38,38,32,99,108,105,101,110,116,87,105,100,116,104,32,33,61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,99,108,105,101,110,116,87,105,100,116,104,32,42,32,100,112,114,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,99,108,105,101,110,116,72,101,105,103,104,116,32,42,32,100,112,114,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,105,122,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,115,105,122,101,40,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,105,102,32,40,114,101,115,105,122,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,84,114,97,110,115,102,111,114,109,40,116,114,97,110,115,102,111,114,109,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,118,97,108,32,111,102,32,116,114,97,110,115,102,111,114,109,41,32,123,10,32,32,32,32,32,32,32,32,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,46,112,117,115,104,95,98,97,99,107,40,118,97,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,111,107,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,84,114,97,110,115,102,111,114,109,40,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,41,59,10,32,32,32,32,32,32,105,102,32,40,111,107,32,38,38,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,111,107,59,10,32,32,32,32,125,10,32,32,32,32,103,101,116,84,114,97,110,115,102,111,114,109,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,114,97,110,115,102,111,114,109,32,61,32,91,48,44,32,48,44,32,48,44,32,48,44,32,48,44,32,48,44,32,48,44,32,48,44,32,48,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,103,101,116,84,114,97,110,115,102,111,114,109,40,41,59,10,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,46,115,105,122,101,40,41,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,116,114,97,110,115,102,111,114,109,91,105,93,32,61,32,116,114,97,110,115,102,111,114,109,86,101,99,116,111,114,46,103,101,116,40,105,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,114,97,110,115,102,111,114,109,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,101,103,109,101,110,116,40,115,116,97,114,116,70,114,97,109,101,44,32,101,110,100,70,114,97,109,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,99,114,101,97,116,101,67,111,114,101,83,101,103,109,101,110,116,40,91,115,116,97,114,116,70,114,97,109,101,44,32,101,110,100,70,114,97,109,101,93,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,77,111,100,101,40,109,111,100,101,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,99,114,101,97,116,101,67,111,114,101,77,111,100,101,40,109,111,100,101,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,123,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,44,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,44,32,113,117,97,108,105,116,121,44,32,46,46,46,114,101,115,116,67,111,110,102,105,103,32,125,32,61,32,99,111,110,102,105,103,59,10,32,32,32,32,32,32,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,46,46,46,114,101,115,116,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,47,47,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,105,115,32,97,32,115,112,101,99,105,97,108,32,99,97,115,101,44,32,105,116,32,115,104,111,117,108,100,32,98,101,32,115,101,116,32,116,111,32,116,104,101,32,100,101,102,97,117,108,116,32,118,97,108,117,101,32,105,102,32,105,116,39,115,32,110,111,116,32,112,114,111,118,105,100,101,100,10,32,32,32,32,32,32,32,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,58,32,100,101,118,105,99,101,80,105,120,101,108,82,97,116,105,111,32,124,124,32,103,101,116,68,101,102,97,117,108,116,68,80,82,40,41,44,10,32,32,32,32,32,32,32,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,58,32,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,32,63,63,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,46,46,46,113,117,97,108,105,116,121,32,33,61,61,32,118,111,105,100,32,48,32,38,38,32,123,32,113,117,97,108,105,116,121,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,105,102,32,40,113,117,97,108,105,116,121,32,33,61,61,32,118,111,105,100,32,48,32,38,38,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,81,117,97,108,105,116,121,40,113,117,97,108,105,116,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,97,117,116,111,82,101,115,105,122,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,67,97,110,118,97,115,82,101,115,105,122,101,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,102,114,101,101,122,101,79,110,79,102,102,115,99,114,101,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,44,32,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,105,115,69,108,101,109,101,110,116,73,110,86,105,101,119,112,111,114,116,40,116,104,105,115,46,95,99,97,110,118,97,115,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,79,102,102,115,99,114,101,101,110,79,98,115,101,114,118,101,114,46,117,110,111,98,115,101,114,118,101,40,116,104,105,115,46,95,99,97,110,118,97,115,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,105,115,70,114,111,122,101,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,40,41,32,61,61,61,32,97,110,105,109,97,116,105,111,110,73,100,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,119,105,100,116,104,44,32,116,104,105,115,46,95,99,97,110,118,97,115,46,104,101,105,103,104,116,41,59,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,113,117,97,108,105,116,121,32,33,61,61,32,118,111,105,100,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,81,117,97,108,105,116,121,40,116,104,105,115,46,95,114,101,110,100,101,114,67,111,110,102,105,103,46,113,117,97,108,105,116,121,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,116,104,105,115,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,77,97,114,107,101,114,40,109,97,114,107,101,114,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,109,97,114,107,101,114,115,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,115,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,109,97,114,107,101,114,115,40,41,59,10,32,32,32,32,32,32,105,102,32,40,109,97,114,107,101,114,115,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,91,93,59,10,32,32,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,109,97,114,107,101,114,115,46,115,105,122,101,40,41,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,109,97,114,107,101,114,115,46,103,101,116,40,105,41,59,10,32,32,32,32,32,32,32,32,32,32,114,101,115,117,108,116,46,112,117,115,104,40,123,10,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,58,32,109,97,114,107,101,114,46,110,97,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,116,105,109,101,58,32,109,97,114,107,101,114,46,116,105,109,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,100,117,114,97,116,105,111,110,58,32,109,97,114,107,101,114,46,100,117,114,97,116,105,111,110,10,32,32,32,32,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,114,101,115,117,108,116,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,76,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,101,109,101,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,101,109,101,76,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,114,101,115,101,116,84,104,101,109,101,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,82,101,115,101,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,115,101,116,84,104,101,109,101,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,101,109,101,82,101,115,101,116,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,101,109,101,82,101,115,101,116,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,76,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,101,109,101,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,101,109,101,76,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,83,108,111,116,115,40,115,108,111,116,115,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,83,108,111,116,115,40,115,108,111,116,115,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,114,101,110,100,101,114,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,114,97,119,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,115,101,116,76,97,121,111,117,116,40,108,97,121,111,117,116,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,32,124,124,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,67,111,110,102,105,103,40,123,10,32,32,32,32,32,32,32,32,46,46,46,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,99,111,110,102,105,103,40,41,44,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,99,114,101,97,116,101,67,111,114,101,76,97,121,111,117,116,40,108,97,121,111,117,116,44,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,125,10,32,32,32,32,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,32,123,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,87,97,115,109,76,111,97,100,101,114,46,115,101,116,87,97,115,109,85,114,108,40,117,114,108,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,97,114,116,32,97,32,116,119,101,101,110,32,97,110,105,109,97,116,105,111,110,32,98,101,116,119,101,101,110,32,116,119,111,32,102,114,97,109,101,32,118,97,108,117,101,115,32,119,105,116,104,32,99,117,115,116,111,109,32,101,97,115,105,110,103,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,102,114,97,109,101,32,45,32,83,116,97,114,116,105,110,103,32,102,114,97,109,101,32,118,97,108,117,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,100,117,114,97,116,105,111,110,32,45,32,68,117,114,97,116,105,111,110,32,111,102,32,116,104,101,32,116,119,101,101,110,32,105,110,32,115,101,99,111,110,100,115,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,119,101,101,110,32,119,97,115,32,115,116,97,114,116,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,116,119,101,101,110,40,102,114,97,109,101,44,32,100,117,114,97,116,105,111,110,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,32,61,32,91,48,44,32,48,44,32,49,44,32,49,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,86,101,99,116,111,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,118,97,108,32,111,102,32,101,97,115,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,101,97,115,105,110,103,86,101,99,116,111,114,46,112,117,115,104,95,98,97,99,107,40,118,97,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,116,119,101,101,110,40,102,114,97,109,101,44,32,100,117,114,97,116,105,111,110,44,32,101,97,115,105,110,103,86,101,99,116,111,114,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,97,114,116,32,97,32,116,119,101,101,110,32,97,110,105,109,97,116,105,111,110,32,116,111,32,97,32,115,112,101,99,105,102,105,99,32,109,97,114,107,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,109,97,114,107,101,114,32,45,32,84,104,101,32,109,97,114,107,101,114,32,110,97,109,101,32,116,111,32,116,119,101,101,110,32,116,111,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,119,101,101,110,32,119,97,115,32,115,116,97,114,116,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,116,119,101,101,110,84,111,77,97,114,107,101,114,40,109,97,114,107,101,114,44,32,100,117,114,97,116,105,111,110,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,32,61,32,91,48,44,32,48,44,32,49,44,32,49,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,97,115,105,110,103,86,101,99,116,111,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,86,101,99,116,111,114,70,108,111,97,116,40,41,59,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,118,97,108,32,111,102,32,101,97,115,105,110,103,41,32,123,10,32,32,32,32,32,32,32,32,101,97,115,105,110,103,86,101,99,116,111,114,46,112,117,115,104,95,98,97,99,107,40,118,97,108,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,116,119,101,101,110,84,111,77,97,114,107,101,114,40,109,97,114,107,101,114,44,32,100,117,114,97,116,105,111,110,44,32,101,97,115,105,110,103,86,101,99,116,111,114,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,46,103,101,116,40,48,41,32,63,63,32,48,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,46,103,101,116,40,49,41,32,63,63,32,48,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,119,105,100,116,104,44,10,32,32,32,32,32,32,32,32,104,101,105,103,104,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,79,114,105,101,110,116,101,100,32,66,111,117,110,100,105,110,103,32,66,111,120,32,40,79,66,66,41,32,112,111,105,110,116,115,32,111,102,32,97,32,108,97,121,101,114,32,98,121,32,105,116,115,32,110,97,109,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,108,97,121,101,114,78,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,108,97,121,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,65,110,32,97,114,114,97,121,32,111,102,32,56,32,110,117,109,98,101,114,115,32,114,101,112,114,101,115,101,110,116,105,110,103,32,52,32,112,111,105,110,116,115,32,40,120,44,121,41,32,111,102,32,116,104,101,32,79,66,66,32,105,110,32,99,108,111,99,107,119,105,115,101,32,111,114,100,101,114,32,115,116,97,114,116,105,110,103,32,102,114,111,109,32,116,111,112,45,108,101,102,116,10,32,32,32,32,32,42,32,32,32,32,32,32,32,32,32,32,91,120,48,44,32,121,48,44,32,120,49,44,32,121,49,44,32,120,50,44,32,121,50,44,32,120,51,44,32,121,51,93,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,64,101,120,97,109,112,108,101,10,32,32,32,32,32,42,32,96,96,96,116,121,112,101,115,99,114,105,112,116,10,32,32,32,32,32,42,32,47,47,32,68,114,97,119,32,97,32,112,111,108,121,103,111,110,32,97,114,111,117,110,100,32,116,104,101,32,108,97,121,101,114,32,39,76,97,121,101,114,32,49,39,10,32,32,32,32,32,42,32,100,111,116,76,111,116,116,105,101,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,39,114,101,110,100,101,114,39,44,32,40,41,32,61,62,32,123,10,32,32,32,32,32,42,32,32,32,99,111,110,115,116,32,111,98,98,80,111,105,110,116,115,32,61,32,100,111,116,76,111,116,116,105,101,46,103,101,116,76,97,121,101,114,66,111,117,110,100,105,110,103,66,111,120,40,39,76,97,121,101,114,32,49,39,41,59,10,32,32,32,32,32,42,10,32,32,32,32,32,42,32,32,32,105,102,32,40,111,98,98,80,111,105,110,116,115,41,32,123,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,98,101,103,105,110,80,97,116,104,40,41,59,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,109,111,118,101,84,111,40,111,98,98,80,111,105,110,116,115,91,48,93,44,32,111,98,98,80,111,105,110,116,115,91,49,93,41,59,32,47,47,32,70,105,114,115,116,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,108,105,110,101,84,111,40,111,98,98,80,111,105,110,116,115,91,50,93,44,32,111,98,98,80,111,105,110,116,115,91,51,93,41,59,32,47,47,32,83,101,99,111,110,100,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,108,105,110,101,84,111,40,111,98,98,80,111,105,110,116,115,91,52,93,44,32,111,98,98,80,111,105,110,116,115,91,53,93,41,59,32,47,47,32,84,104,105,114,100,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,108,105,110,101,84,111,40,111,98,98,80,111,105,110,116,115,91,54,93,44,32,111,98,98,80,111,105,110,116,115,91,55,93,41,59,32,47,47,32,70,111,117,114,116,104,32,112,111,105,110,116,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,99,108,111,115,101,80,97,116,104,40,41,59,10,32,32,32,32,32,42,32,32,32,32,32,99,111,110,116,101,120,116,46,115,116,114,111,107,101,40,41,59,10,32,32,32,32,32,42,32,32,32,125,10,32,32,32,32,32,42,32,125,41,59,10,32,32,32,32,32,42,32,96,96,96,10,32,32,32,32,32,42,47,10,32,32,32,32,103,101,116,76,97,121,101,114,66,111,117,110,100,105,110,103,66,111,120,40,108,97,121,101,114,78,97,109,101,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,98,111,117,110,100,115,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,103,101,116,76,97,121,101,114,66,111,117,110,100,115,40,108,97,121,101,114,78,97,109,101,41,59,10,32,32,32,32,32,32,105,102,32,40,33,98,111,117,110,100,115,41,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,105,102,32,40,98,111,117,110,100,115,46,115,105,122,101,40,41,32,33,61,61,32,56,41,32,114,101,116,117,114,110,32,118,111,105,100,32,48,59,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,105,110,116,115,32,61,32,91,93,59,10,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,56,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,112,111,105,110,116,115,46,112,117,115,104,40,98,111,117,110,100,115,46,103,101,116,40,105,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,112,111,105,110,116,115,59,10,32,32,32,32,125,10,32,32,32,32,115,116,97,116,105,99,32,116,114,97,110,115,102,111,114,109,84,104,101,109,101,84,111,76,111,116,116,105,101,83,108,111,116,115,40,116,104,101,109,101,44,32,115,108,111,116,115,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,63,46,116,114,97,110,115,102,111,114,109,84,104,101,109,101,84,111,76,111,116,116,105,101,83,108,111,116,115,40,116,104,101,109,101,44,32,115,108,111,116,115,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,47,32,35,114,101,103,105,111,110,32,83,116,97,116,101,32,77,97,99,104,105,110,101,10,32,32,32,32,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,67,97,108,108,98,97,99,107,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,97,114,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,34,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,111,112,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,34,32,125,41,59,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,32,48,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,67,117,115,116,111,109,69,118,101,110,116,40,40,101,118,101,110,116,78,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,34,44,32,101,118,101,110,116,78,97,109,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,40,40,105,110,112,117,116,78,97,109,101,44,32,111,108,100,86,97,108,117,101,44,32,110,101,119,86,97,108,117,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,32,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,40,40,105,110,112,117,116,78,97,109,101,44,32,111,108,100,86,97,108,117,101,44,32,110,101,119,86,97,108,117,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,32,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,40,40,105,110,112,117,116,78,97,109,101,44,32,111,108,100,86,97,108,117,101,44,32,110,101,119,86,97,108,117,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,32,105,110,112,117,116,78,97,109,101,44,32,110,101,119,86,97,108,117,101,44,32,111,108,100,86,97,108,117,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,73,110,112,117,116,70,105,114,101,100,40,40,105,110,112,117,116,78,97,109,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,34,44,32,105,110,112,117,116,78,97,109,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,84,114,97,110,115,105,116,105,111,110,40,40,102,114,111,109,83,116,97,116,101,44,32,116,111,83,116,97,116,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,34,44,32,102,114,111,109,83,116,97,116,101,44,32,116,111,83,116,97,116,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,97,116,101,69,110,116,101,114,101,100,40,40,115,116,97,116,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,34,44,32,115,116,97,116,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,83,116,97,116,101,69,120,105,116,40,40,115,116,97,116,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,34,44,32,115,116,97,116,101,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,46,115,101,116,79,110,69,114,114,111,114,40,40,101,114,114,111,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,34,44,32,101,114,114,111,114,32,125,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,109,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,67,97,108,108,98,97,99,107,83,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,79,98,115,101,114,118,101,114,40,41,59,10,32,32,32,32,32,32,115,109,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,46,115,101,116,79,110,77,101,115,115,97,103,101,40,40,109,101,115,115,97,103,101,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,41,32,123,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,109,101,115,115,97,103,101,46,115,116,97,114,116,115,87,105,116,104,40,34,79,112,101,110,85,114,108,58,32,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,104,97,110,100,108,101,79,112,101,110,85,114,108,40,109,101,115,115,97,103,101,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,101,118,101,110,116,77,97,110,97,103,101,114,46,100,105,115,112,97,116,99,104,40,123,32,116,121,112,101,58,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,34,44,32,109,101,115,115,97,103,101,32,125,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,117,98,115,99,114,105,98,101,40,115,109,67,97,108,108,98,97,99,107,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,83,117,98,115,99,114,105,98,101,40,115,109,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,125,10,32,32,32,32,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,72,97,110,100,108,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,85,110,115,117,98,115,99,114,105,98,101,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,46,100,101,108,101,116,101,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,79,98,115,101,114,118,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,76,111,97,100,32,97,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,98,121,32,73,68,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,45,32,84,104,101,32,73,68,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,116,111,32,108,111,97,100,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,108,111,97,100,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,76,111,97,100,32,97,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,102,114,111,109,32,100,97,116,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,32,45,32,84,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,100,97,116,97,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,108,111,97,100,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,124,124,32,33,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,59,10,32,32,32,32,32,32,105,102,32,40,108,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,111,97,100,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,99,111,110,102,105,103,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,99,111,110,102,105,103,32,45,32,84,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,99,111,110,102,105,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,67,111,110,102,105,103,40,99,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,32,61,32,99,111,110,102,105,103,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,97,114,116,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,115,116,97,114,116,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,32,61,61,61,32,110,117,108,108,32,124,124,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,61,61,61,32,110,117,108,108,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,114,101,79,112,101,110,85,114,108,32,61,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,99,114,101,97,116,101,68,101,102,97,117,108,116,79,112,101,110,85,114,108,80,111,108,105,99,121,40,41,59,10,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,111,112,101,110,85,114,108,80,111,108,105,99,121,32,61,32,116,104,105,115,46,95,115,116,97,116,101,77,97,99,104,105,110,101,67,111,110,102,105,103,46,111,112,101,110,85,114,108,80,111,108,105,99,121,59,10,32,32,32,32,32,32,32,32,105,102,32,40,111,112,101,110,85,114,108,80,111,108,105,99,121,32,38,38,32,116,121,112,101,111,102,32,111,112,101,110,85,114,108,80,111,108,105,99,121,46,114,101,113,117,105,114,101,85,115,101,114,73,110,116,101,114,97,99,116,105,111,110,32,61,61,61,32,34,98,111,111,108,101,97,110,34,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,114,101,79,112,101,110,85,114,108,46,114,101,113,117,105,114,101,85,115,101,114,73,110,116,101,114,97,99,116,105,111,110,32,61,32,111,112,101,110,85,114,108,80,111,108,105,99,121,46,114,101,113,117,105,114,101,85,115,101,114,73,110,116,101,114,97,99,116,105,111,110,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,111,112,101,110,85,114,108,80,111,108,105,99,121,63,46,119,104,105,116,101,108,105,115,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,111,114,101,79,112,101,110,85,114,108,46,119,104,105,116,101,108,105,115,116,32,61,32,110,101,119,32,95,68,111,116,76,111,116,116,105,101,46,95,119,97,115,109,77,111,100,117,108,101,46,86,101,99,116,111,114,83,116,114,105,110,103,40,41,59,10,32,32,32,32,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,117,114,108,32,111,102,32,111,112,101,110,85,114,108,80,111,108,105,99,121,46,119,104,105,116,101,108,105,115,116,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,114,101,79,112,101,110,85,114,108,46,119,104,105,116,101,108,105,115,116,46,112,117,115,104,95,98,97,99,107,40,117,114,108,41,59,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,114,116,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,99,111,114,101,79,112,101,110,85,114,108,41,59,10,32,32,32,32,32,32,105,102,32,40,115,116,97,114,116,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,116,114,117,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,97,114,116,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,115,116,97,114,116,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,116,111,112,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,119,97,115,32,115,116,111,112,112,101,100,32,115,117,99,99,101,115,115,102,117,108,108,121,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,102,97,108,115,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,111,112,112,101,100,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,41,59,10,32,32,32,32,32,32,105,102,32,40,115,116,111,112,112,101,100,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,79,98,115,101,114,118,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,105,115,83,116,97,116,101,77,97,99,104,105,110,101,82,117,110,110,105,110,103,32,61,32,102,97,108,115,101,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,105,115,80,108,97,121,105,110,103,40,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,115,116,111,112,65,110,105,109,97,116,105,111,110,76,111,111,112,40,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,115,116,111,112,112,101,100,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,117,115,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,117,115,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,97,116,117,115,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,117,115,40,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,101,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,101,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,67,117,114,114,101,110,116,83,116,97,116,101,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,67,117,114,114,101,110,116,83,116,97,116,101,40,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,97,99,116,105,118,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,73,68,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,97,99,116,105,118,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,73,68,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,65,99,116,105,118,101,73,100,40,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,97,99,116,105,118,101,83,116,97,116,101,77,97,99,104,105,110,101,73,100,40,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,79,118,101,114,114,105,100,101,32,116,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,101,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,32,45,32,84,104,101,32,115,116,97,116,101,32,116,111,32,111,118,101,114,114,105,100,101,32,116,111,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,105,109,109,101,100,105,97,116,101,32,45,32,87,104,101,116,104,101,114,32,116,111,32,105,109,109,101,100,105,97,116,101,108,121,32,116,114,97,110,115,105,116,105,111,110,32,116,111,32,116,104,101,32,115,116,97,116,101,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,116,114,117,101,32,105,102,32,116,104,101,32,115,116,97,116,101,32,111,118,101,114,114,105,100,101,32,119,97,115,32,115,117,99,99,101,115,115,102,117,108,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,83,116,97,116,101,40,115,116,97,116,101,44,32,105,109,109,101,100,105,97,116,101,32,61,32,102,97,108,115,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,67,117,114,114,101,110,116,83,116,97,116,101,40,115,116,97,116,101,44,32,105,109,109,101,100,105,97,116,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,115,112,101,99,105,102,105,99,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,98,121,32,73,68,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,45,32,84,104,101,32,73,68,32,111,102,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,116,111,32,103,101,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,100,97,116,97,32,97,115,32,97,32,115,116,114,105,110,103,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,103,101,116,83,116,97,116,101,77,97,99,104,105,110,101,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,32,63,63,32,34,34,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,116,104,101,32,108,105,115,116,32,111,102,32,115,116,97,116,101,32,109,97,99,104,105,110,101,32,108,105,115,116,101,110,101,114,115,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,65,114,114,97,121,32,111,102,32,108,105,115,116,101,110,101,114,32,110,97,109,101,115,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,70,114,97,109,101,119,111,114,107,83,101,116,117,112,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,91,93,59,10,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,46,115,105,122,101,40,41,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,101,110,101,114,115,46,112,117,115,104,40,108,105,115,116,101,110,101,114,115,86,101,99,116,111,114,46,103,101,116,40,105,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,108,105,115,116,101,110,101,114,115,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,97,32,98,111,111,108,101,97,110,32,105,110,112,117,116,32,118,97,108,117,101,32,102,111,114,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,98,111,111,108,101,97,110,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,118,97,108,117,101,32,45,32,84,104,101,32,98,111,111,108,101,97,110,32,118,97,108,117,101,32,116,111,32,115,101,116,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,97,32,110,117,109,101,114,105,99,32,105,110,112,117,116,32,118,97,108,117,101,32,102,111,114,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,110,117,109,101,114,105,99,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,118,97,108,117,101,32,45,32,84,104,101,32,110,117,109,101,114,105,99,32,118,97,108,117,101,32,116,111,32,115,101,116,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,83,101,116,32,97,32,115,116,114,105,110,103,32,105,110,112,117,116,32,118,97,108,117,101,32,102,111,114,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,118,97,108,117,101,32,45,32,84,104,101,32,115,116,114,105,110,103,32,118,97,108,117,101,32,116,111,32,115,101,116,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,32,63,63,32,102,97,108,115,101,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,98,111,111,108,101,97,110,32,105,110,112,117,116,32,118,97,108,117,101,32,102,114,111,109,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,98,111,111,108,101,97,110,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,98,111,111,108,101,97,110,32,118,97,108,117,101,32,111,114,32,117,110,100,101,102,105,110,101,100,32,105,102,32,110,111,116,32,102,111,117,110,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,110,117,109,101,114,105,99,32,105,110,112,117,116,32,118,97,108,117,101,32,102,114,111,109,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,110,117,109,101,114,105,99,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,110,117,109,101,114,105,99,32,118,97,108,117,101,32,111,114,32,117,110,100,101,102,105,110,101,100,32,105,102,32,110,111,116,32,102,111,117,110,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,32,115,116,114,105,110,103,32,105,110,112,117,116,32,118,97,108,117,101,32,102,114,111,109,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,115,116,114,105,110,103,32,105,110,112,117,116,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,115,116,114,105,110,103,32,118,97,108,117,101,32,111,114,32,117,110,100,101,102,105,110,101,100,32,105,102,32,110,111,116,32,102,111,117,110,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,71,101,116,32,97,108,108,32,116,104,101,32,105,110,112,117,116,115,32,111,102,32,116,104,101,32,99,117,114,114,101,110,116,32,115,116,97,116,101,32,109,97,99,104,105,110,101,46,32,82,101,116,117,114,110,115,32,116,104,101,32,107,101,121,32,110,97,109,101,44,32,102,111,108,108,111,119,101,100,32,98,121,32,105,116,39,115,32,116,121,112,101,32,97,115,32,97,32,115,116,114,105,110,103,46,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,65,110,32,97,114,114,97,121,32,111,102,32,105,110,112,117,116,32,107,101,121,115,32,102,111,108,108,111,119,101,100,32,98,121,32,105,116,39,115,32,116,121,112,101,32,97,116,32,110,43,49,46,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,73,110,112,117,116,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,33,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,41,32,114,101,116,117,114,110,32,91,93,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,112,117,116,115,86,101,99,116,111,114,32,61,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,73,110,112,117,116,115,40,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,112,117,116,115,32,61,32,91,93,59,10,32,32,32,32,32,32,102,111,114,32,40,108,101,116,32,105,32,61,32,48,59,32,105,32,60,32,105,110,112,117,116,115,86,101,99,116,111,114,46,115,105,122,101,40,41,59,32,105,32,43,61,32,49,41,32,123,10,32,32,32,32,32,32,32,32,105,110,112,117,116,115,46,112,117,115,104,40,105,110,112,117,116,115,86,101,99,116,111,114,46,103,101,116,40,105,41,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,112,117,116,115,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,70,105,114,101,32,97,110,32,101,118,101,110,116,32,105,110,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,110,97,109,101,32,45,32,84,104,101,32,110,97,109,101,32,111,102,32,116,104,101,32,101,118,101,110,116,32,116,111,32,102,105,114,101,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,40,110,97,109,101,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,40,110,97,109,101,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,99,108,105,99,107,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,99,108,105,99,107,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,99,108,105,99,107,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,117,112,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,100,111,119,110,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,109,111,118,101,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,101,110,116,101,114,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,47,42,42,10,32,32,32,32,32,42,32,64,101,120,112,101,114,105,109,101,110,116,97,108,10,32,32,32,32,32,42,32,80,111,115,116,32,97,32,112,111,105,110,116,101,114,32,101,120,105,116,32,101,118,101,110,116,32,116,111,32,116,104,101,32,115,116,97,116,101,32,109,97,99,104,105,110,101,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,120,32,45,32,84,104,101,32,120,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,112,97,114,97,109,32,121,32,45,32,84,104,101,32,121,32,99,111,111,114,100,105,110,97,116,101,32,111,102,32,116,104,101,32,112,111,105,110,116,101,114,10,32,32,32,32,32,42,32,64,114,101,116,117,114,110,115,32,84,104,101,32,101,118,101,110,116,32,114,101,115,117,108,116,32,111,114,32,117,110,100,101,102,105,110,101,100,10,32,32,32,32,32,42,47,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,32,123,10,32,32,32,32,32,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,63,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,10,32,32,32,32,95,111,110,67,108,105,99,107,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,85,112,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,68,111,119,110,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,77,111,118,101,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,69,110,116,101,114,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,111,110,80,111,105,110,116,101,114,76,101,97,118,101,40,101,118,101,110,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,111,115,105,116,105,111,110,32,61,32,103,101,116,80,111,105,110,116,101,114,80,111,115,105,116,105,111,110,40,101,118,101,110,116,41,59,10,32,32,32,32,32,32,105,102,32,40,112,111,115,105,116,105,111,110,41,32,123,10,32,32,32,32,32,32,32,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,112,111,115,105,116,105,111,110,46,120,44,32,112,111,115,105,116,105,111,110,46,121,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,115,101,116,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,32,38,38,32,116,104,105,115,46,95,100,111,116,76,111,116,116,105,101,67,111,114,101,32,33,61,61,32,110,117,108,108,32,38,38,32,116,104,105,115,46,105,115,76,111,97,100,101,100,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,108,105,115,116,101,110,101,114,115,32,61,32,116,104,105,115,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,67,108,105,99,107,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,32,61,32,116,104,105,115,46,95,111,110,67,108,105,99,107,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,99,108,105,99,107,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,85,112,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,85,112,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,117,112,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,68,111,119,110,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,68,111,119,110,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,100,111,119,110,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,77,111,118,101,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,77,111,118,101,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,109,111,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,69,110,116,101,114,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,69,110,116,101,114,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,101,110,116,101,114,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,108,105,115,116,101,110,101,114,115,46,105,110,99,108,117,100,101,115,40,34,80,111,105,110,116,101,114,69,120,105,116,34,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,32,61,32,116,104,105,115,46,95,111,110,80,111,105,110,116,101,114,76,101,97,118,101,46,98,105,110,100,40,116,104,105,115,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,108,101,97,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,41,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,95,99,108,101,97,110,117,112,83,116,97,116,101,77,97,99,104,105,110,101,76,105,115,116,101,110,101,114,115,40,41,32,123,10,32,32,32,32,32,32,105,102,32,40,73,83,95,66,82,79,87,83,69,82,32,38,38,32,116,104,105,115,46,95,99,97,110,118,97,115,32,105,110,115,116,97,110,99,101,111,102,32,72,84,77,76,67,97,110,118,97,115,69,108,101,109,101,110,116,41,32,123,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,99,108,105,99,107,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,67,108,105,99,107,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,117,112,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,85,112,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,100,111,119,110,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,68,111,119,110,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,109,111,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,77,111,118,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,101,110,116,101,114,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,69,110,116,101,114,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,105,102,32,40,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,41,32,123,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,99,97,110,118,97,115,46,114,101,109,111,118,101,69,118,101,110,116,76,105,115,116,101,110,101,114,40,34,112,111,105,110,116,101,114,108,101,97,118,101,34,44,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,41,59,10,32,32,32,32,32,32,32,32,32,32,116,104,105,115,46,95,98,111,117,110,100,79,110,80,111,105,110,116,101,114,76,101,97,118,101,32,61,32,110,117,108,108,59,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,32,32,47,47,32,35,101,110,100,114,101,103,105,111,110,10,32,32,125,59,10,32,32,95,95,112,117,98,108,105,99,70,105,101,108,100,40,95,68,111,116,76,111,116,116,105,101,44,32,34,95,119,97,115,109,77,111,100,117,108,101,34,44,32,110,117,108,108,41,59,10,32,32,118,97,114,32,68,111,116,76,111,116,116,105,101,32,61,32,95,68,111,116,76,111,116,116,105,101,59,10,10,32,32,47,47,32,115,114,99,47,119,111,114,107,101,114,47,100,111,116,108,111,116,116,105,101,46,119,111,114,107,101,114,46,116,115,10,32,32,118,97,114,32,105,110,115,116,97,110,99,101,115,77,97,112,32,61,32,47,42,32,64,95,95,80,85,82,69,95,95,32,42,47,32,110,101,119,32,77,97,112,40,41,59,10,32,32,118,97,114,32,101,118,101,110,116,72,97,110,100,108,101,114,77,97,112,32,61,32,123,10,32,32,32,32,114,101,97,100,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,82,101,97,100,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,99,111,109,112,108,101,116,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,67,111,109,112,108,101,116,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,97,100,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,97,100,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,69,114,114,111,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,97,100,69,114,114,111,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,97,100,69,114,114,111,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,114,101,110,100,101,114,69,114,114,111,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,69,114,114,111,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,82,101,110,100,101,114,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,114,101,110,100,101,114,69,114,114,111,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,111,112,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,111,112,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,76,111,111,112,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,108,111,111,112,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,108,97,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,108,97,121,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,80,108,97,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,112,108,97,121,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,97,117,115,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,112,97,117,115,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,80,97,117,115,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,112,97,117,115,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,111,112,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,111,112,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,111,112,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,111,112,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,97,109,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,70,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,102,114,97,109,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,114,101,110,100,101,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,82,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,114,101,110,100,101,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,101,101,122,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,101,101,122,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,70,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,102,114,101,101,122,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,117,110,102,114,101,101,122,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,117,110,102,114,101,101,122,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,85,110,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,117,110,102,114,101,101,122,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,100,101,115,116,114,111,121,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,100,101,115,116,114,111,121,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,68,101,115,116,114,111,121,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,100,101,115,116,114,111,121,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,47,47,32,101,115,108,105,110,116,45,100,105,115,97,98,108,101,45,110,101,120,116,45,108,105,110,101,32,110,111,45,115,101,99,114,101,116,115,47,110,111,45,115,101,99,114,101,116,115,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,69,118,101,110,116,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,69,118,101,110,116,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,58,32,40,105,110,115,116,97,110,99,101,73,100,41,32,61,62,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,32,61,32,101,118,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,34,34,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,34,111,110,83,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,34,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,58,32,123,10,32,32,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,44,10,32,32,32,32,32,32,32,32,32,32,101,118,101,110,116,58,32,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,99,111,109,109,97,110,100,115,32,61,32,123,10,32,32,32,32,115,101,116,84,114,97,110,115,102,111,114,109,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,84,114,97,110,115,102,111,114,109,40,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,116,114,97,110,115,102,111,114,109,41,59,10,32,32,32,32,125,44,10,32,32,32,32,103,101,116,84,114,97,110,115,102,111,114,109,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,103,101,116,84,114,97,110,115,102,111,114,109,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,103,101,116,68,111,116,76,111,116,116,105,101,73,110,115,116,97,110,99,101,83,116,97,116,101,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,32,61,32,123,10,32,32,32,32,32,32,32,32,108,111,111,112,67,111,117,110,116,58,32,105,110,115,116,97,110,99,101,46,108,111,111,112,67,111,117,110,116,44,10,32,32,32,32,32,32,32,32,105,115,76,111,97,100,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,76,111,97,100,101,100,44,10,32,32,32,32,32,32,32,32,105,115,80,97,117,115,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,80,97,117,115,101,100,44,10,32,32,32,32,32,32,32,32,105,115,80,108,97,121,105,110,103,58,32,105,110,115,116,97,110,99,101,46,105,115,80,108,97,121,105,110,103,44,10,32,32,32,32,32,32,32,32,105,115,83,116,111,112,112,101,100,58,32,105,110,115,116,97,110,99,101,46,105,115,83,116,111,112,112,101,100,44,10,32,32,32,32,32,32,32,32,105,115,70,114,111,122,101,110,58,32,105,110,115,116,97,110,99,101,46,105,115,70,114,111,122,101,110,44,10,32,32,32,32,32,32,32,32,108,111,111,112,58,32,105,110,115,116,97,110,99,101,46,108,111,111,112,44,10,32,32,32,32,32,32,32,32,109,111,100,101,58,32,105,110,115,116,97,110,99,101,46,109,111,100,101,44,10,32,32,32,32,32,32,32,32,115,112,101,101,100,58,32,105,110,115,116,97,110,99,101,46,115,112,101,101,100,44,10,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,70,114,97,109,101,58,32,105,110,115,116,97,110,99,101,46,99,117,114,114,101,110,116,70,114,97,109,101,44,10,32,32,32,32,32,32,32,32,116,111,116,97,108,70,114,97,109,101,115,58,32,105,110,115,116,97,110,99,101,46,116,111,116,97,108,70,114,97,109,101,115,44,10,32,32,32,32,32,32,32,32,100,117,114,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,100,117,114,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,114,101,110,100,101,114,67,111,110,102,105,103,58,32,105,110,115,116,97,110,99,101,46,114,101,110,100,101,114,67,111,110,102,105,103,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,58,32,105,110,115,116,97,110,99,101,46,109,97,114,107,101,114,44,10,32,32,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,105,110,115,116,97,110,99,101,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,44,10,32,32,32,32,32,32,32,32,109,97,114,107,101,114,115,58,32,105,110,115,116,97,110,99,101,46,109,97,114,107,101,114,115,40,41,44,10,32,32,32,32,32,32,32,32,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,58,32,105,110,115,116,97,110,99,101,46,97,99,116,105,118,101,65,110,105,109,97,116,105,111,110,73,100,44,10,32,32,32,32,32,32,32,32,97,99,116,105,118,101,84,104,101,109,101,73,100,58,32,105,110,115,116,97,110,99,101,46,97,99,116,105,118,101,84,104,101,109,101,73,100,44,10,32,32,32,32,32,32,32,32,97,117,116,111,112,108,97,121,58,32,105,110,115,116,97,110,99,101,46,97,117,116,111,112,108,97,121,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,58,32,105,110,115,116,97,110,99,101,46,115,101,103,109,101,110,116,44,10,32,32,32,32,32,32,32,32,108,97,121,111,117,116,58,32,105,110,115,116,97,110,99,101,46,108,97,121,111,117,116,44,10,32,32,32,32,32,32,32,32,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,58,32,105,110,115,116,97,110,99,101,46,115,101,103,109,101,110,116,68,117,114,97,116,105,111,110,44,10,32,32,32,32,32,32,32,32,105,115,82,101,97,100,121,58,32,105,110,115,116,97,110,99,101,46,105,115,82,101,97,100,121,44,10,32,32,32,32,32,32,32,32,109,97,110,105,102,101,115,116,58,32,105,110,115,116,97,110,99,101,46,109,97,110,105,102,101,115,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,116,97,116,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,76,97,121,111,117,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,97,121,111,117,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,108,97,121,111,117,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,76,97,121,111,117,116,40,108,97,121,111,117,116,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,76,105,115,116,101,110,101,114,115,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,77,97,99,104,105,110,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,76,111,97,100,68,97,116,97,40,115,116,97,116,101,77,97,99,104,105,110,101,68,97,116,97,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,67,108,105,99,107,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,85,112,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,68,111,119,110,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,77,111,118,101,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,110,116,101,114,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,80,111,115,116,80,111,105,110,116,101,114,69,120,105,116,69,118,101,110,116,40,120,44,32,121,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,118,97,108,117,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,118,97,108,117,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,118,97,108,117,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,118,97,108,117,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,67,111,110,102,105,103,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,99,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,67,111,110,102,105,103,40,99,111,110,102,105,103,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,118,97,108,117,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,118,97,108,117,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,83,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,44,32,118,97,108,117,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,78,117,109,101,114,105,99,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,66,111,111,108,101,97,110,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,114,105,110,103,73,110,112,117,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,73,110,112,117,116,115,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,73,110,112,117,116,115,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,110,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,110,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,70,105,114,101,69,118,101,110,116,40,110,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,97,116,117,115,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,83,116,97,116,117,115,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,67,117,114,114,101,110,116,83,116,97,116,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,67,117,114,114,101,110,116,83,116,97,116,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,65,99,116,105,118,101,73,100,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,65,99,116,105,118,101,73,100,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,83,116,97,116,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,109,109,101,100,105,97,116,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,109,109,101,100,105,97,116,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,79,118,101,114,114,105,100,101,83,116,97,116,101,40,115,116,97,116,101,44,32,105,109,109,101,100,105,97,116,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,116,97,116,101,77,97,99,104,105,110,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,116,97,116,101,77,97,99,104,105,110,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,116,97,116,101,77,97,99,104,105,110,101,71,101,116,40,115,116,97,116,101,77,97,99,104,105,110,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,99,114,101,97,116,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,99,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,102,32,40,105,110,115,116,97,110,99,101,115,77,97,112,46,104,97,115,40,105,110,115,116,97,110,99,101,73,100,41,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,97,108,114,101,97,100,121,32,101,120,105,115,116,115,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,110,101,119,32,68,111,116,76,111,116,116,105,101,40,99,111,110,102,105,103,41,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,119,105,100,116,104,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,115,77,97,112,46,115,101,116,40,105,110,115,116,97,110,99,101,73,100,44,32,105,110,115,116,97,110,99,101,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,101,118,101,110,116,115,32,61,32,91,10,32,32,32,32,32,32,32,32,34,99,111,109,112,108,101,116,101,34,44,10,32,32,32,32,32,32,32,32,34,102,114,97,109,101,34,44,10,32,32,32,32,32,32,32,32,34,108,111,97,100,34,44,10,32,32,32,32,32,32,32,32,34,108,111,97,100,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,34,114,101,110,100,101,114,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,34,108,111,111,112,34,44,10,32,32,32,32,32,32,32,32,34,112,97,117,115,101,34,44,10,32,32,32,32,32,32,32,32,34,112,108,97,121,34,44,10,32,32,32,32,32,32,32,32,34,115,116,111,112,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,116,114,111,121,34,44,10,32,32,32,32,32,32,32,32,34,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,34,117,110,102,114,101,101,122,101,34,44,10,32,32,32,32,32,32,32,32,34,114,101,110,100,101,114,34,44,10,32,32,32,32,32,32,32,32,34,114,101,97,100,121,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,114,116,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,111,112,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,84,114,97,110,115,105,116,105,111,110,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,110,116,101,114,101,100,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,97,116,101,69,120,105,116,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,67,117,115,116,111,109,69,118,101,110,116,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,69,114,114,111,114,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,66,111,111,108,101,97,110,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,78,117,109,101,114,105,99,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,83,116,114,105,110,103,73,110,112,117,116,86,97,108,117,101,67,104,97,110,103,101,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,112,117,116,70,105,114,101,100,34,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,77,97,99,104,105,110,101,73,110,116,101,114,110,97,108,77,101,115,115,97,103,101,34,10,32,32,32,32,32,32,93,59,10,32,32,32,32,32,32,101,118,101,110,116,115,46,102,111,114,69,97,99,104,40,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,101,118,101,110,116,44,32,101,118,101,110,116,72,97,110,100,108,101,114,77,97,112,91,101,118,101,110,116,93,40,105,110,115,116,97,110,99,101,73,100,41,41,59,10,32,32,32,32,32,32,125,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,105,110,115,116,97,110,99,101,73,100,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,100,101,115,116,114,111,121,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,114,101,116,117,114,110,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,100,101,115,116,114,111,121,40,41,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,115,77,97,112,46,100,101,108,101,116,101,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,102,114,101,101,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,102,114,101,101,122,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,99,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,99,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,108,111,97,100,40,99,111,110,102,105,103,41,59,10,32,32,32,32,125,44,10,32,32,32,32,108,111,97,100,65,110,105,109,97,116,105,111,110,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,97,110,105,109,97,116,105,111,110,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,97,110,105,109,97,116,105,111,110,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,108,111,97,100,65,110,105,109,97,116,105,111,110,40,97,110,105,109,97,116,105,111,110,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,84,104,101,109,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,116,104,101,109,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,84,104,101,109,101,40,116,104,101,109,101,73,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,84,104,101,109,101,68,97,116,97,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,116,104,101,109,101,68,97,116,97,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,116,104,101,109,101,68,97,116,97,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,84,104,101,109,101,68,97,116,97,40,116,104,101,109,101,68,97,116,97,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,97,117,115,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,97,117,115,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,112,108,97,121,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,112,108,97,121,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,114,101,115,105,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,104,101,105,103,104,116,32,61,32,104,101,105,103,104,116,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,99,97,110,118,97,115,46,119,105,100,116,104,32,61,32,119,105,100,116,104,59,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,114,101,115,105,122,101,40,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,66,97,99,107,103,114,111,117,110,100,67,111,108,111,114,40,98,97,99,107,103,114,111,117,110,100,67,111,108,111,114,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,70,114,97,109,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,102,114,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,70,114,97,109,101,40,102,114,97,109,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,77,111,100,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,111,100,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,109,111,100,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,77,111,100,101,40,109,111,100,101,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,110,100,101,114,67,111,110,102,105,103,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,114,101,110,100,101,114,67,111,110,102,105,103,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,82,101,110,100,101,114,67,111,110,102,105,103,40,114,101,110,100,101,114,67,111,110,102,105,103,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,83,101,103,109,101,110,116,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,101,103,109,101,110,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,101,103,109,101,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,83,101,103,109,101,110,116,40,115,101,103,109,101,110,116,91,48,93,44,32,115,101,103,109,101,110,116,91,49,93,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,83,112,101,101,100,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,115,112,101,101,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,115,112,101,101,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,83,112,101,101,100,40,115,112,101,101,100,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,85,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,40,117,115,101,70,114,97,109,101,73,110,116,101,114,112,111,108,97,116,105,111,110,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,87,97,115,109,85,114,108,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,68,111,116,76,111,116,116,105,101,46,115,101,116,87,97,115,109,85,114,108,40,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,117,114,108,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,116,111,112,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,116,111,112,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,117,110,102,114,101,101,122,101,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,117,110,102,114,101,101,122,101,40,41,59,10,32,32,32,32,125,44,10,32,32,32,32,116,119,101,101,110,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,102,114,97,109,101,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,102,114,97,109,101,59,10,32,32,32,32,32,32,99,111,110,115,116,32,100,117,114,97,116,105,111,110,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,100,117,114,97,116,105,111,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,116,119,101,101,110,40,102,114,97,109,101,44,32,100,117,114,97,116,105,111,110,41,59,10,32,32,32,32,125,44,10,32,32,32,32,116,119,101,101,110,84,111,77,97,114,107,101,114,58,32,40,114,101,113,117,101,115,116,41,32,61,62,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,109,97,114,107,101,114,59,10,32,32,32,32,32,32,99,111,110,115,116,32,100,117,114,97,116,105,111,110,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,100,117,114,97,116,105,111,110,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,116,119,101,101,110,84,111,77,97,114,107,101,114,40,109,97,114,107,101,114,44,32,100,117,114,97,116,105,111,110,41,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,86,105,101,119,112,111,114,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,120,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,120,59,10,32,32,32,32,32,32,99,111,110,115,116,32,121,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,121,59,10,32,32,32,32,32,32,99,111,110,115,116,32,119,105,100,116,104,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,119,105,100,116,104,59,10,32,32,32,32,32,32,99,111,110,115,116,32,104,101,105,103,104,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,104,101,105,103,104,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,114,101,116,117,114,110,32,105,110,115,116,97,110,99,101,46,115,101,116,86,105,101,119,112,111,114,116,40,120,44,32,121,44,32,119,105,100,116,104,44,32,104,101,105,103,104,116,41,59,10,32,32,32,32,125,44,10,32,32,32,32,97,110,105,109,97,116,105,111,110,83,105,122,101,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,99,111,110,115,116,32,123,32,104,101,105,103,104,116,44,32,119,105,100,116,104,32,125,32,61,32,105,110,115,116,97,110,99,101,46,97,110,105,109,97,116,105,111,110,83,105,122,101,40,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,104,101,105,103,104,116,44,10,32,32,32,32,32,32,32,32,119,105,100,116,104,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,77,97,114,107,101,114,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,109,97,114,107,101,114,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,109,97,114,107,101,114,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,77,97,114,107,101,114,40,109,97,114,107,101,114,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,76,111,111,112,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,111,112,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,108,111,111,112,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,76,111,111,112,40,108,111,111,112,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,44,10,32,32,32,32,115,101,116,76,111,111,112,67,111,117,110,116,40,114,101,113,117,101,115,116,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,73,100,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,105,110,115,116,97,110,99,101,73,100,59,10,32,32,32,32,32,32,99,111,110,115,116,32,108,111,111,112,67,111,117,110,116,32,61,32,114,101,113,117,101,115,116,46,112,97,114,97,109,115,46,108,111,111,112,67,111,117,110,116,59,10,32,32,32,32,32,32,99,111,110,115,116,32,105,110,115,116,97,110,99,101,32,61,32,105,110,115,116,97,110,99,101,115,77,97,112,46,103,101,116,40,105,110,115,116,97,110,99,101,73,100,41,59,10,32,32,32,32,32,32,105,102,32,40,33,105,110,115,116,97,110,99,101,41,32,123,10,32,32,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,73,110,115,116,97,110,99,101,32,119,105,116,104,32,105,100,32,36,123,105,110,115,116,97,110,99,101,73,100,125,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,96,41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,32,32,105,110,115,116,97,110,99,101,46,115,101,116,76,111,111,112,67,111,117,110,116,40,108,111,111,112,67,111,117,110,116,41,59,10,32,32,32,32,32,32,114,101,116,117,114,110,32,123,10,32,32,32,32,32,32,32,32,115,117,99,99,101,115,115,58,32,116,114,117,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,102,117,110,99,116,105,111,110,32,101,120,101,99,117,116,101,67,111,109,109,97,110,100,40,114,112,99,82,101,113,117,101,115,116,41,32,123,10,32,32,32,32,99,111,110,115,116,32,109,101,116,104,111,100,32,61,32,114,112,99,82,101,113,117,101,115,116,46,109,101,116,104,111,100,59,10,32,32,32,32,105,102,32,40,116,121,112,101,111,102,32,99,111,109,109,97,110,100,115,91,109,101,116,104,111,100,93,32,61,61,61,32,34,102,117,110,99,116,105,111,110,34,41,32,123,10,32,32,32,32,32,32,114,101,116,117,114,110,32,99,111,109,109,97,110,100,115,91,109,101,116,104,111,100,93,40,114,112,99,82,101,113,117,101,115,116,41,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,116,104,114,111,119,32,110,101,119,32,69,114,114,111,114,40,96,77,101,116,104,111,100,32,36,123,109,101,116,104,111,100,125,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,105,110,32,99,111,109,109,97,110,100,115,46,96,41,59,10,32,32,32,32,125,10,32,32,125,10,32,32,115,101,108,102,46,111,110,109,101,115,115,97,103,101,32,61,32,40,101,118,101,110,116,41,32,61,62,32,123,10,32,32,32,32,116,114,121,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,117,108,116,32,61,32,101,120,101,99,117,116,101,67,111,109,109,97,110,100,40,101,118,101,110,116,46,100,97,116,97,41,59,10,32,32,32,32,32,32,99,111,110,115,116,32,114,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,101,118,101,110,116,46,100,97,116,97,46,105,100,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,101,118,101,110,116,46,100,97,116,97,46,109,101,116,104,111,100,44,10,32,32,32,32,32,32,32,32,114,101,115,117,108,116,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,114,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,32,99,97,116,99,104,32,40,101,114,114,111,114,41,32,123,10,32,32,32,32,32,32,99,111,110,115,116,32,101,114,114,111,114,82,101,115,112,111,110,115,101,32,61,32,123,10,32,32,32,32,32,32,32,32,105,100,58,32,101,118,101,110,116,46,100,97,116,97,46,105,100,44,10,32,32,32,32,32,32,32,32,109,101,116,104,111,100,58,32,101,118,101,110,116,46,100,97,116,97,46,109,101,116,104,111,100,44,10,32,32,32,32,32,32,32,32,101,114,114,111,114,58,32,101,114,114,111,114,46,109,101,115,115,97,103,101,10,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,115,101,108,102,46,112,111,115,116,77,101,115,115,97,103,101,40,101,114,114,111,114,82,101,115,112,111,110,115,101,41,59,10,32,32,32,32,125,10,32,32,125,59,10,32,32,118,97,114,32,100,117,109,109,121,32,61,32,34,34,59,10,32,32,118,97,114,32,100,111,116,108,111,116,116,105,101,95,119,111,114,107,101,114,95,100,101,102,97,117,108,116,32,61,32,100,117,109,109,121,59,10,125,41,40,41,59,10])],{type:"application/javascript"}),e=URL.createObjectURL(n),t=new Worker(e);return URL.revokeObjectURL(e),t}},Nx=Fx,Bx=class{constructor(){Q1(this,"_workers",new Map),Q1(this,"_animationWorkerMap",new Map)}getWorker(n){return this._workers.has(n)||this._workers.set(n,new Nx),this._workers.get(n)}assignAnimationToWorker(n,e){this._animationWorkerMap.set(n,e)}unassignAnimationFromWorker(n){this._animationWorkerMap.delete(n)}sendMessage(n,e,t){this.getWorker(n).postMessage(e,t||[])}terminateWorker(n){let e=this._workers.get(n);e&&(e.terminate(),this._workers.delete(n))}};function il(n,e){if(n instanceof HTMLCanvasElement){let{height:t,width:i}=n.getBoundingClientRect();if(t!==0&&i!==0)return{width:i*e,height:t*e}}return{width:n.width,height:n.height}}function rl(){return Date.now().toString(36)+Math.random().toString(36).substr(2,9)}var sl=class Ut{constructor(e){Q1(this,"_eventManager",new c5),Q1(this,"_id"),Q1(this,"_worker"),Q1(this,"_canvas"),Q1(this,"_dotLottieInstanceState",{loopCount:0,markers:[],autoplay:!1,backgroundColor:"",currentFrame:0,duration:0,loop:!1,mode:"forward",segment:[0,0],segmentDuration:0,speed:1,totalFrames:0,isLoaded:!1,isPlaying:!1,isPaused:!1,isStopped:!0,isFrozen:!1,useFrameInterpolation:!1,renderConfig:{devicePixelRatio:Nt()},activeAnimationId:"",activeThemeId:"",layout:void 0,marker:void 0,isReady:!1,manifest:null}),Q1(this,"_created",!1),Q1(this,"_boundOnClick",null),Q1(this,"_boundOnPointerUp",null),Q1(this,"_boundOnPointerDown",null),Q1(this,"_boundOnPointerMove",null),Q1(this,"_boundOnPointerEnter",null),Q1(this,"_boundOnPointerLeave",null),this._canvas=e.canvas,this._id=`dotlottie-${rl()}`;let t=e.workerId||"defaultWorker";this._worker=Ut._workerManager.getWorker(t),Ut._workerManager.assignAnimationToWorker(this._id,t),Ut._wasmUrl&&this._sendMessage("setWasmUrl",{url:Ut._wasmUrl}),this._create({...e,renderConfig:{...e.renderConfig,devicePixelRatio:e.renderConfig?.devicePixelRatio||Nt(),freezeOnOffscreen:e.renderConfig?.freezeOnOffscreen??!0}}),this._worker.addEventListener("message",this._handleWorkerEvent.bind(this))}async _handleWorkerEvent(e){let t=e.data;if(!t.id&&(t.method==="onLoad"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event),Y2&&this._canvas instanceof HTMLCanvasElement&&(this._dotLottieInstanceState.renderConfig.freezeOnOffscreen&&(K3.observe(this._canvas,this),I0(this._canvas)||await this.freeze()),this._dotLottieInstanceState.renderConfig.autoResize&&Z3.observe(this._canvas,this))),t.method==="onComplete"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onDestroy"&&t.result.instanceId===this._id&&this._eventManager.dispatch(t.result.event),t.method==="onUnfreeze"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._dotLottieInstanceState.isFrozen=!1,this._eventManager.dispatch(t.result.event)),t.method==="onFrame"&&t.result.instanceId===this._id&&(this._dotLottieInstanceState.currentFrame=t.result.event.currentFrame,this._eventManager.dispatch(t.result.event)),t.method==="onRender"&&t.result.instanceId===this._id&&this._eventManager.dispatch(t.result.event),t.method==="onFreeze"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onPause"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onPlay"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStop"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onLoadError"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onRenderError"&&t.result.instanceId===this._id&&this._eventManager.dispatch(t.result.event),t.method==="onReady"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onLoop"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStart"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._setupStateMachineListeners(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStop"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._cleanupStateMachineListeners(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineTransition"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStateEntered"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStateExit"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineCustomEvent"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineError"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineBooleanInputValueChange"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineNumericInputValueChange"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineStringInputValueChange"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineInputFired"&&t.result.instanceId===this._id&&(await this._updateDotLottieInstanceState(),this._eventManager.dispatch(t.result.event)),t.method==="onStateMachineInternalMessage"&&t.result.instanceId===this._id)){await this._updateDotLottieInstanceState();let i=t.result.event;i.message.startsWith("OpenUrl: ")&&u5(i.message)}}async _create(e){let t;this._canvas instanceof HTMLCanvasElement?t=this._canvas.transferControlToOffscreen():t=this._canvas;let{instanceId:i}=await this._sendMessage("create",{instanceId:this._id,config:{...e,canvas:t},...il(this._canvas,e.renderConfig?.devicePixelRatio||Nt())},[t]);if(i!==this._id)throw new Error("Instance ID mismatch");this._created=!0,await this._updateDotLottieInstanceState()}get loopCount(){return this._dotLottieInstanceState.loopCount}get isLoaded(){return this._dotLottieInstanceState.isLoaded}get isPlaying(){return this._dotLottieInstanceState.isPlaying}get isPaused(){return this._dotLottieInstanceState.isPaused}get isStopped(){return this._dotLottieInstanceState.isStopped}get currentFrame(){return this._dotLottieInstanceState.currentFrame}get isFrozen(){return this._dotLottieInstanceState.isFrozen}get segmentDuration(){return this._dotLottieInstanceState.segmentDuration}get totalFrames(){return this._dotLottieInstanceState.totalFrames}get segment(){return this._dotLottieInstanceState.segment}get speed(){return this._dotLottieInstanceState.speed}get duration(){return this._dotLottieInstanceState.duration}get isReady(){return this._dotLottieInstanceState.isReady}get mode(){return this._dotLottieInstanceState.mode}get canvas(){return this._canvas}get autoplay(){return this._dotLottieInstanceState.autoplay}get backgroundColor(){return this._dotLottieInstanceState.backgroundColor}get loop(){return this._dotLottieInstanceState.loop}get useFrameInterpolation(){return this._dotLottieInstanceState.useFrameInterpolation}get renderConfig(){return this._dotLottieInstanceState.renderConfig}get manifest(){return this._dotLottieInstanceState.manifest}get activeAnimationId(){return this._dotLottieInstanceState.activeAnimationId}get marker(){return this._dotLottieInstanceState.marker}get activeThemeId(){return this._dotLottieInstanceState.activeThemeId}get layout(){return this._dotLottieInstanceState.layout}async play(){this._created&&(await this._sendMessage("play",{instanceId:this._id}),await this._updateDotLottieInstanceState(),Y2&&this._canvas instanceof HTMLCanvasElement&&this._dotLottieInstanceState.renderConfig.freezeOnOffscreen&&!I0(this._canvas)&&await this.freeze())}async pause(){this._created&&(await this._sendMessage("pause",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async stop(){this._created&&(await this._sendMessage("stop",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async setSpeed(e){this._created&&(await this._sendMessage("setSpeed",{instanceId:this._id,speed:e}),await this._updateDotLottieInstanceState())}async setMode(e){this._created&&(await this._sendMessage("setMode",{instanceId:this._id,mode:e}),await this._updateDotLottieInstanceState())}async setFrame(e){this._created&&(await this._sendMessage("setFrame",{frame:e,instanceId:this._id}),await this._updateDotLottieInstanceState())}async setSegment(e,t){this._created&&(await this._sendMessage("setSegment",{instanceId:this._id,segment:[e,t]}),await this._updateDotLottieInstanceState())}async setRenderConfig(e){if(!this._created)return;let{devicePixelRatio:t,freezeOnOffscreen:i,quality:r,...s}=e;await this._sendMessage("setRenderConfig",{instanceId:this._id,renderConfig:{...this._dotLottieInstanceState.renderConfig,...s,devicePixelRatio:t||Nt(),freezeOnOffscreen:i??!0,...r!==void 0&&{quality:r}}}),await this._updateDotLottieInstanceState(),Y2&&this._canvas instanceof HTMLCanvasElement&&(this._dotLottieInstanceState.renderConfig.autoResize?Z3.observe(this._canvas,this):Z3.unobserve(this._canvas),this._dotLottieInstanceState.renderConfig.freezeOnOffscreen?(K3.observe(this._canvas,this),I0(this._canvas)||await this.freeze()):(K3.unobserve(this._canvas),this._dotLottieInstanceState.isFrozen&&await this.unfreeze()))}async setUseFrameInterpolation(e){this._created&&(await this._sendMessage("setUseFrameInterpolation",{instanceId:this._id,useFrameInterpolation:e}),await this._updateDotLottieInstanceState())}async setTheme(e){if(!this._created)return!1;let t=this._sendMessage("setTheme",{instanceId:this._id,themeId:e});return await this._updateDotLottieInstanceState(),t}async load(e){this._created&&(await this._sendMessage("load",{config:e,instanceId:this._id}),await this._updateDotLottieInstanceState())}async setLoop(e){this._created&&(await this._sendMessage("setLoop",{instanceId:this._id,loop:e}),await this._updateDotLottieInstanceState())}async setLoopCount(e){this._created&&(await this._sendMessage("setLoopCount",{instanceId:this._id,loopCount:e}),await this._updateDotLottieInstanceState())}async resize(){if(!this._created)return;let{height:e,width:t}=il(this._canvas,this._dotLottieInstanceState.renderConfig.devicePixelRatio||Nt());await this._sendMessage("resize",{height:e,instanceId:this._id,width:t}),await this._updateDotLottieInstanceState()}async destroy(){this._created&&(this._created=!1,await this._sendMessage("destroy",{instanceId:this._id}),this._cleanupStateMachineListeners(),Ut._workerManager.unassignAnimationFromWorker(this._id),this._eventManager.removeAllEventListeners(),Y2&&this._canvas instanceof HTMLCanvasElement&&(K3.unobserve(this._canvas),Z3.unobserve(this._canvas)))}async freeze(){this._created&&(await this._sendMessage("freeze",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async unfreeze(){this._created&&(await this._sendMessage("unfreeze",{instanceId:this._id}),await this._updateDotLottieInstanceState())}async setBackgroundColor(e){this._created&&(await this._sendMessage("setBackgroundColor",{instanceId:this._id,backgroundColor:e}),await this._updateDotLottieInstanceState())}async loadAnimation(e){this._created&&(await this._sendMessage("loadAnimation",{animationId:e,instanceId:this._id}),await this._updateDotLottieInstanceState())}async setLayout(e){this._created&&(await this._sendMessage("setLayout",{instanceId:this._id,layout:e}),await this._updateDotLottieInstanceState())}async _updateDotLottieInstanceState(){if(!this._created)return;let e=await this._sendMessage("getDotLottieInstanceState",{instanceId:this._id});this._dotLottieInstanceState=e.state}markers(){return this._dotLottieInstanceState.markers}async setMarker(e){this._created&&(await this._sendMessage("setMarker",{instanceId:this._id,marker:e}),await this._updateDotLottieInstanceState())}async setThemeData(e){if(!this._created)return!1;let t=await this._sendMessage("setThemeData",{instanceId:this._id,themeData:e});return await this._updateDotLottieInstanceState(),t}async setViewport(e,t,i,r){return this._created?this._sendMessage("setViewport",{x:e,y:t,width:i,height:r,instanceId:this._id}):!1}async animationSize(){return this._created?this._sendMessage("animationSize",{instanceId:this._id}):{height:0,width:0}}async tween(e,t){return this._created?this._sendMessage("tween",{instanceId:this._id,frame:e,duration:t}):!1}async tweenToMarker(e,t){return this._created?this._sendMessage("tweenToMarker",{instanceId:this._id,marker:e,duration:t}):!1}async setTransform(e){return this._created?this._sendMessage("setTransform",{instanceId:this._id,transform:e}):!1}async getTransform(){if(this._created)return this._sendMessage("getTransform",{instanceId:this._id})}async _sendMessage(e,t,i){let r={id:`dotlottie-request-${rl()}`,method:e,params:t};return this._worker.postMessage(r,i||[]),new Promise((s,o)=>{let a=l=>{let u=l.data;u.id===r.id&&(this._worker.removeEventListener("message",a),u.error?o(new Error(`Failed to execute method ${e}: ${u.error}`)):s(u.result))};this._worker.addEventListener("message",a)})}addEventListener(e,t){this._eventManager.addEventListener(e,t)}removeEventListener(e,t){this._eventManager.removeEventListener(e,t)}static setWasmUrl(e){Ut._wasmUrl=e}async stateMachineLoad(e){if(!this._created)return!1;let t=await this._sendMessage("stateMachineLoad",{instanceId:this._id,stateMachineId:e});return await this._updateDotLottieInstanceState(),t}async stateMachineLoadData(e){if(!this._created)return!1;let t=await this._sendMessage("stateMachineLoadData",{instanceId:this._id,stateMachineData:e});return await this._updateDotLottieInstanceState(),t}async stateMachineStart(){if(!this._created)return!1;let e=await this._sendMessage("stateMachineStart",{instanceId:this._id});return e&&(this._setupStateMachineListeners(),await this._updateDotLottieInstanceState()),e}async stateMachineStop(){return this._created?(this._cleanupStateMachineListeners(),this._sendMessage("stateMachineStop",{instanceId:this._id})):!1}async stateMachineSetNumericInput(e,t){return this._created?this._sendMessage("stateMachineSetNumericInput",{instanceId:this._id,name:e,value:t}):!1}async stateMachineSetBooleanInput(e,t){return this._created?this._sendMessage("stateMachineSetBooleanInput",{instanceId:this._id,name:e,value:t}):!1}async stateMachineSetConfig(e){this._created&&this._sendMessage("stateMachineSetConfig",{instanceId:this._id,config:e})}async stateMachineSetStringInput(e,t){return this._created?this._sendMessage("stateMachineSetStringInput",{instanceId:this._id,name:e,value:t}):!1}async stateMachineGetNumericInput(e){if(this._created)return this._sendMessage("stateMachineGetNumericInput",{instanceId:this._id,name:e})}async stateMachineGetBooleanInput(e){if(this._created)return this._sendMessage("stateMachineGetBooleanInput",{instanceId:this._id,name:e})}async stateMachineGetStringInput(e){if(this._created)return this._sendMessage("stateMachineGetStringInput",{instanceId:this._id,name:e})}async stateMachineGetInputs(){if(this._created)return this._sendMessage("stateMachineGetInputs",{instanceId:this._id})}async stateMachineFireEvent(e){this._created&&this._sendMessage("stateMachineFireEvent",{instanceId:this._id,name:e})}async stateMachineGetStatus(){return this._created?this._sendMessage("stateMachineGetStatus",{instanceId:this._id}):""}async stateMachineGetCurrentState(){return this._created?this._sendMessage("stateMachineGetCurrentState",{instanceId:this._id}):""}async stateMachineGetActiveId(){return this._created?this._sendMessage("stateMachineGetActiveId",{instanceId:this._id}):""}async stateMachineOverrideState(e,t=!1){return this._created?this._sendMessage("stateMachineOverrideState",{instanceId:this._id,state:e,immediate:t}):!1}async stateMachineGet(e){return this._created?this._sendMessage("stateMachineGet",{instanceId:this._id,stateMachineId:e}):""}async stateMachineGetListeners(){return this._created?this._sendMessage("stateMachineGetListeners",{instanceId:this._id}):[]}async stateMachinePostClickEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostClickEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerUpEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerUpEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerDownEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerDownEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerMoveEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerMoveEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerEnterEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerEnterEvent",{instanceId:this._id,x:e,y:t})}async stateMachinePostPointerExitEvent(e,t){if(this._created)return this._sendMessage("stateMachinePostPointerExitEvent",{instanceId:this._id,x:e,y:t})}_onClick(e){let t=V3(e);t&&this._sendMessage("stateMachinePostClickEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerUp(e){let t=V3(e);t&&this._sendMessage("stateMachinePostPointerUpEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerDown(e){let t=V3(e);t&&this._sendMessage("stateMachinePostPointerDownEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerMove(e){let t=V3(e);t&&this._sendMessage("stateMachinePostPointerMoveEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerEnter(e){let t=V3(e);t&&this._sendMessage("stateMachinePostPointerEnterEvent",{instanceId:this._id,x:t.x,y:t.y})}_onPointerLeave(e){let t=V3(e);t&&this._sendMessage("stateMachinePostPointerExitEvent",{instanceId:this._id,x:t.x,y:t.y})}async _setupStateMachineListeners(){if(Y2&&this._canvas instanceof HTMLCanvasElement&&this.isLoaded){let e=await this._sendMessage("stateMachineGetListeners",{instanceId:this._id});if(e.length===0)return;this._cleanupStateMachineListeners(),e.includes("Click")&&(this._boundOnClick=this._onClick.bind(this),this._canvas.addEventListener("click",this._boundOnClick)),e.includes("PointerUp")&&(this._boundOnPointerUp=this._onPointerUp.bind(this),this._canvas.addEventListener("pointerup",this._boundOnPointerUp)),e.includes("PointerDown")&&(this._boundOnPointerDown=this._onPointerDown.bind(this),this._canvas.addEventListener("pointerdown",this._boundOnPointerDown)),e.includes("PointerMove")&&(this._boundOnPointerMove=this._onPointerMove.bind(this),this._canvas.addEventListener("pointermove",this._boundOnPointerMove)),e.includes("PointerEnter")&&(this._boundOnPointerEnter=this._onPointerEnter.bind(this),this._canvas.addEventListener("pointerenter",this._boundOnPointerEnter)),e.includes("PointerExit")&&(this._boundOnPointerLeave=this._onPointerLeave.bind(this),this._canvas.addEventListener("pointerleave",this._boundOnPointerLeave))}}_cleanupStateMachineListeners(){Y2&&this._canvas instanceof HTMLCanvasElement&&(this._boundOnClick&&(this._canvas.removeEventListener("click",this._boundOnClick),this._boundOnClick=null),this._boundOnPointerUp&&(this._canvas.removeEventListener("pointerup",this._boundOnPointerUp),this._boundOnPointerUp=null),this._boundOnPointerDown&&(this._canvas.removeEventListener("pointerdown",this._boundOnPointerDown),this._boundOnPointerDown=null),this._boundOnPointerMove&&(this._canvas.removeEventListener("pointermove",this._boundOnPointerMove),this._boundOnPointerMove=null),this._boundOnPointerEnter&&(this._canvas.removeEventListener("pointerenter",this._boundOnPointerEnter),this._boundOnPointerEnter=null),this._boundOnPointerLeave&&(this._canvas.removeEventListener("pointerleave",this._boundOnPointerLeave),this._boundOnPointerLeave=null))}};Q1(sl,"_workerManager",new Bx),Q1(sl,"_wasmUrl","");var kx=ie({props:{animationId:{type:String,required:!1},autoplay:{type:Boolean,required:!1},backgroundColor:{type:String,required:!1},data:{type:[String,ArrayBuffer],required:!1},loop:{type:Boolean,required:!1},mode:{type:String,required:!1},renderConfig:{type:Object,required:!1},segment:{type:Array,required:!1},speed:{type:Number,required:!1},src:{type:String,required:!1},useFrameInterpolation:{type:Boolean,required:!1},marker:{type:String,required:!1},playOnHover:{type:Boolean,required:!1},themeData:{type:String,required:!1},themeId:{type:String,required:!1},layout:{type:Object,required:!1},stateMachineId:{type:String,required:!1},stateMachineConfig:{type:Object,required:!1}},setup(n,{attrs:e,expose:t}){const i=ve(void 0),{animationId:r,backgroundColor:s,data:o,layout:a,loop:l,marker:u,mode:c,playOnHover:f,renderConfig:h,segment:d,speed:g,src:y,stateMachineConfig:m,stateMachineId:p,themeId:w,useFrameInterpolation:M}=au(n);let _=null;const A=I3(()=>{let L=n.autoplay;return typeof f?.value<"u"&&f.value&&(L=!1),L}),R=(L={})=>{_!==null&&_.load({animationId:r?.value,backgroundColor:s?.value,data:o?.value,layout:a?.value,loop:l?.value,marker:u?.value,mode:c?.value,autoplay:A.value,renderConfig:h?.value,segment:d?.value,speed:g?.value,src:y?.value,stateMachineConfig:m?.value,stateMachineId:p?.value,themeId:w?.value,useFrameInterpolation:M?.value,...L})};U2(()=>s?.value,L=>{_&&typeof L<"u"&&_.setBackgroundColor(L)}),U2(()=>u?.value,L=>{_&&typeof L<"u"&&_.setMarker(L)}),U2(()=>l?.value,L=>{_&&typeof L<"u"&&_.setLoop(L)}),U2(()=>c?.value,L=>{_&&typeof L<"u"&&_.setMode(L)}),U2(()=>d?.value,L=>{if(!_)return;const T=L?.[0],b=L?.[1];typeof T=="number"&&typeof b=="number"&&_.setSegment(T,b)}),U2(()=>g?.value,L=>{_&&typeof L<"u"&&_.setSpeed(L)}),U2(()=>M?.value,L=>{_&&typeof L<"u"&&_.setUseFrameInterpolation(L)}),U2(()=>r?.value,L=>{_&&_.isLoaded&&typeof L<"u"&&L!==_.activeAnimationId&&_.loadAnimation(L)}),U2(()=>n.themeData,L=>{_&&typeof L<"u"&&_.setTheme(L)}),U2(()=>w?.value,L=>{_&&typeof L<"u"&&_.setTheme(L)});function D(L){L.type==="mouseenter"?_?.play():_?.pause()}return U2(()=>f?.value,L=>{_&&typeof L<"u"&&L?(i.value?.addEventListener("mouseenter",D),i.value?.addEventListener("mouseleave",D)):(i.value?.removeEventListener("mouseenter",D),i.value?.removeEventListener("mouseleave",D))}),U2(()=>a?.value,L=>{_&&typeof L<"u"&&_.setLayout(L)},{deep:!0}),U2(()=>h?.value,L=>{_&&typeof L<"u"&&_.setRenderConfig(L)},{deep:!0}),U2(()=>o?.value,L=>{_&&(typeof L=="object"||typeof L=="string")&&R({data:L})},{deep:!0}),U2(()=>y?.value,L=>{_&&typeof L<"u"&&R({src:L})}),U2(()=>p?.value,L=>{_&&_.isLoaded&&(typeof L=="string"&&L?_.stateMachineLoad(L)&&_.stateMachineStart():_.stateMachineStop())}),U2(()=>m?.value,L=>{_&&_.stateMachineSetConfig(L??null)},{deep:!0}),Un(()=>{i.value&&(_=new Ox({canvas:i.value,...n,autoplay:A.value}),f?.value&&(i.value.addEventListener("mouseenter",D),i.value.addEventListener("mouseleave",D)))}),X0(()=>{i.value?.addEventListener("mouseenter",D),i.value?.addEventListener("mouseleave",D),_?.destroy()}),t({getDotLottieInstance:()=>_}),()=>Z2("div",{...e},Z2("canvas",{style:"height: 100%; width: 100%",ref:i}))}});const Hx={class:"loading"},zx=ie({__name:"Loading",setup(n){return(e,t)=>(P3(),aa("div",Hx,[O2(C2(kx),{ref:"dotRef",class:"icon",autoplay:"",loop:"",mode:"bounce",speed:.8635,src:"/assets/favicon.lottie"},null,512)]))}}),Vx=(n,e)=>{const t=n.__vccOpts||n;for(const[i,r]of e)t[i]=r;return t},Gx=Object.assign(Vx(zx,[["__scopeId","data-v-5077e8c1"]]),{__name:"Loading"}),Wx={class:"app"},Xx=ie({__name:"app",setup(n){return Un(()=>{const e=new E8,t=new z3(50),i=new yx,r=new xx;i.setSize(window.innerWidth,window.innerHeight),r.load("/assets/3d/yhtr24k.stl",s=>{const o=new A8({wireframe:!0}),a=new _e(s,o);a.rotateX(-1.5),e.add(a),t.position.z=.75,t.position.y=.25,t.position.x=-.15,e.add(a),i.setAnimationLoop(()=>{a.rotation.y+=.001,a.rotation.x+=.001,a.rotation.z+=.001,i.setSize(window.innerWidth,window.innerHeight),i.render(e,t)})}),document.querySelector("#l1c4-3d-bg")?.appendChild(i.domElement)}),(e,t)=>{const i=Qp,r=om;return P3(),aa(K2,null,[O2(Gx),O2(r,null,{default:Qo(()=>[$i("div",Wx,[O2(i)])]),_:1}),t[0]||(t[0]=$i("div",{id:"l1c4-3d-bg"},null,-1))],64)}}}),$x={__name:"nuxt-error-page",props:{error:Object},setup(n){const t=n.error;t.stack&&t.stack.split(`
`).splice(1).map(f=>({text:f.replace("webpack:/","").replace(".vue",".js").trim(),internal:f.includes("node_modules")&&!f.includes(".cache")||f.includes("internal")||f.includes("new Promise")})).map(f=>`<span class="stack${f.internal?" internal":""}">${f.text}</span>`).join(`
`);const i=Number(t.statusCode||500),r=i===404,s=t.statusMessage??(r?"Page Not Found":"Internal Server Error"),o=t.message||t.toString(),a=void 0,c=r?Ls(()=>C3(()=>import("./Be_ab6UP.js"),__vite__mapDeps([19,4,20,21]),import.meta.url)):Ls(()=>C3(()=>import("./WHaUAy5Z.js"),__vite__mapDeps([22,20,23]),import.meta.url));return(f,h)=>(P3(),Ie(C2(c),L5(wc({statusCode:C2(i),statusMessage:C2(s),description:C2(o),stack:C2(a)})),null,16))}},qx={key:0},ol={__name:"nuxt-root",setup(n){const e=()=>null,t=W2(),i=t.deferHydration();if(t.isHydrating){const u=t.hooks.hookOnce("app:error",i);O3().beforeEach(u)}const r=!1;ft(qt,_r()),t.hooks.callHookWith(u=>u.map(c=>c()),"vue:setup");const s=gr(),o=!1,a=/bot\b|chrome-lighthouse|facebookexternalhit|google\b/i;Jl((u,c,f)=>{if(t.hooks.callHook("vue:error",u,c,f).catch(h=>console.error("[nuxt] Error in `vue:error` hook",h)),a.test(navigator.userAgent))return t.hooks.callHook("app:error",u),console.error(`[nuxt] Not rendering error page for bot with user agent \`${navigator.userAgent}\`:`,u),!1;if(s6(u)&&(u.fatal||u.unhandled))return t.runWithContext(()=>Lt(u)),!1});const l=!1;return(u,c)=>(P3(),Ie(oa,{onResolve:C2(i)},{default:Qo(()=>[C2(o)?(P3(),aa("div",qx)):C2(s)?(P3(),Ie(C2($x),{key:1,error:C2(s)},null,8,["error"])):C2(l)?(P3(),Ie(C2(e),{key:2,context:C2(l)},null,8,["context"])):C2(r)?(P3(),Ie(Du(C2(r)),{key:3})):(P3(),Ie(C2(Xx),{key:4}))]),_:1},8,["onResolve"]))}};let al;{let n;al=async function(){if(n)return n;const t=!!(window.__NUXT__?.serverRendered??document.getElementById("__NUXT_DATA__")?.dataset.ssr==="true"),i=t?ih(ol):nh(ol),r=dd({vueApp:i});async function s(o){await r.callHook("app:error",o),r.payload.error||=Wt(o)}i.config.errorHandler=s,r.hook("app:suspense:resolve",()=>{i.config.errorHandler===s&&(i.config.errorHandler=void 0)}),!t&&b4.id&&r.hook("app:suspense:resolve",()=>{document.getElementById(b4.id)?.remove()});try{await _d(r,Zp)}catch(o){s(o)}try{await r.hooks.callHook("app:created",i),await r.hooks.callHook("app:beforeMount",i),i.mount(ud),await r.hooks.callHook("app:mounted",i),await D0()}catch(o){s(o)}return i},n=al().catch(e=>{throw console.error("Error while mounting app:",e),e})}export{wd as $,sM as A,O3 as B,M2 as C,kx as D,jx as E,K2 as F,Zx as G,X0 as H,vt as I,I3 as J,Rf as K,lr as L,q6 as M,Jx as N,_r as O,z3 as P,Xt as Q,xa as R,E8 as S,eM as T,n9 as U,rM as V,yx as W,Z2 as X,Yx as Y,zc as Z,Vx as _,$i as a,Wp as a0,Kt as a1,fa as a2,mr as a3,nM as a4,Rh as a5,En as a6,tM as a7,O2 as b,aa as c,Ac as d,W2 as e,l6 as f,ie as g,ia as h,o3 as i,Un as j,xx as k,_e as l,A8 as m,Kp as n,P3 as o,om as p,C2 as q,Gx as r,ve as s,U5 as t,iM as u,Ie as v,Qo as w,Kx as x,ar as y,Qx as z};
